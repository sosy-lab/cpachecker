# This file is part of CPAchecker,
# a tool for configurable software verification:
# https://cpachecker.sosy-lab.org
#
# SPDX-FileCopyrightText: 2007-2020 Dirk Beyer <https://www.sosy-lab.org>
#
# SPDX-License-Identifier: Apache-2.0

#include predicateAnalysis.properties

# allows the execution of a distributed predicate analysis by
# spawning workers parallely analyzing blocks
# workers can produce summaries for blocks in two directions: forward and backward
# the communication is based on messages

analysis.algorithm.configurableComponents=true
analysis.useLoopStructure=true

[distributedSummaries.worker]
forwardConfiguration=distributed-block-summaries/predicateAnalysis-block-forward.properties
backwardConfiguration=distributed-block-summaries/predicateAnalysis-block-backward.properties

# we need wall time limit because block analysis makes extensive use of CPU
[limits.time]
cpu=60min
wall=15min

# needed for decomposition of blocks
# set flags to true to begin/end a block
# the more flags are set to true the more blocks are generated
[cpa.predicate.blk]
alwaysAtJoin=true
alwaysAtBranch=true
alwaysAtProgramExit=true
alwaysAtLoops=true
alwaysAtFunctions=false
alwaysAfterThreshold=false
alwaysAtFunctionCallNodes=false

[distributedSummaries]
# configure worker
decompositionType=GIVEN_SIZE
workerType=SMART
# enable to log messages
spawnUtilWorkers=false
