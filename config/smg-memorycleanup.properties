# This file is part of CPAchecker,
# a tool for configurable software verification:
# https://cpachecker.sosy-lab.org
#
# SPDX-FileCopyrightText: 2007-2021 Dirk Beyer <https://www.sosy-lab.org>
#
# SPDX-License-Identifier: Apache-2.0

# ----------------------------------------------------------------------
# This configuration file uses a parallel portfolio of different 
# SMG-Analyses to analyse MemoryCleanup properties.
# ----------------------------------------------------------------------

#include components/smg-parallel-memcleanup.properties

# specification for memory cleanup
specification = specification/valid-memorycleanup.spc

# Calls to functions that are irrelevant, e.g. time(). We want to check the inputs, but are ok with the rest
cpa.smg2.handleUnknownFunctions=ASSUME_EXTERNAL_ALLOCATED

# The file to which the witness is written (required by competition).
counterexample.export.graphml = witness.graphml
# cpa.arg.proofWitness = witness.graphml
cpa.arg.yamlProofWitness = witness.yml
counterexample.export.yaml = witness.yml
# Compression is not good for memsafety/cleanup witnesses
counterexample.export.compressWitness = false
cpa.arg.compressWitness = false

# simplified CFA is bad for witnesses
cfa.simplifyCfa = false
cfa.findLiveVariables = true

# atexit is supported by SMG2
cpa.callstack.unsupportedFunctions=pthread_create,pthread_key_create,sin,cos,__builtin_uaddl_overflow,_longjmp,longjmp,siglongjmp