# This file is part of CPAchecker,
# a tool for configurable software verification:
# https://cpachecker.sosy-lab.org
#
# SPDX-FileCopyrightText: 2007-2020 Dirk Beyer <https://www.sosy-lab.org>
#
# SPDX-License-Identifier: Apache-2.0

# ----------------------------------------------------------------------
# SMGv2 w symbolic execution and overapproximations for symbolic offsets and
# a cex check with more precise SMG-analysis for bug hunting properties
# ------------------------------------------------------------------

# Default ressource limits
#include includes/resource-limits.properties

#include includes/smg2.properties

specification = specification/default.spc

# Check counterexamples.
analysis.checkCounterexamples = true

# use CPAchecker to analyse counterexamples
counterexample.checker = CPACHECKER
counterexample.checker.config = includes/smg2.properties
counterexample.continueAfterInfeasibleError = true
counterexample.checker.checkMemorySafetySubproperty = true

memorysafety.config = smg2-memsafety-symbolic-memory-access.properties
memorycleanup.config = smg2-memsafety-symbolic-memory-access.properties

cpa.smg2.enableMallocFail = false
cpa.smg2.memoryErrors = true

cpa.smg2.overapproximateSymbolicOffsets = true

# If merging, then overapproximate unequal symbolic and numeric values 
cpa.smg2.merge.overapproximateSymbolicConstraints=true
cpa.smg2.merge.overapproximateConcreteValues=true
# And merge all states
cpa.smg2.merge.exclusivelyWithAbstractionPresent=false

cpa.smg2.abstraction.abstractLinkedLists = true

cfa.findLiveVariables = true
