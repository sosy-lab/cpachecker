# This file is part of CPAchecker,
# a tool for configurable software verification:
# https://cpachecker.sosy-lab.org
#
# SPDX-FileCopyrightText: 2007-2020 Dirk Beyer <https://www.sosy-lab.org>
#
# SPDX-License-Identifier: Apache-2.0

# ----------------------------------------------------------------------
# This configuration file uses a combination of value analysis
# and symbolic memory graphs to verify memory safety properties
# for witness checking.
# ----------------------------------------------------------------------

#include witness-validation-valueAnalysis.properties
#include includes/witness-export.properties

# specification to find memory related problems
specification = specification/memorysafety.spc

CompositeCPA.cpas = cpa.location.LocationCPA, cpa.callstack.CallstackCPA, cpa.functionpointer.FunctionPointerCPA, cpa.value.ValueAnalysisCPA, cpa.smg2.SMGCPA

# no counterexample check for memory safety
analysis.checkCounterexamples = false

cpa.smg2.enableMallocFail       = false
cpa.smg2.handleUnknownFunctions=ASSUME_SAFE

# This is the configuration used when verifying memory safety properties (actually this configuration).
memorysafety.config = witness-validation--memorysafety.properties

# Symbolic execution options
# trackPredicates == check at assumes (or error locations) and track the predicates
cpa.smg2.trackPredicates = true
# trackErrorPredicates == check for MemorySafety
cpa.smg2.trackErrorPredicates = true

# Disable precision adjustment searches as we don't use CEGAR here
cpa.smg2.abstraction.abstractProgramVariables = false
cpa.smg2.abstraction.abstractHeapValues = false

cfa.simplifyCfa = false
