# This file is part of CPAchecker,
# a tool for configurable software verification:
# https://cpachecker.sosy-lab.org
#
# SPDX-FileCopyrightText: 2007-2025 Dirk Beyer <https://www.sosy-lab.org>
#
# SPDX-License-Identifier: Apache-2.0

# ----------------------------------------------------------------------
# This configuration file uses a sequence of different 
# analyses to check for program termination for SV-COMP26.
# ----------------------------------------------------------------------

#include includes/resource-limits.properties

# Use sequential combination of analyses.
analysis.restartAfterUnknown = true

# Use this configuration as configuration for termination analysis.
termination.config = svcomp26--termination.properties

# enable termination analysis
analysis.algorithm.termination = true

# Do not use default specification.
specification =

# sequence of termination analyses used
restartAlgorithm.configFiles = components/svcomp26--parallel-termination.properties, \
                               components/svcomp26--termination-recursion.properties::if-recursive

# Do not compress witnesses for SVCPOMP; not all validators support compressed witnesses
cpa.arg.compressWitness = false

# do not use the ARG to export the counterexample 
# because it only exports the stem (path to infinite loop) and
# we can write the complete counterexample
counterexample.export.exportWitness = false

# Prevent the merge of two abstract states where one of them
# already has at least one child state.
# This prevents warnings about unexpected ARG branching
cpa.arg.lateMerge = prevent
