# This file is part of CPAchecker,
# a tool for configurable software verification:
# https://cpachecker.sosy-lab.org
#
# SPDX-FileCopyrightText: 2007-2020 Dirk Beyer <https://www.sosy-lab.org>
#
# SPDX-License-Identifier: Apache-2.0

// This file contains all the necessary options to make an existing PredicateCPA use nonlinear integer encoding

// Use unbounded integers with wraparounds and range constraints in formulas instead of bitvectors
cpa.predicate.encodeBitvectorAs = INTEGER
cpa.predicate.useNonlinearArithmeticForIntAsBv = true
solver.nonLinearArithmetic = USE
cpa.predicate.addRangeConstraintsForNondet = true

// Precise handling of structs only possible with bitvectors
cpa.predicate.handleFieldAccess = false