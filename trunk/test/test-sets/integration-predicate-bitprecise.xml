<?xml version="1.0"?>

<!--
This file is part of CPAchecker,
a tool for configurable software verification:
https://cpachecker.sosy-lab.org

SPDX-FileCopyrightText: 2007-2020 Dirk Beyer <https://www.sosy-lab.org>

SPDX-License-Identifier: Apache-2.0
-->

<!DOCTYPE benchmark PUBLIC "+//IDN sosy-lab.org//DTD BenchExec benchmark 1.0//EN" "http://www.sosy-lab.org/benchexec/benchmark-1.0.dtd">
<benchmark tool="cpachecker" timelimit="60 s" hardtimelimit="90 s" memlimit="5 GB" cpuCores="1">

  <option name="-noout"/>
  <option name="-heap">2000M</option>

  <rundefinition>
    <option name="-predicateAnalysis"/>
  </rundefinition>

  <tasks>
    <includesfile>../programs/simple/simple.set</includesfile>
    <propertyfile>../config/properties/unreach-label.prp</propertyfile>
  </tasks>
  <tasks>
    <includesfile>../programs/simple/simple.set</includesfile>
    <propertyfile>../config/properties/unreach-call.prp</propertyfile>
  </tasks>
  <tasks>
    <includesfile>../programs/simple/simple.set</includesfile>
    <propertyfile>../config/Assertion.spc</propertyfile>
  </tasks>
  <tasks>
    <includesfile>../programs/benchmarks/ReachSafety-BitVectors.set</includesfile>
    <propertyfile>../programs/benchmarks/properties/unreach-call.prp</propertyfile>
    <!-- SV-Comp files assume that malloc always succeeds -->
    <option name="-setprop">cpa.predicate.memoryAllocationsAlwaysSucceed=true</option>
  </tasks>
  <tasks>
    <includesfile>../programs/benchmarks/ReachSafety-Floats.set</includesfile>
    <propertyfile>../programs/benchmarks/properties/unreach-call.prp</propertyfile>
    <!-- SV-Comp files assume that malloc always succeeds -->
    <option name="-setprop">cpa.predicate.memoryAllocationsAlwaysSucceed=true</option>
    <exclude>../programs/benchmarks/float-benchs/image_filter.yml</exclude> <!-- flapping timeout / interpolation failure -->
    <exclude>../programs/benchmarks/floats-cdfpl/newton_1_6.yml</exclude> <!-- flapping timeout -->
    <exclude>../programs/benchmarks/floats-cdfpl/newton_2_8.yml</exclude> <!-- flapping timeout -->
  </tasks>
  <tasks>
    <includesfile>../programs/benchmarks/ReachSafety-ControlFlow.set</includesfile>
    <propertyfile>../programs/benchmarks/properties/unreach-call.prp</propertyfile>
    <!-- SV-Comp files assume that malloc always succeeds -->
    <option name="-setprop">cpa.predicate.memoryAllocationsAlwaysSucceed=true</option>
  </tasks>
  <tasks>
    <includesfile>../programs/benchmarks/ReachSafety-Heap.set</includesfile>
    <propertyfile>../programs/benchmarks/properties/unreach-call.prp</propertyfile>
    <!-- SV-Comp files assume that malloc always succeeds -->
    <option name="-setprop">cpa.predicate.memoryAllocationsAlwaysSucceed=true</option>
  </tasks>
  <tasks>
    <includesfile>../programs/benchmarks/ReachSafety-Loops.set</includesfile>
    <propertyfile>../programs/benchmarks/properties/unreach-call.prp</propertyfile>
    <!-- SV-Comp files assume that malloc always succeeds -->
    <option name="-setprop">cpa.predicate.memoryAllocationsAlwaysSucceed=true</option>
    <exclude>../programs/benchmarks/nla-digbench-scaling/cohendiv-ll_valuebound2.yml</exclude> <!-- flapping timeout -->
    <exclude>../programs/benchmarks/nla-digbench-scaling/geo3-ll_valuebound2.yml</exclude> <!-- flapping timeout -->
  </tasks>
  <tasks>
    <includesfile>../programs/benchmarks/ReachSafety-Sequentialized.set</includesfile>
    <propertyfile>../programs/benchmarks/properties/unreach-call.prp</propertyfile>
    <!-- SV-Comp files assume that malloc always succeeds -->
    <option name="-setprop">cpa.predicate.memoryAllocationsAlwaysSucceed=true</option>
    <exclude>../programs/benchmarks/seq-mthreaded/rek*</exclude> <!-- only timeouts -->
    <exclude>../programs/benchmarks/seq-pthread/*</exclude> <!-- only timeouts -->
    <exclude>../programs/benchmarks/seq-mthreaded/pals_STARTPALS_ActiveStandby.5.ufo.BOUNDED-10.pals.yml</exclude> <!-- flapping timeout -->
    <exclude>../programs/benchmarks/seq-mthreaded/pals_STARTPALS_Triplicated.ufo.UNBOUNDED.pals.yml</exclude> <!-- flapping timeout -->
    <exclude>../programs/benchmarks/seq-mthreaded/pals_floodmax.4.1.ufo.BOUNDED-8.pals.yml</exclude> <!-- flapping timeout -->
    <exclude>../programs/benchmarks/seq-mthreaded-reduced/pals_floodmax.5.2.ufo.BOUNDED-10.pals.c.v+cfa-reducer.yml</exclude> <!-- flapping timeout -->
    <exclude>../programs/benchmarks/seq-mthreaded-reduced/pals_opt-floodmax.4.1.ufo.BOUNDED-8.pals.c.v+cfa-reducer.yml</exclude> <!-- flapping timeout -->
    <exclude>../programs/benchmarks/seq-mthreaded-reduced/pals_opt-floodmax.4.3.ufo.UNBOUNDED.pals.c.v+cfa-reducer.yml</exclude> <!-- flapping timeout -->
    <exclude>../programs/benchmarks/systemc/toy.cil.yml</exclude> <!-- flapping timeout -->
  </tasks>
  <tasks>
    <includesfile>../programs/benchmarks/SoftwareSystems-DeviceDriversLinux64-ReachSafety.set</includesfile>
    <excludesfile>integration-DeviceDriversLinux64.set</excludesfile>
    <propertyfile>../programs/benchmarks/properties/unreach-call.prp</propertyfile>
    <option name="-skipRecursion"/>
    <!-- SV-Comp files assume that malloc always succeeds -->
    <option name="-setprop">cpa.predicate.memoryAllocationsAlwaysSucceed=true</option>
    <exclude>../programs/benchmarks/ldv-linux-3.4-simple/43_1a_cilled_ok_nondet_linux-43_1a-drivers--i2c--busses--i2c-diolan-u2c.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.yml</exclude> <!-- flapping timeout -->
    <exclude>../programs/benchmarks/ldv-linux-3.4-simple/43_1a_cilled_ok_nondet_linux-43_1a-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.yml</exclude> <!-- flapping timeout -->
  </tasks>
</benchmark>
