<?xml version="1.0"?>

<!--
This file is part of CPAchecker,
a tool for configurable software verification:
https://cpachecker.sosy-lab.org

SPDX-FileCopyrightText: 2007-2020 Dirk Beyer <https://www.sosy-lab.org>

SPDX-License-Identifier: Apache-2.0
-->

<!DOCTYPE benchmark PUBLIC "+//IDN sosy-lab.org//DTD BenchExec benchmark 1.0//EN" "http://www.sosy-lab.org/benchexec/benchmark-1.0.dtd">
<benchmark tool="cpachecker" timelimit="60 s" hardtimelimit="90 s" memlimit="2 GB" cpuCores="1">

  <!--
    This is a large collection of different configurations using BAM:
    - analysis of recursive programs
    - parallel BAM
    - BAM with value analysis
    - BAM with predicate analysis
  -->

  <columns>
    <column title="block building time">Time for building block partitioning</column>
    <column title="#blocks">Number of blocks</column>
  </columns>

  <option name="-noout"/>
  <option name="-heap">1500M</option>
  <!-- SV-Comp files assume that malloc always succeeds -->
  <option name="-setprop">cpa.predicate.memoryAllocationsAlwaysSucceed=true</option>

  <rundefinition/> <!-- BuildBot does not like names! -->

  <propertyfile>../programs/benchmarks/properties/unreach-call.prp</propertyfile>

  <!-- analysis of recursive programs -->
  <tasks name="value">
    <include>../programs/benchmarks/recursive-simple/a*.yml</include>
    <include>../programs/benchmarks/recursive-simple/f*.yml</include>
    <exclude>../programs/benchmarks/recursive-simple/fibo_2calls_15-2.yml</exclude>
    <option name="-valueAnalysis-bam-rec"/>
  </tasks>

  <tasks name="interval">
    <include>../programs/benchmarks/recursive-simple/i*.yml</include>
    <option name="-intervalAnalysis-bam-rec"/>
  </tasks>

  <tasks name="valuePredicate">
    <include>../programs/benchmarks/recursive-simple/s*.yml</include>
    <option name="-valueAnalysis-predicateAnalysis-bam-rec"/>
  </tasks>

  <tasks name="predicate_tree">
    <include>../programs/benchmarks/recursive/*.yml</include>
    <exclude>../programs/benchmarks/recursive/*01*.yml</exclude>
    <exclude>../programs/benchmarks/recursive/*02*.yml</exclude>
    <exclude>../programs/benchmarks/recursive/*03*.yml</exclude>
    <option name="-predicateAnalysis-bam-rec"/>
  </tasks>

  <tasks name="predicate_tree_nested">
    <include>../programs/benchmarks/recursive/*03*.yml</include>
    <option name="-setprop">cpa.predicate.refinement.strategy=tree_nested</option>
    <option name="-setprop">solver.solver=mathsat5</option>
    <option name="-predicateAnalysis-bam-rec"/>
  </tasks>

  <tasks name="predicate_tree_cpachecker">
    <include>../programs/benchmarks/recursive/*02*.yml</include>
    <option name="-setprop">cpa.predicate.refinement.strategy=tree_cpachecker</option>
    <option name="-setprop">solver.solver=mathsat5</option>
    <option name="-predicateAnalysis-bam-rec"/>
  </tasks>

  <tasks name="predicate_tree_wellscoped">
    <include>../programs/benchmarks/recursive/*01*.yml</include>
    <option name="-setprop">cpa.predicate.refinement.strategy=tree_wellscoped</option>
    <option name="-setprop">solver.solver=mathsat5</option>
    <option name="-predicateAnalysis-bam-rec"/>
  </tasks>


  <!-- parallel BAM -->
  <tasks name="VA-parallelBam-noCegar">
    <option name="-valueAnalysis-parallelBam"/>
    <option name='-setprop'>algorithm.parallelBam.numberOfThreads=8</option>
    <include>../programs/benchmarks/eca-rers2012/Problem03*.yml</include>
  </tasks>
  <tasks name="VA-parallelBam-Cegar">
    <option name="-valueAnalysis-parallelBam-Cegar"/>
    <option name='-setprop'>algorithm.parallelBam.numberOfThreads=8</option>
    <include>../programs/benchmarks/eca-rers2012/Problem02*.yml</include>
  </tasks>


  <!-- BAM with value analysis -->
  <!-- TODO -->


  <!-- BAM with predicate analysis -->
  <tasks>
    <option name="-predicateAnalysis-bam"/>
    <includesfile>../programs/simple/simple.set</includesfile>
    <propertyfile>../config/properties/unreach-label.prp</propertyfile>
  </tasks>
  <tasks>
    <option name="-predicateAnalysis-bam"/>
    <includesfile>../programs/simple/simple.set</includesfile>
    <propertyfile>../config/properties/unreach-call.prp</propertyfile>
  </tasks>
  <tasks>
    <option name="-predicateAnalysis-bam"/>
    <includesfile>../programs/simple/simple.set</includesfile>
    <propertyfile>../config/Assertion.spc</propertyfile>
  </tasks>
  <tasks>
    <option name="-predicateAnalysis-bam"/>
    <option name="-setprop">analysis.checkCounterexamples=true</option>
    <option name="-setprop">counterexample.checker=CBMC</option>
    <includesfile>../programs/benchmarks/ReachSafety-ControlFlow.set</includesfile>
    <exclude reason="timeout">../programs/benchmarks/openssl/s3_srvr.blast.1*</exclude>
    <exclude reason="partial set only">../programs/benchmarks/ntdrivers/*</exclude>
    <exclude reason="partial set only">../programs/benchmarks/openssl/*</exclude>
    <exclude reason="partial set only">../programs/benchmarks/ntdrivers-simplified/*</exclude>
    <exclude reason="partial set only">../programs/benchmarks/openssl-simplified/*</exclude>
    <exclude reason="partial set only">../programs/benchmarks/locks/*</exclude>
    <propertyfile>../config/properties/unreach-call.prp</propertyfile>
  </tasks>
  <tasks>
    <option name="-predicateAnalysis-bam"/>
    <includesfile>../programs/benchmarks/ReachSafety-Heap.set</includesfile>
    <!-- exclude tasks from Forester set -->
    <exclude>../programs/benchmarks/forester-heap/*</exclude>
    <propertyfile>../config/properties/unreach-call.prp</propertyfile>
  </tasks>
  <tasks>
    <option name="-predicateAnalysis-bam"/>
    <option name="-setprop">analysis.checkCounterexamples=true</option>
    <option name="-setprop">counterexample.checker=CBMC</option>
    <includesfile>../programs/benchmarks/ReachSafety-Loops.set</includesfile>
    <exclude>../programs/benchmarks/loop-invgen/*</exclude> <!-- mostly timeout -->
    <exclude>../programs/benchmarks/loop-lit/*</exclude> <!-- mostly timeout -->
    <exclude>../programs/benchmarks/loop-new/*</exclude> <!-- mostly timeout -->
    <exclude>../programs/benchmarks/loop-acceleration/*</exclude> <!-- mostly timeout -->
    <exclude>../programs/benchmarks/nla-digbench-scaling/divbin2_valuebound10*</exclude> <!-- flapping timeout -->
    <exclude>../programs/benchmarks/nla-digbench-scaling/knuth_valuebound100*</exclude> <!-- flapping timeout -->
    <propertyfile>../config/properties/unreach-call.prp</propertyfile>
  </tasks>
  <tasks>
    <option name="-predicateAnalysis-bam"/>
    <includesfile>../programs/benchmarks/ReachSafety-Sequentialized.set</includesfile>
    <exclude>../programs/benchmarks/seq-mthreaded/*</exclude> <!-- mostly timeout -->
    <exclude>../programs/benchmarks/seq-mthreaded-reduced/*lcr-var*</exclude> <!-- mostly timeout -->
    <exclude>../programs/benchmarks/seq-mthreaded-reduced//pals_floodmax.4.4.ufo.UNBOUNDED.pals.c.v+cfa-reducer.yml</exclude> <!-- flapping timeout -->
    <exclude>../programs/benchmarks/seq-mthreaded-reduced/pals_floodmax.5.2.ufo.UNBOUNDED.pals.c.v+nlh-reducer.yml</exclude> <!-- flapping timeout -->
    <exclude>../programs/benchmarks/seq-mthreaded-reduced/pals_floodmax.5.2.ufo.UNBOUNDED.pals.c.v+cfa-reducer.yml</exclude> <!-- flapping timeout -->
    <exclude>../programs/benchmarks/seq-mthreaded-reduced/pals_opt-floodmax.3.4.ufo.BOUNDED-6.pals.c.v+cfa-reducer.yml</exclude> <!-- flapping timeout -->
    <exclude>../programs/benchmarks/seq-mthreaded-reduced/pals_opt-floodmax.4.1.ufo.UNBOUNDED.pals.c.v+lhb-reducer.yml</exclude> <!-- flapping timeout -->
    <exclude>../programs/benchmarks/seq-mthreaded-reduced/pals_opt-floodmax.4.3.ufo.BOUNDED-8.pals.c.v+cfa-reducer.yml</exclude> <!-- flapping timeout -->
    <exclude>../programs/benchmarks/seq-mthreaded-reduced/pals_lcr.3.1.ufo.BOUNDED-6.pals.c.v+cfa-reducer.yml</exclude> <!-- flapping timeout -->
    <exclude>../programs/benchmarks/seq-mthreaded-reduced/pals_lcr.3.1.ufo.UNBOUNDED.pals.c.v+sep-reducer.yml</exclude> <!-- flapping timeout -->
    <exclude>../programs/benchmarks/seq-pthread/*</exclude>
    <exclude>../programs/benchmarks/systemc/token_ring.*</exclude>
    <exclude>../programs/benchmarks/systemc/transmitter.1*</exclude>
    <propertyfile>../config/properties/unreach-call.prp</propertyfile>
  </tasks>
  <tasks>
    <option name="-predicateAnalysis-bam"/>
    <propertyfile>../programs/benchmarks/properties/unreach-call.prp</propertyfile>
    <option name="-skipRecursion"/>
    <option name="-setprop">analysis.checkCounterexamples=true</option>
    <option name="-setprop">counterexample.checker=CBMC</option>
    <includesfile>../programs/benchmarks/SoftwareSystems-DeviceDriversLinux64-ReachSafety.set</includesfile>
    <excludesfile>integration-DeviceDriversLinux64.set</excludesfile>
    <!-- exclude some files that are nearly identical in complexity and runtime, some of them are timeout -->
    <exclude>../programs/benchmarks/ldv-linux-3.0/module_get_put-drivers-*</exclude>
    <exclude>../programs/benchmarks/ldv-linux-3.4-simple/43_1a_cilled_ok_nondet_linux-43_1a-drivers--input--*</exclude>
    <exclude>../programs/benchmarks/ldv-linux-3.4-simple/43_1a_cilled_ok_nondet_linux-43_1a-drivers--media--*</exclude>
    <exclude>../programs/benchmarks/ldv-linux-3.4-simple/43_1a_cilled_ok_nondet_linux-43_1a-drivers--usb--*</exclude>
    <exclude>../programs/benchmarks/ldv-linux-3.4-simple/43_1a_cilled_ok_nondet_linux-43_1a-drivers--net--wireless--mwifiex--mwifiex_pcie.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.yml</exclude> <!-- flapping timeout -->
    <exclude>../programs/benchmarks/ldv-linux-3.4-simple/43_1a_cilled_ok_nondet_linux-43_1a-drivers--power--max8903_charger.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.yml</exclude> <!-- flapping timeout/OOM -->
    <exclude>../programs/benchmarks/ldv-linux-3.4-simple/43_1a_cilled_ok_linux-43_1a-drivers--usb--gadget--mv_udc.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.yml</exclude> <!-- flapping timeout/OOM -->
  </tasks>

</benchmark>
