<?xml version="1.0"?>

<!--
This file is part of CPAchecker,
a tool for configurable software verification:
https://cpachecker.sosy-lab.org

SPDX-FileCopyrightText: 2007-2020 Dirk Beyer <https://www.sosy-lab.org>

SPDX-License-Identifier: Apache-2.0
-->

<!DOCTYPE benchmark PUBLIC "+//IDN sosy-lab.org//DTD BenchExec benchmark 1.0//EN" "http://www.sosy-lab.org/benchexec/benchmark-1.0.dtd">
<benchmark tool="cpachecker" timelimit="60 s" hardtimelimit="90 s" memlimit="3 GB" cpuCores="1">

  <option name="-noout"/>
  <option name="-heap">2000M</option>

  <rundefinition>
    <option name="-valueAnalysis-Cegar-pcc-result-check-partial-partitioned"/>
  </rundefinition>


  <tasks>
    <includesfile>../programs/benchmarks/ReachSafety-BitVectors.set</includesfile>
    <propertyfile  expectedverdict="true">../programs/benchmarks/properties/unreach-call.prp</propertyfile>
    <!-- SV-Comp files assume that malloc always succeeds -->
    <option name="-setprop">cpa.predicate.memoryAllocationsAlwaysSucceed=true</option>
  </tasks>
  <tasks>
    <includesfile>../programs/benchmarks/ReachSafety-Floats.set</includesfile>
    <propertyfile  expectedverdict="true">../programs/benchmarks/properties/unreach-call.prp</propertyfile>
    <!-- SV-Comp files assume that malloc always succeeds -->
    <option name="-setprop">cpa.predicate.memoryAllocationsAlwaysSucceed=true</option>
    <!-- exclude timeout, unknown tasks since PCC proof checking likely not started-->
    <exclude>../programs/benchmarks/floats-cdfpl/*</exclude>
    <!-- exclude flipping between unknown and timeout -->
    <exclude>../programs/benchmarks/floats-cbmc-regression/float4.yml</exclude>
  </tasks>
  <tasks>
    <includesfile>../programs/benchmarks/ReachSafety-ControlFlow.set</includesfile>
    <propertyfile  expectedverdict="true">../programs/benchmarks/properties/unreach-call.prp</propertyfile>
    <!-- SV-Comp files assume that malloc always succeeds -->
    <option name="-setprop">cpa.predicate.memoryAllocationsAlwaysSucceed=true</option>
    <!-- exclude timeout, unknown tasks since PCC proof checking likely not started-->
    <exclude>../programs/benchmarks/openssl/*</exclude>
  </tasks>
  <tasks>
    <includesfile>../programs/benchmarks/ReachSafety-Heap.set</includesfile>
    <propertyfile  expectedverdict="true">../programs/benchmarks/properties/unreach-call.prp</propertyfile>
    <!-- SV-Comp files assume that malloc always succeeds -->
    <option name="-setprop">cpa.predicate.memoryAllocationsAlwaysSucceed=true</option>
    <!-- exclude timeout, unknown tasks since PCC proof checking likely not started-->
    <exclude>../programs/benchmarks/heap-manipulation/*</exclude>
    <exclude>../programs/benchmarks/list-properties/*</exclude>
    <exclude>../programs/benchmarks/ldv-regression/test[0-9][0-9]*</exclude>
    <exclude>../programs/benchmarks/forester-heap/*</exclude>
    <exclude>../programs/benchmarks/list-ext2-properties/*</exclude>
    <exclude>../programs/benchmarks/ldv-sets/*</exclude>
  </tasks>
  <tasks>
    <includesfile>../programs/benchmarks/ReachSafety-Sequentialized.set</includesfile>
    <propertyfile  expectedverdict="true">../programs/benchmarks/properties/unreach-call.prp</propertyfile>
    <!-- SV-Comp files assume that malloc always succeeds -->
    <option name="-setprop">cpa.predicate.memoryAllocationsAlwaysSucceed=true</option>
    <exclude>../programs/benchmarks/seq-mthreaded/*</exclude> <!-- only timeouts -->
    <!-- exclude timeout, unknown tasks since PCC proof checking likely not started-->
    <exclude>../programs/benchmarks/systemc/t*</exclude>
    <exclude>../programs/benchmarks/seq-pthread/*</exclude>
  </tasks>
  <tasks>
    <includesfile>../programs/benchmarks/SoftwareSystems-DeviceDriversLinux64-ReachSafety.set</includesfile>
    <excludesfile>integration-DeviceDriversLinux64.set</excludesfile>
    <propertyfile  expectedverdict="true">../programs/benchmarks/properties/unreach-call.prp</propertyfile>
    <option name="-skipRecursion"/>
    <!-- SV-Comp files assume that malloc always succeeds -->
    <option name="-setprop">cpa.predicate.memoryAllocationsAlwaysSucceed=true</option>
  </tasks>

  <columns>
    <column title="total">time for CPAchecker</column>
    <column title="verification">Time for Verification</column>
    <column title="pcc check">Time for Result Check</column>
  </columns>
</benchmark>
