<?xml version="1.0"?>

<!--
This file is part of CPAchecker,
a tool for configurable software verification:
https://cpachecker.sosy-lab.org

SPDX-FileCopyrightText: 2007-2020 Dirk Beyer <https://www.sosy-lab.org>

SPDX-License-Identifier: Apache-2.0
-->

<!DOCTYPE benchmark PUBLIC "+//IDN sosy-lab.org//DTD BenchExec benchmark 1.9//EN" "https://www.sosy-lab.org/benchexec/benchmark-1.9.dtd">
<benchmark tool="cpachecker" timelimit="900 s" hardtimelimit="1000 s" memlimit="15 GB" cpuCores="2">

  <option name="-noout"/>
  <option name="-heap">10000M</option>

  <rundefinition>
    <option name="-predicateAnalysis"/>
  </rundefinition>

  <!--
  <columns>
    <column title="post operator"     >Time for post operator</column>
    <column title="abstraction"       >Time for abstraction</column>
    <column title="model enumeration" >Model enumeration time</column>
    <column title="cex analysis"      >Counterexample analysis</column>
  </columns>
  -->

  <!-- SV-Comp files assume that malloc always succeeds -->
  <option name="-setprop">cpa.predicate.memoryAllocationsAlwaysSucceed=true</option>

  <!--
    We collect error- and proof-witness files for further steps in our BuildBot.
    Currently we expect the following compressed witness files from a complete benchmark set:
    - induction:    170M
    - predicate:    600M
    - value:        600M
    - smg:           10M
    - termination:  170M
    - sv-comp18/19: 230M
    CPAchecker can compress and handle compressed witnesses automatically.
    Please disable compression for real SVComp benchmarks!
  -->
  <resultfiles>**.graphml*</resultfiles>
  <option name="-setprop">cpa.arg.compressWitness=true</option>
  <option name="-setprop">counterexample.export.compressWitness=true</option>
  <option name="-setprop">counterexample.export.graphml=witness.graphml</option>
  <option name="-setprop">cpa.arg.proofWitness=witness.graphml</option>
  <option name="-setprop">termination.violation.witness=witness.graphml</option>

  <tasks name="ReachSafety-Arrays">
    <includesfile>../programs/benchmarks/ReachSafety-Arrays.set</includesfile>
    <propertyfile>../programs/benchmarks/properties/unreach-call.prp</propertyfile>
  </tasks>
  <tasks name="ReachSafety-BitVectors">
    <includesfile>../programs/benchmarks/ReachSafety-BitVectors.set</includesfile>
    <propertyfile>../programs/benchmarks/properties/unreach-call.prp</propertyfile>
  </tasks>
  <tasks name="ReachSafety-ControlFlow">
    <includesfile>../programs/benchmarks/ReachSafety-ControlFlow.set</includesfile>
    <propertyfile>../programs/benchmarks/properties/unreach-call.prp</propertyfile>
  </tasks>
  <tasks name="ReachSafety-ECA">
    <includesfile>../programs/benchmarks/ReachSafety-ECA.set</includesfile>
    <propertyfile>../programs/benchmarks/properties/unreach-call.prp</propertyfile>
  </tasks>
  <tasks name="ReachSafety-Floats">
    <includesfile>../programs/benchmarks/ReachSafety-Floats.set</includesfile>
    <propertyfile>../programs/benchmarks/properties/unreach-call.prp</propertyfile>
  </tasks>
  <tasks name="ReachSafety-Heap">
    <includesfile>../programs/benchmarks/ReachSafety-Heap.set</includesfile>
    <propertyfile>../programs/benchmarks/properties/unreach-call.prp</propertyfile>
  </tasks>
  <tasks name="ReachSafety-Loops">
    <includesfile>../programs/benchmarks/ReachSafety-Loops.set</includesfile>
    <propertyfile>../programs/benchmarks/properties/unreach-call.prp</propertyfile>
  </tasks>
  <tasks name="ReachSafety-ProductLines">
    <includesfile>../programs/benchmarks/ReachSafety-ProductLines.set</includesfile>
    <propertyfile>../programs/benchmarks/properties/unreach-call.prp</propertyfile>
  </tasks>
  <tasks name="ReachSafety-Sequentialized">
    <includesfile>../programs/benchmarks/ReachSafety-Sequentialized.set</includesfile>
    <propertyfile>../programs/benchmarks/properties/unreach-call.prp</propertyfile>
  </tasks>
  <tasks name="ReachSafety-XCSP">
    <includesfile>../programs/benchmarks/ReachSafety-XCSP.set</includesfile>
    <propertyfile>../programs/benchmarks/properties/unreach-call.prp</propertyfile>
  </tasks>
  <tasks name="ReachSafety-Combinations">
    <includesfile>../programs/benchmarks/ReachSafety-Combinations.set</includesfile>
    <propertyfile>../programs/benchmarks/properties/unreach-call.prp</propertyfile>
  </tasks>

  <tasks name="SoftwareSystems-AWS-C-Common-ReachSafety">
    <includesfile>../programs/benchmarks/SoftwareSystems-AWS-C-Common-ReachSafety.set</includesfile>
    <propertyfile>../programs/benchmarks/properties/unreach-call.prp</propertyfile>
  </tasks>
  <tasks name="SoftwareSystems-DeviceDriversLinux64-ReachSafety">
    <includesfile>../programs/benchmarks/SoftwareSystems-DeviceDriversLinux64-ReachSafety.set</includesfile>
    <excludesfile>../programs/benchmarks/SoftwareSystems-DeviceDriversLinux64Large-ReachSafety.set</excludesfile>
    <propertyfile>../programs/benchmarks/properties/unreach-call.prp</propertyfile>
  </tasks>
  <tasks name="SoftwareSystems-DeviceDriversLinux64Large-ReachSafety">
    <includesfile>../programs/benchmarks/SoftwareSystems-DeviceDriversLinux64Large-ReachSafety.set</includesfile>
    <propertyfile>../programs/benchmarks/properties/unreach-call.prp</propertyfile>
  </tasks>
  <tasks name="SoftwareSystems-uthash-ReachSafety">
    <includesfile>../programs/benchmarks/SoftwareSystems-uthash-ReachSafety.set</includesfile>
    <propertyfile>../programs/benchmarks/properties/unreach-call.prp</propertyfile>
  </tasks>
</benchmark>
