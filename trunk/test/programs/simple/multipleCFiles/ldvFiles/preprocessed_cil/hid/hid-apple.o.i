// SPDX-FileCopyrightText: The Linux kernel authors
//
// SPDX-License-Identifier: GPL-2.0-only

/* Generated by CIL v. 1.5.1 */
/* print_CIL_Input is false */

#line 88 "include/linux/compiler.h"
struct kernel_symbol {
   unsigned long value ;
   char const   *name ;
};
#line 33 "include/linux/export.h"
struct module;
#line 19 "include/uapi/asm-generic/int-ll64.h"
typedef signed char __s8;
#line 20 "include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;
#line 22 "include/uapi/asm-generic/int-ll64.h"
typedef short __s16;
#line 23 "include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;
#line 25 "include/uapi/asm-generic/int-ll64.h"
typedef int __s32;
#line 26 "include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;
#line 30 "include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;
#line 16 "include/asm-generic/int-ll64.h"
typedef unsigned char u8;
#line 18 "include/asm-generic/int-ll64.h"
typedef short s16;
#line 19 "include/asm-generic/int-ll64.h"
typedef unsigned short u16;
#line 21 "include/asm-generic/int-ll64.h"
typedef int s32;
#line 22 "include/asm-generic/int-ll64.h"
typedef unsigned int u32;
#line 24 "include/asm-generic/int-ll64.h"
typedef long long s64;
#line 25 "include/asm-generic/int-ll64.h"
typedef unsigned long long u64;
#line 14 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/include/uapi/asm-generic/posix_types.h"
typedef long __kernel_long_t;
#line 15 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;
#line 48 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;
#line 49 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;
#line 71 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;
#line 72 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;
#line 87 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;
#line 88 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_time_t;
#line 12 "include/linux/types.h"
typedef __u32 __kernel_dev_t;
#line 15 "include/linux/types.h"
typedef __kernel_dev_t dev_t;
#line 18 "include/linux/types.h"
typedef unsigned short umode_t;
#line 29 "include/linux/types.h"
typedef _Bool bool;
#line 31 "include/linux/types.h"
typedef __kernel_uid32_t uid_t;
#line 32 "include/linux/types.h"
typedef __kernel_gid32_t gid_t;
#line 45 "include/linux/types.h"
typedef __kernel_loff_t loff_t;
#line 54 "include/linux/types.h"
typedef __kernel_size_t size_t;
#line 59 "include/linux/types.h"
typedef __kernel_ssize_t ssize_t;
#line 69 "include/linux/types.h"
typedef __kernel_time_t time_t;
#line 133 "include/linux/types.h"
typedef unsigned long sector_t;
#line 134 "include/linux/types.h"
typedef unsigned long blkcnt_t;
#line 157 "include/linux/types.h"
typedef unsigned int gfp_t;
#line 158 "include/linux/types.h"
typedef unsigned int fmode_t;
#line 177 "include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};
#line 177 "include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;
#line 182 "include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};
#line 182 "include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;
#line 183 "include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};
#line 188
struct hlist_node;
#line 188 "include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};
#line 192 "include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};
#line 203 "include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head * ) ;
};
#line 144 "include/linux/init.h"
typedef void (*ctor_fn_t)(void);
#line 354 "include/linux/printk.h"
struct file_operations;
#line 48 "include/linux/dynamic_debug.h"
struct device;
#line 48
struct device;
#line 23 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/include/uapi/linux/sysinfo.h"
struct completion;
#line 23
struct completion;
#line 383 "include/linux/kernel.h"
struct pid;
#line 383
struct pid;
#line 534 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/arch/x86/include/asm/percpu.h"
struct task_struct;
#line 534
struct task_struct;
#line 14 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/arch/x86/include/asm/spinlock_types.h"
typedef u16 __ticket_t;
#line 15 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/arch/x86/include/asm/spinlock_types.h"
typedef u32 __ticketpair_t;
#line 16 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/arch/x86/include/asm/spinlock_types.h"
struct __raw_tickets {
   __ticket_t head ;
   __ticket_t tail ;
};
#line 26 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/arch/x86/include/asm/spinlock_types.h"
union __anonunion_ldv_2093_8 {
   __ticketpair_t head_tail ;
   struct __raw_tickets tickets ;
};
#line 26 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/arch/x86/include/asm/spinlock_types.h"
struct arch_spinlock {
   union __anonunion_ldv_2093_8 ldv_2093 ;
};
#line 27 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/arch/x86/include/asm/spinlock_types.h"
typedef struct arch_spinlock arch_spinlock_t;
#line 33 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/arch/x86/include/asm/rwlock.h"
struct __anonstruct_ldv_2100_10 {
   u32 read ;
   s32 write ;
};
#line 33 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/arch/x86/include/asm/rwlock.h"
union __anonunion_arch_rwlock_t_9 {
   s64 lock ;
   struct __anonstruct_ldv_2100_10 ldv_2100 ;
};
#line 33 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/arch/x86/include/asm/rwlock.h"
typedef union __anonunion_arch_rwlock_t_9 arch_rwlock_t;
#line 34
struct lockdep_map;
#line 34
struct lockdep_map;
#line 314 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/arch/x86/include/asm/pgtable_types.h"
struct page;
#line 322
struct file;
#line 322
struct file;
#line 335
struct seq_file;
#line 335
struct seq_file;
#line 306 "include/linux/bitmap.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};
#line 195 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/arch/x86/include/asm/paravirt.h"
struct static_key;
#line 195
struct static_key;
#line 23 "include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;
#line 55 "include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};
#line 26 "include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};
#line 53 "include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};
#line 59 "include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const   *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};
#line 144 "include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const   *name ;
   int cpu ;
   unsigned long ip ;
};
#line 579 "include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 32 "include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;
#line 33 "include/linux/spinlock_types.h"
struct __anonstruct_ldv_6029_29 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};
#line 33 "include/linux/spinlock_types.h"
union __anonunion_ldv_6030_28 {
   struct raw_spinlock rlock ;
   struct __anonstruct_ldv_6029_29 ldv_6029 ;
};
#line 33 "include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_ldv_6030_28 ldv_6030 ;
};
#line 76 "include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;
#line 23 "include/linux/rwlock_types.h"
struct __anonstruct_rwlock_t_30 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 23 "include/linux/rwlock_types.h"
typedef struct __anonstruct_rwlock_t_30 rwlock_t;
#line 23 "include/linux/rwlock_types.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   char const   *name ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 236 "include/linux/ioport.h"
struct sock;
#line 236
struct sock;
#line 237
struct kobject;
#line 237
struct kobject;
#line 238
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
} ;
#line 244 "include/linux/ioport.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   void *(*grab_current_ns)(void) ;
   void const   *(*netlink_ns)(struct sock * ) ;
   void const   *(*initial_ns)(void) ;
   void (*drop_ns)(void * ) ;
};
#line 57 "include/linux/kobject_ns.h"
struct attribute {
   char const   *name ;
   umode_t mode ;
   bool ignore_lockdep ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};
#line 34 "include/linux/sysfs.h"
struct attribute_group {
   char const   *name ;
   umode_t (*is_visible)(struct kobject * , struct attribute * , int  ) ;
   struct attribute **attrs ;
};
#line 63
struct vm_area_struct;
#line 63
struct vm_area_struct;
#line 64 "include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file * , struct kobject * , struct bin_attribute * , char * ,
                   loff_t  , size_t  ) ;
   ssize_t (*write)(struct file * , struct kobject * , struct bin_attribute * , char * ,
                    loff_t  , size_t  ) ;
   int (*mmap)(struct file * , struct kobject * , struct bin_attribute * , struct vm_area_struct * ) ;
};
#line 110 "include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject * , struct attribute * , char * ) ;
   ssize_t (*store)(struct kobject * , struct attribute * , char const   * , size_t  ) ;
   void const   *(*namespace)(struct kobject * , struct attribute  const  * ) ;
};
#line 129
struct sysfs_dirent;
#line 129
struct sysfs_dirent;
#line 198
struct timespec;
#line 198
struct timespec;
#line 394 "include/linux/spinlock.h"
struct kref {
   atomic_t refcount ;
};
#line 33 "include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};
#line 38 "include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;
#line 49 "include/linux/kobject.h"
struct kset;
#line 49
struct kobj_type;
#line 49 "include/linux/kobject.h"
struct kobject {
   char const   *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct sysfs_dirent *sd ;
   struct kref kref ;
   unsigned char state_initialized : 1 ;
   unsigned char state_in_sysfs : 1 ;
   unsigned char state_add_uevent_sent : 1 ;
   unsigned char state_remove_uevent_sent : 1 ;
   unsigned char uevent_suppress : 1 ;
};
#line 107 "include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject * ) ;
   struct sysfs_ops  const  *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations  const  *(*child_ns_type)(struct kobject * ) ;
   void const   *(*namespace)(struct kobject * ) ;
};
#line 115 "include/linux/kobject.h"
struct kobj_uevent_env {
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};
#line 122 "include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const  filter)(struct kset * , struct kobject * ) ;
   char const   *(* const  name)(struct kset * , struct kobject * ) ;
   int (* const  uevent)(struct kset * , struct kobject * , struct kobj_uevent_env * ) ;
};
#line 139 "include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops  const  *uevent_ops ;
};
#line 214
struct klist_node;
#line 214
struct klist_node;
#line 37 "include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};
#line 47 "include/linux/pinctrl/devinfo.h"
struct seqcount {
   unsigned int sequence ;
};
#line 41 "include/linux/seqlock.h"
typedef struct seqcount seqcount_t;
#line 270 "include/linux/seqlock.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};
#line 317 "include/linux/jiffies.h"
union ktime {
   s64 tv64 ;
};
#line 59 "include/linux/ktime.h"
typedef union ktime ktime_t;
#line 105 "include/linux/debugobjects.h"
struct tvec_base;
#line 105
struct tvec_base;
#line 106 "include/linux/debugobjects.h"
struct timer_list {
   struct list_head entry ;
   unsigned long expires ;
   struct tvec_base *base ;
   void (*function)(unsigned long  ) ;
   unsigned long data ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};
#line 267 "include/linux/timer.h"
struct work_struct;
#line 267
struct work_struct;
#line 54 "include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct * ) ;
   struct lockdep_map lockdep_map ;
};
#line 647 "include/linux/workqueue.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};
#line 58 "include/linux/pm.h"
struct pm_message {
   int event ;
};
#line 64 "include/linux/pm.h"
typedef struct pm_message pm_message_t;
#line 65 "include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device * ) ;
   void (*complete)(struct device * ) ;
   int (*suspend)(struct device * ) ;
   int (*resume)(struct device * ) ;
   int (*freeze)(struct device * ) ;
   int (*thaw)(struct device * ) ;
   int (*poweroff)(struct device * ) ;
   int (*restore)(struct device * ) ;
   int (*suspend_late)(struct device * ) ;
   int (*resume_early)(struct device * ) ;
   int (*freeze_late)(struct device * ) ;
   int (*thaw_early)(struct device * ) ;
   int (*poweroff_late)(struct device * ) ;
   int (*restore_early)(struct device * ) ;
   int (*suspend_noirq)(struct device * ) ;
   int (*resume_noirq)(struct device * ) ;
   int (*freeze_noirq)(struct device * ) ;
   int (*thaw_noirq)(struct device * ) ;
   int (*poweroff_noirq)(struct device * ) ;
   int (*restore_noirq)(struct device * ) ;
   int (*runtime_suspend)(struct device * ) ;
   int (*runtime_resume)(struct device * ) ;
   int (*runtime_idle)(struct device * ) ;
};
#line 301
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
} ;
#line 308
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
} ;
#line 316
struct wakeup_source;
#line 316
struct wakeup_source;
#line 506 "include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
};
#line 513
struct dev_pm_qos;
#line 513 "include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned char can_wakeup : 1 ;
   unsigned char async_suspend : 1 ;
   bool is_prepared ;
   bool is_suspended ;
   bool ignore_children ;
   bool early_init ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool wakeup_path ;
   bool syscore ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned char disable_depth : 3 ;
   unsigned char idle_notification : 1 ;
   unsigned char request_pending : 1 ;
   unsigned char deferred_resume : 1 ;
   unsigned char run_wake : 1 ;
   unsigned char runtime_auto : 1 ;
   unsigned char no_callbacks : 1 ;
   unsigned char irq_safe : 1 ;
   unsigned char use_autosuspend : 1 ;
   unsigned char timer_autosuspends : 1 ;
   unsigned char memalloc_noio : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   struct dev_pm_qos *qos ;
};
#line 570 "include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
};
#line 46 "include/linux/uidgid.h"
typedef uid_t kuid_t;
#line 47 "include/linux/uidgid.h"
typedef gid_t kgid_t;
#line 197
struct dma_map_ops;
#line 197 "include/linux/uidgid.h"
struct dev_archdata {
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};
#line 14 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/arch/x86/include/asm/device.h"
struct device_private;
#line 14
struct device_private;
#line 15
struct device_driver;
#line 15
struct device_driver;
#line 16
struct driver_private;
#line 16
struct driver_private;
#line 17
struct class;
#line 17
struct class;
#line 18
struct subsys_private;
#line 18
struct subsys_private;
#line 19
struct bus_type;
#line 19
struct bus_type;
#line 20
struct device_node;
#line 20
struct device_node;
#line 21
struct iommu_ops;
#line 21
struct iommu_ops;
#line 22
struct iommu_group;
#line 22
struct iommu_group;
#line 23 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/arch/x86/include/asm/device.h"
struct bus_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct bus_type * , char * ) ;
   ssize_t (*store)(struct bus_type * , char const   * , size_t  ) ;
};
#line 55 "include/linux/device.h"
struct device_attribute;
#line 55
struct driver_attribute;
#line 55 "include/linux/device.h"
struct bus_type {
   char const   *name ;
   char const   *dev_name ;
   struct device *dev_root ;
   struct bus_attribute *bus_attrs ;
   struct device_attribute *dev_attrs ;
   struct driver_attribute *drv_attrs ;
   int (*match)(struct device * , struct device_driver * ) ;
   int (*uevent)(struct device * , struct kobj_uevent_env * ) ;
   int (*probe)(struct device * ) ;
   int (*remove)(struct device * ) ;
   void (*shutdown)(struct device * ) ;
   int (*online)(struct device * ) ;
   int (*offline)(struct device * ) ;
   int (*suspend)(struct device * , pm_message_t  ) ;
   int (*resume)(struct device * ) ;
   struct dev_pm_ops  const  *pm ;
   struct iommu_ops *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
};
#line 131
struct device_type;
#line 188
struct of_device_id;
#line 188
struct acpi_device_id;
#line 188 "include/linux/device.h"
struct device_driver {
   char const   *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const   *mod_name ;
   bool suppress_bind_attrs ;
   struct of_device_id  const  *of_match_table ;
   struct acpi_device_id  const  *acpi_match_table ;
   int (*probe)(struct device * ) ;
   int (*remove)(struct device * ) ;
   void (*shutdown)(struct device * ) ;
   int (*suspend)(struct device * , pm_message_t  ) ;
   int (*resume)(struct device * ) ;
   struct attribute_group  const  **groups ;
   struct dev_pm_ops  const  *pm ;
   struct driver_private *p ;
};
#line 253 "include/linux/device.h"
struct driver_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device_driver * , char * ) ;
   ssize_t (*store)(struct device_driver * , char const   * , size_t  ) ;
};
#line 309
struct class_attribute;
#line 309 "include/linux/device.h"
struct class {
   char const   *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct device_attribute *dev_attrs ;
   struct bin_attribute *dev_bin_attrs ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device * , struct kobj_uevent_env * ) ;
   char *(*devnode)(struct device * , umode_t * ) ;
   void (*class_release)(struct class * ) ;
   void (*dev_release)(struct device * ) ;
   int (*suspend)(struct device * , pm_message_t  ) ;
   int (*resume)(struct device * ) ;
   struct kobj_ns_type_operations  const  *ns_type ;
   void const   *(*namespace)(struct device * ) ;
   struct dev_pm_ops  const  *pm ;
   struct subsys_private *p ;
};
#line 404 "include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class * , struct class_attribute * , char * ) ;
   ssize_t (*store)(struct class * , struct class_attribute * , char const   * , size_t  ) ;
   void const   *(*namespace)(struct class * , struct class_attribute  const  * ) ;
};
#line 457 "include/linux/device.h"
struct device_type {
   char const   *name ;
   struct attribute_group  const  **groups ;
   int (*uevent)(struct device * , struct kobj_uevent_env * ) ;
   char *(*devnode)(struct device * , umode_t * , kuid_t * , kgid_t * ) ;
   void (*release)(struct device * ) ;
   struct dev_pm_ops  const  *pm ;
};
#line 485 "include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device * , struct device_attribute * , char * ) ;
   ssize_t (*store)(struct device * , struct device_attribute * , char const   * ,
                    size_t  ) ;
};
#line 590 "include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};
#line 599 "include/linux/device.h"
struct acpi_dev_node {
   void *handle ;
};
#line 604
struct dma_coherent_mem;
#line 604 "include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const   *init_name ;
   struct device_type  const  *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct acpi_dev_node acpi_node ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group  const  **groups ;
   void (*release)(struct device * ) ;
   struct iommu_group *iommu_group ;
   bool offline_disabled ;
   bool offline ;
};
#line 746 "include/linux/device.h"
struct wakeup_source {
   char const   *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   bool active ;
   bool autosleep_enabled ;
};
#line 796 "include/linux/mmzone.h"
struct rw_semaphore;
#line 796
struct rw_semaphore;
#line 797 "include/linux/mmzone.h"
struct rw_semaphore {
   long count ;
   raw_spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct lockdep_map dep_map ;
};
#line 18 "include/asm-generic/pci_iomap.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};
#line 40 "include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};
#line 13 "include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;
#line 127 "include/linux/mod_devicetable.h"
struct hid_device_id {
   __u16 bus ;
   __u16 group ;
   __u32 vendor ;
   __u32 product ;
   kernel_ulong_t driver_data ;
};
#line 186 "include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
};
#line 219 "include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void const   *data ;
};
#line 262 "include/linux/mod_devicetable.h"
struct input_device_id {
   kernel_ulong_t flags ;
   __u16 bustype ;
   __u16 vendor ;
   __u16 product ;
   __u16 version ;
   kernel_ulong_t evbit[1U] ;
   kernel_ulong_t keybit[12U] ;
   kernel_ulong_t relbit[1U] ;
   kernel_ulong_t absbit[1U] ;
   kernel_ulong_t mscbit[1U] ;
   kernel_ulong_t ledbit[1U] ;
   kernel_ulong_t sndbit[1U] ;
   kernel_ulong_t ffbit[2U] ;
   kernel_ulong_t swbit[1U] ;
   kernel_ulong_t driver_info ;
};
#line 30 "include/uapi/linux/input.h"
struct input_id {
   __u16 bustype ;
   __u16 vendor ;
   __u16 product ;
   __u16 version ;
};
#line 47 "include/uapi/linux/input.h"
struct input_absinfo {
   __s32 value ;
   __s32 minimum ;
   __s32 maximum ;
   __s32 fuzz ;
   __s32 flat ;
   __s32 resolution ;
};
#line 75 "include/uapi/linux/input.h"
struct input_keymap_entry {
   __u8 flags ;
   __u8 len ;
   __u16 index ;
   __u32 keycode ;
   __u8 scancode[32U] ;
};
#line 99 "include/uapi/linux/input.h"
struct ff_replay {
   __u16 length ;
   __u16 delay ;
};
#line 972 "include/uapi/linux/input.h"
struct ff_trigger {
   __u16 button ;
   __u16 interval ;
};
#line 982 "include/uapi/linux/input.h"
struct ff_envelope {
   __u16 attack_length ;
   __u16 attack_level ;
   __u16 fade_length ;
   __u16 fade_level ;
};
#line 1001 "include/uapi/linux/input.h"
struct ff_constant_effect {
   __s16 level ;
   struct ff_envelope envelope ;
};
#line 1011 "include/uapi/linux/input.h"
struct ff_ramp_effect {
   __s16 start_level ;
   __s16 end_level ;
   struct ff_envelope envelope ;
};
#line 1023 "include/uapi/linux/input.h"
struct ff_condition_effect {
   __u16 right_saturation ;
   __u16 left_saturation ;
   __s16 right_coeff ;
   __s16 left_coeff ;
   __u16 deadband ;
   __s16 center ;
};
#line 1044 "include/uapi/linux/input.h"
struct ff_periodic_effect {
   __u16 waveform ;
   __u16 period ;
   __s16 magnitude ;
   __s16 offset ;
   __u16 phase ;
   struct ff_envelope envelope ;
   __u32 custom_len ;
   __s16 *custom_data ;
};
#line 1075 "include/uapi/linux/input.h"
struct ff_rumble_effect {
   __u16 strong_magnitude ;
   __u16 weak_magnitude ;
};
#line 1088 "include/uapi/linux/input.h"
union __anonunion_u_133 {
   struct ff_constant_effect constant ;
   struct ff_ramp_effect ramp ;
   struct ff_periodic_effect periodic ;
   struct ff_condition_effect condition[2U] ;
   struct ff_rumble_effect rumble ;
};
#line 1088 "include/uapi/linux/input.h"
struct ff_effect {
   __u16 type ;
   __s16 id ;
   __u16 direction ;
   struct ff_trigger trigger ;
   struct ff_replay replay ;
   union __anonunion_u_133 u ;
};
#line 93 "include/linux/bit_spinlock.h"
struct hlist_bl_node;
#line 93 "include/linux/bit_spinlock.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};
#line 36 "include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};
#line 114 "include/linux/rculist_bl.h"
struct nameidata;
#line 114
struct nameidata;
#line 115
struct path;
#line 115
struct path;
#line 116
struct vfsmount;
#line 116
struct vfsmount;
#line 117 "include/linux/rculist_bl.h"
struct __anonstruct_ldv_14536_135 {
   u32 hash ;
   u32 len ;
};
#line 117 "include/linux/rculist_bl.h"
union __anonunion_ldv_14538_134 {
   struct __anonstruct_ldv_14536_135 ldv_14536 ;
   u64 hash_len ;
};
#line 117 "include/linux/rculist_bl.h"
struct qstr {
   union __anonunion_ldv_14538_134 ldv_14538 ;
   unsigned char const   *name ;
};
#line 87 "include/linux/dcache.h"
struct inode;
#line 87
struct dentry_operations;
#line 87
struct super_block;
#line 87 "include/linux/dcache.h"
union __anonunion_d_u_136 {
   struct list_head d_child ;
   struct callback_head d_rcu ;
};
#line 87 "include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   unsigned int d_count ;
   spinlock_t d_lock ;
   struct dentry_operations  const  *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   struct list_head d_lru ;
   union __anonunion_d_u_136 d_u ;
   struct list_head d_subdirs ;
   struct hlist_node d_alias ;
};
#line 138 "include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry * , unsigned int  ) ;
   int (*d_weak_revalidate)(struct dentry * , unsigned int  ) ;
   int (*d_hash)(struct dentry  const  * , struct qstr * ) ;
   int (*d_compare)(struct dentry  const  * , struct dentry  const  * , unsigned int  ,
                    char const   * , struct qstr  const  * ) ;
   int (*d_delete)(struct dentry  const  * ) ;
   void (*d_release)(struct dentry * ) ;
   void (*d_prune)(struct dentry * ) ;
   void (*d_iput)(struct dentry * , struct inode * ) ;
   char *(*d_dname)(struct dentry * , char * , int  ) ;
   struct vfsmount *(*d_automount)(struct path * ) ;
   int (*d_manage)(struct dentry * , bool  ) ;
};
#line 417 "include/linux/dcache.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};
#line 133 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/arch/x86/include/uapi/asm/stat.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   kuid_t uid ;
   kgid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};
#line 36 "include/linux/stat.h"
struct llist_node;
#line 64 "include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};
#line 58 "include/linux/radix-tree.h"
struct radix_tree_node;
#line 58 "include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};
#line 380
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
} ;
#line 387
struct pid_namespace;
#line 387 "include/linux/radix-tree.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};
#line 56 "include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};
#line 219 "include/linux/capability.h"
struct semaphore {
   raw_spinlock_t lock ;
   unsigned int count ;
   struct list_head wait_list ;
};
#line 45 "include/linux/semaphore.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};
#line 38 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/include/uapi/linux/fiemap.h"
struct shrink_control {
   gfp_t gfp_mask ;
   unsigned long nr_to_scan ;
};
#line 14 "include/linux/shrinker.h"
struct shrinker {
   int (*shrink)(struct shrinker * , struct shrink_control * ) ;
   int seeks ;
   long batch ;
   struct list_head list ;
   atomic_long_t nr_in_batch ;
};
#line 42
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2
} ;
#line 30 "include/linux/percpu-rwsem.h"
struct block_device;
#line 30
struct block_device;
#line 56 "include/uapi/linux/fs.h"
struct export_operations;
#line 56
struct export_operations;
#line 58
struct iovec;
#line 58
struct iovec;
#line 59
struct kiocb;
#line 59
struct kiocb;
#line 60
struct pipe_inode_info;
#line 60
struct pipe_inode_info;
#line 61
struct poll_table_struct;
#line 61
struct poll_table_struct;
#line 62
struct kstatfs;
#line 62
struct kstatfs;
#line 63
struct cred;
#line 63
struct cred;
#line 64
struct swap_info_struct;
#line 64
struct swap_info_struct;
#line 66 "include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};
#line 242 "include/linux/fs.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};
#line 176 "include/linux/percpu_counter.h"
struct fs_disk_quota {
   __s8 d_version ;
   __s8 d_flags ;
   __u16 d_fieldmask ;
   __u32 d_id ;
   __u64 d_blk_hardlimit ;
   __u64 d_blk_softlimit ;
   __u64 d_ino_hardlimit ;
   __u64 d_ino_softlimit ;
   __u64 d_bcount ;
   __u64 d_icount ;
   __s32 d_itimer ;
   __s32 d_btimer ;
   __u16 d_iwarns ;
   __u16 d_bwarns ;
   __s32 d_padding2 ;
   __u64 d_rtb_hardlimit ;
   __u64 d_rtb_softlimit ;
   __u64 d_rtbcount ;
   __s32 d_rtbtimer ;
   __u16 d_rtbwarns ;
   __s16 d_padding3 ;
   char d_padding4[8U] ;
};
#line 75 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/include/uapi/linux/dqblk_xfs.h"
struct fs_qfilestat {
   __u64 qfs_ino ;
   __u64 qfs_nblks ;
   __u32 qfs_nextents ;
};
#line 150 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/include/uapi/linux/dqblk_xfs.h"
typedef struct fs_qfilestat fs_qfilestat_t;
#line 151 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/include/uapi/linux/dqblk_xfs.h"
struct fs_quota_stat {
   __s8 qs_version ;
   __u16 qs_flags ;
   __s8 qs_pad ;
   fs_qfilestat_t qs_uquota ;
   fs_qfilestat_t qs_gquota ;
   __u32 qs_incoredqs ;
   __s32 qs_btimelimit ;
   __s32 qs_itimelimit ;
   __s32 qs_rtbtimelimit ;
   __u16 qs_bwarnlimit ;
   __u16 qs_iwarnlimit ;
};
#line 165
struct dquot;
#line 165
struct dquot;
#line 19 "include/linux/projid.h"
typedef __kernel_uid32_t projid_t;
#line 36 "include/linux/projid.h"
typedef projid_t kprojid_t;
#line 119 "include/uapi/linux/quota.h"
struct if_dqinfo {
   __u64 dqi_bgrace ;
   __u64 dqi_igrace ;
   __u32 dqi_flags ;
   __u32 dqi_valid ;
};
#line 152
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
} ;
#line 60 "include/linux/quota.h"
typedef long long qsize_t;
#line 61 "include/linux/quota.h"
union __anonunion_ldv_15645_138 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};
#line 61 "include/linux/quota.h"
struct kqid {
   union __anonunion_ldv_15645_138 ldv_15645 ;
   enum quota_type type ;
};
#line 178 "include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};
#line 200
struct quota_format_type;
#line 200
struct quota_format_type;
#line 201 "include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_maxblimit ;
   qsize_t dqi_maxilimit ;
   void *dqi_priv ;
};
#line 264 "include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};
#line 291 "include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block * , int  ) ;
   int (*read_file_info)(struct super_block * , int  ) ;
   int (*write_file_info)(struct super_block * , int  ) ;
   int (*free_file_info)(struct super_block * , int  ) ;
   int (*read_dqblk)(struct dquot * ) ;
   int (*commit_dqblk)(struct dquot * ) ;
   int (*release_dqblk)(struct dquot * ) ;
};
#line 302 "include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot * ) ;
   struct dquot *(*alloc_dquot)(struct super_block * , int  ) ;
   void (*destroy_dquot)(struct dquot * ) ;
   int (*acquire_dquot)(struct dquot * ) ;
   int (*release_dquot)(struct dquot * ) ;
   int (*mark_dirty)(struct dquot * ) ;
   int (*write_info)(struct super_block * , int  ) ;
   qsize_t *(*get_reserved_space)(struct inode * ) ;
};
#line 316 "include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block * , int  , int  , struct path * ) ;
   int (*quota_on_meta)(struct super_block * , int  , int  ) ;
   int (*quota_off)(struct super_block * , int  ) ;
   int (*quota_sync)(struct super_block * , int  ) ;
   int (*get_info)(struct super_block * , int  , struct if_dqinfo * ) ;
   int (*set_info)(struct super_block * , int  , struct if_dqinfo * ) ;
   int (*get_dqblk)(struct super_block * , struct kqid  , struct fs_disk_quota * ) ;
   int (*set_dqblk)(struct super_block * , struct kqid  , struct fs_disk_quota * ) ;
   int (*get_xstate)(struct super_block * , struct fs_quota_stat * ) ;
   int (*set_xstate)(struct super_block * , unsigned int  , int  ) ;
};
#line 332 "include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops  const  *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};
#line 378 "include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct rw_semaphore dqptr_sem ;
   struct inode *files[2U] ;
   struct mem_dqinfo info[2U] ;
   struct quota_format_ops  const  *ops[2U] ;
};
#line 409
struct address_space;
#line 409
struct address_space;
#line 410
struct writeback_control;
#line 410
struct writeback_control;
#line 341 "include/linux/fs.h"
union __anonunion_arg_140 {
   char *buf ;
   void *data ;
};
#line 341 "include/linux/fs.h"
struct __anonstruct_read_descriptor_t_139 {
   size_t written ;
   size_t count ;
   union __anonunion_arg_140 arg ;
   int error ;
};
#line 341 "include/linux/fs.h"
typedef struct __anonstruct_read_descriptor_t_139 read_descriptor_t;
#line 344 "include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page * , struct writeback_control * ) ;
   int (*readpage)(struct file * , struct page * ) ;
   int (*writepages)(struct address_space * , struct writeback_control * ) ;
   int (*set_page_dirty)(struct page * ) ;
   int (*readpages)(struct file * , struct address_space * , struct list_head * ,
                    unsigned int  ) ;
   int (*write_begin)(struct file * , struct address_space * , loff_t  , unsigned int  ,
                      unsigned int  , struct page ** , void ** ) ;
   int (*write_end)(struct file * , struct address_space * , loff_t  , unsigned int  ,
                    unsigned int  , struct page * , void * ) ;
   sector_t (*bmap)(struct address_space * , sector_t  ) ;
   void (*invalidatepage)(struct page * , unsigned int  , unsigned int  ) ;
   int (*releasepage)(struct page * , gfp_t  ) ;
   void (*freepage)(struct page * ) ;
   ssize_t (*direct_IO)(int  , struct kiocb * , struct iovec  const  * , loff_t  ,
                        unsigned long  ) ;
   int (*get_xip_mem)(struct address_space * , unsigned long  , int  , void ** , unsigned long * ) ;
   int (*migratepage)(struct address_space * , struct page * , struct page * , enum migrate_mode  ) ;
   int (*launder_page)(struct page * ) ;
   int (*is_partially_uptodate)(struct page * , read_descriptor_t * , unsigned long  ) ;
   void (*is_dirty_writeback)(struct page * , bool * , bool * ) ;
   int (*error_remove_page)(struct address_space * , struct page * ) ;
   int (*swap_activate)(struct swap_info_struct * , struct file * , sector_t * ) ;
   void (*swap_deactivate)(struct file * ) ;
};
#line 404
struct backing_dev_info;
#line 404
struct backing_dev_info;
#line 405 "include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   unsigned int i_mmap_writable ;
   struct rb_root i_mmap ;
   struct list_head i_mmap_nonlinear ;
   struct mutex i_mmap_mutex ;
   unsigned long nrpages ;
   unsigned long writeback_index ;
   struct address_space_operations  const  *a_ops ;
   unsigned long flags ;
   struct backing_dev_info *backing_dev_info ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
};
#line 426
struct request_queue;
#line 426
struct request_queue;
#line 427
struct hd_struct;
#line 427
struct gendisk;
#line 427 "include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   struct list_head bd_inodes ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};
#line 499
struct posix_acl;
#line 499
struct posix_acl;
#line 500
struct inode_operations;
#line 500 "include/linux/fs.h"
union __anonunion_ldv_16086_141 {
   unsigned int const   i_nlink ;
   unsigned int __i_nlink ;
};
#line 500 "include/linux/fs.h"
union __anonunion_ldv_16106_142 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};
#line 500
struct file_lock;
#line 500
struct cdev;
#line 500 "include/linux/fs.h"
union __anonunion_ldv_16122_143 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
};
#line 500 "include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations  const  *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_ldv_16086_141 ldv_16086 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   unsigned int i_blkbits ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct mutex i_mutex ;
   unsigned long dirtied_when ;
   struct hlist_node i_hash ;
   struct list_head i_wb_list ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   union __anonunion_ldv_16106_142 ldv_16106 ;
   u64 i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   struct file_operations  const  *i_fop ;
   struct file_lock *i_flock ;
   struct address_space i_data ;
   struct dquot *i_dquot[2U] ;
   struct list_head i_devices ;
   union __anonunion_ldv_16122_143 ldv_16122 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_marks ;
   atomic_t i_readcount ;
   void *i_private ;
};
#line 730 "include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};
#line 738 "include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};
#line 761 "include/linux/fs.h"
union __anonunion_f_u_144 {
   struct list_head fu_list ;
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};
#line 761 "include/linux/fs.h"
struct file {
   union __anonunion_f_u_144 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations  const  *f_op ;
   spinlock_t f_lock ;
   int f_sb_list_cpu ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred  const  *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
   unsigned long f_mnt_write_state ;
};
#line 905
struct files_struct;
#line 905 "include/linux/fs.h"
typedef struct files_struct *fl_owner_t;
#line 906 "include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock * , struct file_lock * ) ;
   void (*fl_release_private)(struct file_lock * ) ;
};
#line 911 "include/linux/fs.h"
struct lock_manager_operations {
   int (*lm_compare_owner)(struct file_lock * , struct file_lock * ) ;
   unsigned long (*lm_owner_key)(struct file_lock * ) ;
   void (*lm_notify)(struct file_lock * ) ;
   int (*lm_grant)(struct file_lock * , struct file_lock * , int  ) ;
   void (*lm_break)(struct file_lock * ) ;
   int (*lm_change)(struct file_lock ** , int  ) ;
};
#line 929
struct nlm_lockowner;
#line 929
struct nlm_lockowner;
#line 930 "include/linux/fs.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};
#line 14 "include/linux/nfs_fs_i.h"
struct nfs4_lock_state;
#line 14
struct nfs4_lock_state;
#line 15 "include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};
#line 19
struct fasync_struct;
#line 19 "include/linux/nfs_fs_i.h"
struct __anonstruct_afs_146 {
   struct list_head link ;
   int state ;
};
#line 19 "include/linux/nfs_fs_i.h"
union __anonunion_fl_u_145 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_146 afs ;
};
#line 19 "include/linux/nfs_fs_i.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct hlist_node fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations  const  *fl_ops ;
   struct lock_manager_operations  const  *fl_lmops ;
   union __anonunion_fl_u_145 fl_u ;
};
#line 1032 "include/linux/fs.h"
struct fasync_struct {
   spinlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};
#line 1224 "include/linux/fs.h"
struct sb_writers {
   struct percpu_counter counter[3U] ;
   wait_queue_head_t wait ;
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct lockdep_map lock_map[3U] ;
};
#line 1240
struct file_system_type;
#line 1240
struct super_operations;
#line 1240
struct xattr_handler;
#line 1240
struct mtd_info;
#line 1240 "include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations  const  *s_op ;
   struct dquot_operations  const  *dq_op ;
   struct quotactl_ops  const  *s_qcop ;
   struct export_operations  const  *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler  const  **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_bl_head s_anon ;
   struct list_head *s_files ;
   struct list_head s_mounts ;
   struct list_head s_dentry_lru ;
   int s_nr_dentry_unused ;
   spinlock_t s_inode_lru_lock ;
   struct list_head s_inode_lru ;
   int s_nr_inodes_unused ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   char s_id[32U] ;
   u8 s_uuid[16U] ;
   void *s_fs_info ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   u32 s_time_gran ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   char *s_options ;
   struct dentry_operations  const  *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   int s_readonly_remount ;
};
#line 1477 "include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};
#line 1515 "include/linux/fs.h"
struct dir_context {
   int (*actor)(void * , char const   * , int  , loff_t  , u64  , unsigned int  ) ;
   loff_t pos ;
};
#line 1520 "include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file * , loff_t  , int  ) ;
   ssize_t (*read)(struct file * , char * , size_t  , loff_t * ) ;
   ssize_t (*write)(struct file * , char const   * , size_t  , loff_t * ) ;
   ssize_t (*aio_read)(struct kiocb * , struct iovec  const  * , unsigned long  ,
                       loff_t  ) ;
   ssize_t (*aio_write)(struct kiocb * , struct iovec  const  * , unsigned long  ,
                        loff_t  ) ;
   int (*iterate)(struct file * , struct dir_context * ) ;
   unsigned int (*poll)(struct file * , struct poll_table_struct * ) ;
   long (*unlocked_ioctl)(struct file * , unsigned int  , unsigned long  ) ;
   long (*compat_ioctl)(struct file * , unsigned int  , unsigned long  ) ;
   int (*mmap)(struct file * , struct vm_area_struct * ) ;
   int (*open)(struct inode * , struct file * ) ;
   int (*flush)(struct file * , fl_owner_t  ) ;
   int (*release)(struct inode * , struct file * ) ;
   int (*fsync)(struct file * , loff_t  , loff_t  , int  ) ;
   int (*aio_fsync)(struct kiocb * , int  ) ;
   int (*fasync)(int  , struct file * , int  ) ;
   int (*lock)(struct file * , int  , struct file_lock * ) ;
   ssize_t (*sendpage)(struct file * , struct page * , int  , size_t  , loff_t * ,
                       int  ) ;
   unsigned long (*get_unmapped_area)(struct file * , unsigned long  , unsigned long  ,
                                      unsigned long  , unsigned long  ) ;
   int (*check_flags)(int  ) ;
   int (*flock)(struct file * , int  , struct file_lock * ) ;
   ssize_t (*splice_write)(struct pipe_inode_info * , struct file * , loff_t * , size_t  ,
                           unsigned int  ) ;
   ssize_t (*splice_read)(struct file * , loff_t * , struct pipe_inode_info * , size_t  ,
                          unsigned int  ) ;
   int (*setlease)(struct file * , long  , struct file_lock ** ) ;
   long (*fallocate)(struct file * , int  , loff_t  , loff_t  ) ;
   int (*show_fdinfo)(struct seq_file * , struct file * ) ;
};
#line 1558 "include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode * , struct dentry * , unsigned int  ) ;
   void *(*follow_link)(struct dentry * , struct nameidata * ) ;
   int (*permission)(struct inode * , int  ) ;
   struct posix_acl *(*get_acl)(struct inode * , int  ) ;
   int (*readlink)(struct dentry * , char * , int  ) ;
   void (*put_link)(struct dentry * , struct nameidata * , void * ) ;
   int (*create)(struct inode * , struct dentry * , umode_t  , bool  ) ;
   int (*link)(struct dentry * , struct inode * , struct dentry * ) ;
   int (*unlink)(struct inode * , struct dentry * ) ;
   int (*symlink)(struct inode * , struct dentry * , char const   * ) ;
   int (*mkdir)(struct inode * , struct dentry * , umode_t  ) ;
   int (*rmdir)(struct inode * , struct dentry * ) ;
   int (*mknod)(struct inode * , struct dentry * , umode_t  , dev_t  ) ;
   int (*rename)(struct inode * , struct dentry * , struct inode * , struct dentry * ) ;
   int (*setattr)(struct dentry * , struct iattr * ) ;
   int (*getattr)(struct vfsmount * , struct dentry * , struct kstat * ) ;
   int (*setxattr)(struct dentry * , char const   * , void const   * , size_t  , int  ) ;
   ssize_t (*getxattr)(struct dentry * , char const   * , void * , size_t  ) ;
   ssize_t (*listxattr)(struct dentry * , char * , size_t  ) ;
   int (*removexattr)(struct dentry * , char const   * ) ;
   int (*fiemap)(struct inode * , struct fiemap_extent_info * , u64  , u64  ) ;
   int (*update_time)(struct inode * , struct timespec * , int  ) ;
   int (*atomic_open)(struct inode * , struct dentry * , struct file * , unsigned int  ,
                      umode_t  , int * ) ;
   int (*tmpfile)(struct inode * , struct dentry * , umode_t  ) ;
};
#line 1602 "include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block * ) ;
   void (*destroy_inode)(struct inode * ) ;
   void (*dirty_inode)(struct inode * , int  ) ;
   int (*write_inode)(struct inode * , struct writeback_control * ) ;
   int (*drop_inode)(struct inode * ) ;
   void (*evict_inode)(struct inode * ) ;
   void (*put_super)(struct super_block * ) ;
   int (*sync_fs)(struct super_block * , int  ) ;
   int (*freeze_fs)(struct super_block * ) ;
   int (*unfreeze_fs)(struct super_block * ) ;
   int (*statfs)(struct dentry * , struct kstatfs * ) ;
   int (*remount_fs)(struct super_block * , int * , char * ) ;
   void (*umount_begin)(struct super_block * ) ;
   int (*show_options)(struct seq_file * , struct dentry * ) ;
   int (*show_devname)(struct seq_file * , struct dentry * ) ;
   int (*show_path)(struct seq_file * , struct dentry * ) ;
   int (*show_stats)(struct seq_file * , struct dentry * ) ;
   ssize_t (*quota_read)(struct super_block * , int  , char * , size_t  , loff_t  ) ;
   ssize_t (*quota_write)(struct super_block * , int  , char const   * , size_t  ,
                          loff_t  ) ;
   int (*bdev_try_to_free_page)(struct super_block * , struct page * , gfp_t  ) ;
   int (*nr_cached_objects)(struct super_block * ) ;
   void (*free_cached_objects)(struct super_block * , int  ) ;
};
#line 1816 "include/linux/fs.h"
struct file_system_type {
   char const   *name ;
   int fs_flags ;
   struct dentry *(*mount)(struct file_system_type * , int  , char const   * , void * ) ;
   void (*kill_sb)(struct super_block * ) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};
#line 2742 "include/linux/fs.h"
struct input_value {
   __u16 type ;
   __u16 code ;
   __s32 value ;
};
#line 38 "include/linux/input.h"
struct ff_device;
#line 38
struct input_mt;
#line 38
struct input_handle;
#line 38 "include/linux/input.h"
struct input_dev {
   char const   *name ;
   char const   *phys ;
   char const   *uniq ;
   struct input_id id ;
   unsigned long propbit[1U] ;
   unsigned long evbit[1U] ;
   unsigned long keybit[12U] ;
   unsigned long relbit[1U] ;
   unsigned long absbit[1U] ;
   unsigned long mscbit[1U] ;
   unsigned long ledbit[1U] ;
   unsigned long sndbit[1U] ;
   unsigned long ffbit[2U] ;
   unsigned long swbit[1U] ;
   unsigned int hint_events_per_packet ;
   unsigned int keycodemax ;
   unsigned int keycodesize ;
   void *keycode ;
   int (*setkeycode)(struct input_dev * , struct input_keymap_entry  const  * , unsigned int * ) ;
   int (*getkeycode)(struct input_dev * , struct input_keymap_entry * ) ;
   struct ff_device *ff ;
   unsigned int repeat_key ;
   struct timer_list timer ;
   int rep[2U] ;
   struct input_mt *mt ;
   struct input_absinfo *absinfo ;
   unsigned long key[12U] ;
   unsigned long led[1U] ;
   unsigned long snd[1U] ;
   unsigned long sw[1U] ;
   int (*open)(struct input_dev * ) ;
   void (*close)(struct input_dev * ) ;
   int (*flush)(struct input_dev * , struct file * ) ;
   int (*event)(struct input_dev * , unsigned int  , unsigned int  , int  ) ;
   struct input_handle *grab ;
   spinlock_t event_lock ;
   struct mutex mutex ;
   unsigned int users ;
   bool going_away ;
   struct device dev ;
   struct list_head h_list ;
   struct list_head node ;
   unsigned int num_vals ;
   unsigned int max_vals ;
   struct input_value *vals ;
   bool devres_managed ;
};
#line 191 "include/linux/input.h"
struct input_handler {
   void *private ;
   void (*event)(struct input_handle * , unsigned int  , unsigned int  , int  ) ;
   void (*events)(struct input_handle * , struct input_value  const  * , unsigned int  ) ;
   bool (*filter)(struct input_handle * , unsigned int  , unsigned int  , int  ) ;
   bool (*match)(struct input_handler * , struct input_dev * ) ;
   int (*connect)(struct input_handler * , struct input_dev * , struct input_device_id  const  * ) ;
   void (*disconnect)(struct input_handle * ) ;
   void (*start)(struct input_handle * ) ;
   bool legacy_minors ;
   int minor ;
   char const   *name ;
   struct input_device_id  const  *id_table ;
   struct list_head h_list ;
   struct list_head node ;
};
#line 306 "include/linux/input.h"
struct input_handle {
   void *private ;
   int open ;
   char const   *name ;
   struct input_dev *dev ;
   struct input_handler *handler ;
   struct list_head d_node ;
   struct list_head h_node ;
};
#line 473 "include/linux/input.h"
struct ff_device {
   int (*upload)(struct input_dev * , struct ff_effect * , struct ff_effect * ) ;
   int (*erase)(struct input_dev * , int  ) ;
   int (*playback)(struct input_dev * , int  , int  ) ;
   void (*set_gain)(struct input_dev * , u16  ) ;
   void (*set_autocenter)(struct input_dev * , u16  ) ;
   void (*destroy)(struct ff_device * ) ;
   void *private ;
   unsigned long ffbit[2U] ;
   struct mutex mutex ;
   int max_effects ;
   struct ff_effect *effects ;
   struct file *effect_owners[] ;
};
#line 333 "include/linux/hid.h"
struct hid_collection {
   unsigned int type ;
   unsigned int usage ;
   unsigned int level ;
};
#line 344 "include/linux/hid.h"
struct hid_usage {
   unsigned int hid ;
   unsigned int collection_index ;
   unsigned int usage_index ;
   __u16 code ;
   __u8 type ;
   __s8 hat_min ;
   __s8 hat_max ;
   __s8 hat_dir ;
};
#line 356
struct hid_input;
#line 356
struct hid_input;
#line 357
struct hid_report;
#line 357 "include/linux/hid.h"
struct hid_field {
   unsigned int physical ;
   unsigned int logical ;
   unsigned int application ;
   struct hid_usage *usage ;
   unsigned int maxusage ;
   unsigned int flags ;
   unsigned int report_offset ;
   unsigned int report_size ;
   unsigned int report_count ;
   unsigned int report_type ;
   __s32 *value ;
   __s32 logical_minimum ;
   __s32 logical_maximum ;
   __s32 physical_minimum ;
   __s32 physical_maximum ;
   __s32 unit_exponent ;
   unsigned int unit ;
   struct hid_report *report ;
   unsigned int index ;
   struct hid_input *hidinput ;
   __u16 dpad ;
};
#line 383
struct hid_device;
#line 383 "include/linux/hid.h"
struct hid_report {
   struct list_head list ;
   unsigned int id ;
   unsigned int type ;
   struct hid_field *field[256U] ;
   unsigned int maxfield ;
   unsigned int size ;
   struct hid_device *device ;
};
#line 395 "include/linux/hid.h"
struct hid_report_enum {
   unsigned int numbered ;
   struct list_head report_list ;
   struct hid_report *report_id_hash[256U] ;
};
#line 419 "include/linux/hid.h"
struct hid_input {
   struct list_head list ;
   struct hid_report *report ;
   struct input_dev *input ;
};
#line 432
enum hid_type {
    HID_TYPE_OTHER = 0,
    HID_TYPE_USBMOUSE = 1,
    HID_TYPE_USBNONE = 2
} ;
#line 438
struct hid_driver;
#line 438
struct hid_driver;
#line 439
struct hid_ll_driver;
#line 439
struct hid_ll_driver;
#line 440 "include/linux/hid.h"
struct hid_device {
   __u8 *dev_rdesc ;
   unsigned int dev_rsize ;
   __u8 *rdesc ;
   unsigned int rsize ;
   struct hid_collection *collection ;
   unsigned int collection_size ;
   unsigned int maxcollection ;
   unsigned int maxapplication ;
   __u16 bus ;
   __u16 group ;
   __u32 vendor ;
   __u32 product ;
   __u32 version ;
   enum hid_type type ;
   unsigned int country ;
   struct hid_report_enum report_enum[3U] ;
   struct semaphore driver_lock ;
   struct semaphore driver_input_lock ;
   struct device dev ;
   struct hid_driver *driver ;
   struct hid_ll_driver *ll_driver ;
   unsigned int status ;
   unsigned int claimed ;
   unsigned int quirks ;
   bool io_started ;
   struct list_head inputs ;
   void *hiddev ;
   void *hidraw ;
   int minor ;
   int open ;
   char name[128U] ;
   char phys[64U] ;
   char uniq[64U] ;
   void *driver_data ;
   int (*ff_init)(struct hid_device * ) ;
   int (*hiddev_connect)(struct hid_device * , unsigned int  ) ;
   void (*hiddev_disconnect)(struct hid_device * ) ;
   void (*hiddev_hid_event)(struct hid_device * , struct hid_field * , struct hid_usage * ,
                            __s32  ) ;
   void (*hiddev_report_event)(struct hid_device * , struct hid_report * ) ;
   int (*hid_get_raw_report)(struct hid_device * , unsigned char  , __u8 * , size_t  ,
                             unsigned char  ) ;
   int (*hid_output_raw_report)(struct hid_device * , __u8 * , size_t  , unsigned char  ) ;
   unsigned short debug ;
   struct dentry *debug_dir ;
   struct dentry *debug_rdesc ;
   struct dentry *debug_events ;
   struct list_head debug_list ;
   spinlock_t debug_list_lock ;
   wait_queue_head_t debug_wait ;
};
#line 559 "include/linux/hid.h"
struct hid_report_id {
   __u32 report_type ;
};
#line 577 "include/linux/hid.h"
struct hid_usage_id {
   __u32 usage_hid ;
   __u32 usage_type ;
   __u32 usage_code ;
};
#line 582 "include/linux/hid.h"
struct hid_driver {
   char *name ;
   struct hid_device_id  const  *id_table ;
   struct list_head dyn_list ;
   spinlock_t dyn_lock ;
   int (*probe)(struct hid_device * , struct hid_device_id  const  * ) ;
   void (*remove)(struct hid_device * ) ;
   struct hid_report_id  const  *report_table ;
   int (*raw_event)(struct hid_device * , struct hid_report * , u8 * , int  ) ;
   struct hid_usage_id  const  *usage_table ;
   int (*event)(struct hid_device * , struct hid_field * , struct hid_usage * , __s32  ) ;
   void (*report)(struct hid_device * , struct hid_report * ) ;
   __u8 *(*report_fixup)(struct hid_device * , __u8 * , unsigned int * ) ;
   int (*input_mapping)(struct hid_device * , struct hid_input * , struct hid_field * ,
                        struct hid_usage * , unsigned long ** , int * ) ;
   int (*input_mapped)(struct hid_device * , struct hid_input * , struct hid_field * ,
                       struct hid_usage * , unsigned long ** , int * ) ;
   void (*input_configured)(struct hid_device * , struct hid_input * ) ;
   void (*feature_mapping)(struct hid_device * , struct hid_field * , struct hid_usage * ) ;
   int (*suspend)(struct hid_device * , pm_message_t  ) ;
   int (*resume)(struct hid_device * ) ;
   int (*reset_resume)(struct hid_device * ) ;
   struct device_driver driver ;
};
#line 663 "include/linux/hid.h"
struct hid_ll_driver {
   int (*start)(struct hid_device * ) ;
   void (*stop)(struct hid_device * ) ;
   int (*open)(struct hid_device * ) ;
   void (*close)(struct hid_device * ) ;
   int (*power)(struct hid_device * , int  ) ;
   int (*hidinput_input_event)(struct input_dev * , unsigned int  , unsigned int  ,
                               int  ) ;
   int (*parse)(struct hid_device * ) ;
   void (*request)(struct hid_device * , struct hid_report * , int  ) ;
   int (*wait)(struct hid_device * ) ;
   int (*idle)(struct hid_device * , int  , int  , int  ) ;
};
#line 15 "include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;
#line 16 "include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;
#line 20 "include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;
#line 21 "include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;
#line 190 "include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};
#line 198 "include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;
#line 48 "include/linux/elf.h"
struct kernel_param;
#line 48
struct kernel_param;
#line 49 "include/linux/elf.h"
struct kernel_param_ops {
   int (*set)(char const   * , struct kernel_param  const  * ) ;
   int (*get)(char * , struct kernel_param  const  * ) ;
   void (*free)(void * ) ;
};
#line 47 "include/linux/moduleparam.h"
struct kparam_string;
#line 47
struct kparam_array;
#line 47 "include/linux/moduleparam.h"
union __anonunion_ldv_20438_154 {
   void *arg ;
   struct kparam_string  const  *str ;
   struct kparam_array  const  *arr ;
};
#line 47 "include/linux/moduleparam.h"
struct kernel_param {
   char const   *name ;
   struct kernel_param_ops  const  *ops ;
   u16 perm ;
   s16 level ;
   union __anonunion_ldv_20438_154 ldv_20438 ;
};
#line 59 "include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};
#line 65 "include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops  const  *ops ;
   void *elem ;
};
#line 457 "include/linux/moduleparam.h"
struct static_key {
   atomic_t enabled ;
};
#line 210 "include/linux/jump_label.h"
struct tracepoint;
#line 210
struct tracepoint;
#line 211 "include/linux/jump_label.h"
struct tracepoint_func {
   void *func ;
   void *data ;
};
#line 29 "include/linux/tracepoint.h"
struct tracepoint {
   char const   *name ;
   struct static_key key ;
   void (*regfunc)(void) ;
   void (*unregfunc)(void) ;
   struct tracepoint_func *funcs ;
};
#line 86 "include/linux/tracepoint.h"
struct mod_arch_specific {

};
#line 37 "include/linux/module.h"
struct module_param_attrs;
#line 37 "include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
};
#line 46 "include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute * , struct module_kobject * , char * ) ;
   ssize_t (*store)(struct module_attribute * , struct module_kobject * , char const   * ,
                    size_t  ) ;
   void (*setup)(struct module * , char const   * ) ;
   int (*test)(struct module * ) ;
   void (*free)(struct module * ) ;
};
#line 72
struct exception_table_entry;
#line 72
struct exception_table_entry;
#line 201
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
} ;
#line 208 "include/linux/module.h"
struct module_ref {
   unsigned long incs ;
   unsigned long decs ;
};
#line 222
struct module_sect_attrs;
#line 222
struct module_notes_attrs;
#line 222
struct ftrace_event_call;
#line 222 "include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const   *version ;
   char const   *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol  const  *syms ;
   unsigned long const   *crcs ;
   unsigned int num_syms ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol  const  *gpl_syms ;
   unsigned long const   *gpl_crcs ;
   struct kernel_symbol  const  *unused_syms ;
   unsigned long const   *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol  const  *unused_gpl_syms ;
   unsigned long const   *unused_gpl_crcs ;
   bool sig_ok ;
   struct kernel_symbol  const  *gpl_future_syms ;
   unsigned long const   *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const  *tracepoints_ptrs ;
   unsigned int num_trace_bprintk_fmt ;
   char const   **trace_bprintk_fmt_start ;
   struct ftrace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct list_head source_list ;
   struct list_head target_list ;
   struct task_struct *waiter ;
   void (*exit)(void) ;
   struct module_ref *refptr ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};
#line 84 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
struct apple_sc {
   unsigned long quirks ;
   unsigned int fn_on ;
   unsigned long pressed_fn[12U] ;
   unsigned long pressed_numlock[12U] ;
};
#line 91 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
struct apple_key_translation {
   u16 from ;
   u16 to ;
   u8 flags ;
};
#line 809 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
typedef int ldv_func_ret_type___2;
#line 33 "include/linux/export.h"
extern struct module __this_module ;
#line 62 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/arch/x86/include/asm/bitops.h"
__inline static void set_bit(unsigned int nr , unsigned long volatile   *addr ) 
{ 


  {
#line 70
  __asm__  volatile   (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; bts %1,%0": "+m" (*((long volatile   *)addr)): "Ir" (nr): "memory");
#line 72
  return;
}
}
#line 100 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/arch/x86/include/asm/bitops.h"
__inline static void clear_bit(int nr , unsigned long volatile   *addr ) 
{ 


  {
#line 107
  __asm__  volatile   (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; btr %1,%0": "+m" (*((long volatile   *)addr)): "Ir" (nr));
#line 109
  return;
}
}
#line 318 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/arch/x86/include/asm/bitops.h"
__inline static int constant_test_bit(unsigned int nr , unsigned long const volatile   *addr ) 
{ 


  {
#line 320
  return ((int )((unsigned long )*(addr + (unsigned long )(nr / 64U)) >> ((int )nr & 63)) & 1);
}
}
#line 324 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/arch/x86/include/asm/bitops.h"
__inline static int variable_test_bit(int nr , unsigned long const volatile   *addr ) 
{ 
  int oldbit ;

  {
#line 328
  __asm__  volatile   ("bt %2,%1\n\tsbb %0,%0": "=r" (oldbit): "m" (*((unsigned long *)addr)),
                       "Ir" (nr));
#line 333
  return (oldbit);
}
}
#line 173 "include/linux/mutex.h"
extern int mutex_trylock(struct mutex * ) ;
#line 176
int ldv_mutex_trylock_4(struct mutex *ldv_func_arg1 ) ;
#line 178
extern void mutex_unlock(struct mutex * ) ;
#line 181
void ldv_mutex_unlock_2(struct mutex *ldv_func_arg1 ) ;
#line 185
void ldv_mutex_unlock_5(struct mutex *ldv_func_arg1 ) ;
#line 189
void ldv_mutex_unlock_6(struct mutex *ldv_func_arg1 ) ;
#line 7 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
extern void mutex_lock(struct mutex * ) ;
#line 10
void ldv_mutex_lock_1(struct mutex *ldv_func_arg1 ) ;
#line 14
void ldv_mutex_lock_3(struct mutex *ldv_func_arg1 ) ;
#line 18
void ldv_mutex_lock_7(struct mutex *ldv_func_arg1 ) ;
#line 23
extern void ldv_mutex_lock_i_mutex_of_inode(struct mutex * ) ;
#line 27
extern void ldv_mutex_unlock_i_mutex_of_inode(struct mutex * ) ;
#line 31
extern void ldv_mutex_lock_lock(struct mutex * ) ;
#line 35
extern void ldv_mutex_unlock_lock(struct mutex * ) ;
#line 39
extern void ldv_mutex_lock_mutex_of_device(struct mutex * ) ;
#line 40
extern int ldv_mutex_trylock_mutex_of_device(struct mutex * ) ;
#line 43
extern void ldv_mutex_unlock_mutex_of_device(struct mutex * ) ;
#line 45 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
int ldv_state_variable_1  ;
#line 46 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
int ref_cnt  ;
#line 47 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
int ldv_state_variable_0  ;
#line 48
extern int __VERIFIER_nondet_int(void) ;
#line 872 "include/linux/device.h"
extern void *dev_get_drvdata(struct device  const  * ) ;
#line 873
extern int dev_set_drvdata(struct device * , void * ) ;
#line 982
extern int dev_err(struct device  const  * , char const   *  , ...) ;
#line 988
extern int _dev_info(struct device  const  * , char const   *  , ...) ;
#line 132 "include/linux/slab.h"
extern void kfree(void const   * ) ;
#line 108 "include/linux/slub_def.h"
extern void *__kmalloc(size_t  , gfp_t  ) ;
#line 158 "include/linux/slub_def.h"
__inline static void *kmalloc(size_t size , gfp_t flags ) 
{ 
  void *tmp___2 ;

  {
#line 174
  tmp___2 = __kmalloc(size, flags);
#line 174
  return (tmp___2);
}
}
#line 544 "include/linux/slab.h"
__inline static void *kzalloc(size_t size , gfp_t flags ) 
{ 
  void *tmp ;

  {
#line 546
  tmp = kmalloc(size, flags | 32768U);
#line 546
  return (tmp);
}
}
#line 384 "include/linux/input.h"
extern void input_event(struct input_dev * , unsigned int  , unsigned int  , int  ) ;
#line 522 "include/linux/hid.h"
__inline static void *hid_get_drvdata(struct hid_device *hdev ) 
{ 
  void *tmp ;

  {
#line 524
  tmp = dev_get_drvdata((struct device  const  *)(& hdev->dev));
#line 524
  return (tmp);
}
}
#line 527 "include/linux/hid.h"
__inline static void hid_set_drvdata(struct hid_device *hdev , void *data ) 
{ 


  {
#line 529
  dev_set_drvdata(& hdev->dev, data);
#line 530
  return;
}
}
#line 714
extern int __hid_register_driver(struct hid_driver * , struct module * , char const   * ) ;
#line 721
extern void hid_unregister_driver(struct hid_driver * ) ;
#line 750
extern int hid_open_report(struct hid_device * ) ;
#line 752
extern int hid_connect(struct hid_device * , unsigned int  ) ;
#line 753
extern void hid_disconnect(struct hid_device * ) ;
#line 806 "include/linux/hid.h"
__inline static void hid_map_usage(struct hid_input *hidinput , struct hid_usage *usage ,
                                   unsigned long **bit , int *max , __u8 type , __u16 c ) 
{ 
  struct input_dev *input ;

  {
#line 810
  input = hidinput->input;
#line 812
  usage->type = type;
#line 813
  usage->code = c;
#line 815
  switch ((int )type) {
  case 3: 
#line 817
  *bit = (unsigned long *)(& input->absbit);
#line 818
  *max = 63;
#line 819
  goto ldv_19181;
  case 2: 
#line 821
  *bit = (unsigned long *)(& input->relbit);
#line 822
  *max = 15;
#line 823
  goto ldv_19181;
  case 1: 
#line 825
  *bit = (unsigned long *)(& input->keybit);
#line 826
  *max = 767;
#line 827
  goto ldv_19181;
  case 17: 
#line 829
  *bit = (unsigned long *)(& input->ledbit);
#line 830
  *max = 15;
#line 831
  goto ldv_19181;
  }
  ldv_19181: ;
#line 834
  return;
}
}
#line 841 "include/linux/hid.h"
__inline static void hid_map_usage_clear(struct hid_input *hidinput , struct hid_usage *usage ,
                                         unsigned long **bit , int *max , __u8 type ,
                                         __u16 c ) 
{ 


  {
#line 845
  hid_map_usage(hidinput, usage, bit, max, (int )type, (int )c);
#line 846
  clear_bit((int )c, (unsigned long volatile   *)*bit);
#line 847
  return;
}
}
#line 858 "include/linux/hid.h"
__inline static int hid_parse(struct hid_device *hdev ) 
{ 
  int tmp ;

  {
#line 860
  tmp = hid_open_report(hdev);
#line 860
  return (tmp);
}
}
#line 873 "include/linux/hid.h"
__inline static int hid_hw_start(struct hid_device *hdev , unsigned int connect_mask ) 
{ 
  int ret ;
  int tmp ;

  {
#line 876
  tmp = (*((hdev->ll_driver)->start))(hdev);
#line 876
  ret = tmp;
#line 877
  if (ret != 0 || connect_mask == 0U) {
#line 878
    return (ret);
  } else {

  }
#line 879
  ret = hid_connect(hdev, connect_mask);
#line 880
  if (ret != 0) {
#line 881
    (*((hdev->ll_driver)->stop))(hdev);
  } else {

  }
#line 882
  return (ret);
}
}
#line 893 "include/linux/hid.h"
__inline static void hid_hw_stop(struct hid_device *hdev ) 
{ 


  {
#line 895
  hid_disconnect(hdev);
#line 896
  (*((hdev->ll_driver)->stop))(hdev);
#line 897
  return;
}
}
#line 75 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
static unsigned int fnmode  =    1U;
#line 80 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
static unsigned int iso_layout  =    1U;
#line 98 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
static struct apple_key_translation  const  macbookair_fn_keys[18U]  = 
#line 98
  {      {14U, 111U, (unsigned char)0}, 
        {28U, 110U, (unsigned char)0}, 
        {59U, 224U, 1U}, 
        {60U, 225U, 1U}, 
        {61U, 120U, 1U}, 
        {62U, 204U, 1U}, 
        {64U, 165U, 1U}, 
        {65U, 164U, 1U}, 
        {66U, 163U, 1U}, 
        {67U, 113U, 1U}, 
        {68U, 114U, 1U}, 
        {87U, 115U, 1U}, 
        {88U, 161U, 1U}, 
        {103U, 104U, (unsigned char)0}, 
        {108U, 109U, (unsigned char)0}, 
        {105U, 102U, (unsigned char)0}, 
        {106U, 107U, (unsigned char)0}};
#line 119 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
static struct apple_key_translation  const  apple_fn_keys[19U]  = 
#line 119
  {      {14U, 111U, (unsigned char)0}, 
        {28U, 110U, (unsigned char)0}, 
        {59U, 224U, 1U}, 
        {60U, 225U, 1U}, 
        {61U, 120U, 1U}, 
        {62U, 204U, 1U}, 
        {63U, 229U, 1U}, 
        {64U, 230U, 1U}, 
        {65U, 165U, 1U}, 
        {66U, 164U, 1U}, 
        {67U, 163U, 1U}, 
        {68U, 113U, 1U}, 
        {87U, 114U, 1U}, 
        {88U, 115U, 1U}, 
        {103U, 104U, (unsigned char)0}, 
        {108U, 109U, (unsigned char)0}, 
        {105U, 102U, (unsigned char)0}, 
        {106U, 107U, (unsigned char)0}};
#line 141 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
static struct apple_key_translation  const  powerbook_fn_keys[16U]  = 
#line 141
  {      {14U, 111U, (unsigned char)0}, 
        {59U, 224U, 1U}, 
        {60U, 225U, 1U}, 
        {61U, 113U, 1U}, 
        {62U, 114U, 1U}, 
        {63U, 115U, 1U}, 
        {64U, 69U, 1U}, 
        {65U, 227U, 1U}, 
        {66U, 228U, 1U}, 
        {67U, 229U, 1U}, 
        {68U, 230U, 1U}, 
        {103U, 104U, (unsigned char)0}, 
        {108U, 109U, (unsigned char)0}, 
        {105U, 102U, (unsigned char)0}, 
        {106U, 107U, (unsigned char)0}};
#line 160 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
static struct apple_key_translation  const  powerbook_numlock_keys[20U]  = 
#line 160
  {      {36U, 79U, (unsigned char)0}, 
        {37U, 80U, (unsigned char)0}, 
        {38U, 81U, (unsigned char)0}, 
        {22U, 75U, (unsigned char)0}, 
        {23U, 76U, (unsigned char)0}, 
        {24U, 77U, (unsigned char)0}, 
        {8U, 71U, (unsigned char)0}, 
        {9U, 72U, (unsigned char)0}, 
        {10U, 73U, (unsigned char)0}, 
        {50U, 82U, (unsigned char)0}, 
        {52U, 83U, (unsigned char)0}, 
        {53U, 78U, (unsigned char)0}, 
        {39U, 74U, (unsigned char)0}, 
        {25U, 55U, (unsigned char)0}, 
        {12U, 117U, (unsigned char)0}, 
        {11U, 98U, (unsigned char)0}, 
        {64U, 69U, (unsigned char)0}, 
        {96U, 96U, (unsigned char)0}, 
        {14U, 14U, (unsigned char)0}};
#line 183 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
static struct apple_key_translation  const  apple_iso_keyboard[3U]  = {      {41U, 86U, (unsigned char)0}, 
        {86U, 41U, (unsigned char)0}};
#line 189 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
static struct apple_key_translation  const  *apple_find_translation(struct apple_key_translation  const  *table ,
                                                                    u16 from ) 
{ 
  struct apple_key_translation  const  *trans ;

  {
#line 195
  trans = table;
#line 195
  goto ldv_20961;
  ldv_20960: ;
#line 196
  if ((int )((unsigned short )trans->from) == (int )from) {
#line 197
    return (trans);
  } else {

  }
#line 195
  trans = trans + 1;
  ldv_20961: ;
#line 195
  if ((unsigned int )((unsigned short )trans->from) != 0U) {
#line 196
    goto ldv_20960;
  } else {

  }

#line 199
  return (0);
}
}
#line 202 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
static int hidinput_apple_event(struct hid_device *hid , struct input_dev *input ,
                                struct hid_usage *usage , __s32 value ) 
{ 
  struct apple_sc *asc ;
  void *tmp ;
  struct apple_key_translation  const  *trans ;
  struct apple_key_translation  const  *table ;
  int do_translate ;
  int tmp___0 ;
  int tmp___1 ;
  int tmp___2 ;

  {
#line 205
  tmp = hid_get_drvdata(hid);
#line 205
  asc = (struct apple_sc *)tmp;
#line 208
  if ((unsigned int )usage->code == 464U) {
#line 209
    asc->fn_on = value != 0;
#line 210
    input_event(input, (unsigned int )usage->type, (unsigned int )usage->code, value);
#line 211
    return (1);
  } else {

  }
#line 214
  if (fnmode != 0U) {
#line 217
    if (hid->product > 574U && hid->product <= 580U) {
#line 219
      table = (struct apple_key_translation  const  *)(& macbookair_fn_keys);
    } else
#line 220
    if (hid->product <= 540U || hid->product > 767U) {
#line 221
      table = (struct apple_key_translation  const  *)(& powerbook_fn_keys);
    } else {
#line 223
      table = (struct apple_key_translation  const  *)(& apple_fn_keys);
    }
#line 225
    trans = apple_find_translation(table, (int )usage->code);
#line 227
    if ((unsigned long )trans != (unsigned long )((struct apple_key_translation  const  *)0)) {
#line 228
      tmp___0 = variable_test_bit((int )usage->code, (unsigned long const volatile   *)(& asc->pressed_fn));
#line 228
      if (tmp___0 != 0) {
#line 229
        do_translate = 1;
      } else
#line 230
      if ((int )trans->flags & 1) {
#line 231
        do_translate = (fnmode == 2U && asc->fn_on != 0U) || (fnmode == 1U && asc->fn_on == 0U);
      } else {
#line 234
        do_translate = (int )asc->fn_on;
      }
#line 236
      if (do_translate != 0) {
#line 237
        if (value != 0) {
#line 238
          set_bit((unsigned int )usage->code, (unsigned long volatile   *)(& asc->pressed_fn));
        } else {
#line 240
          clear_bit((int )usage->code, (unsigned long volatile   *)(& asc->pressed_fn));
        }
#line 242
        input_event(input, (unsigned int )usage->type, (unsigned int )trans->to, value);
#line 245
        return (1);
      } else {

      }
    } else {

    }
#line 249
    if ((asc->quirks & 256UL) != 0UL) {
#line 249
      tmp___1 = variable_test_bit((int )usage->code, (unsigned long const volatile   *)(& asc->pressed_numlock));
#line 249
      if (tmp___1 != 0) {
#line 249
        goto _L;
      } else {
#line 249
        tmp___2 = constant_test_bit(0U, (unsigned long const volatile   *)(& input->led));
#line 249
        if (tmp___2 != 0) {
          _L: /* CIL Label */ 
#line 252
          trans = apple_find_translation((struct apple_key_translation  const  *)(& powerbook_numlock_keys),
                                         (int )usage->code);
#line 255
          if ((unsigned long )trans != (unsigned long )((struct apple_key_translation  const  *)0)) {
#line 256
            if (value != 0) {
#line 257
              set_bit((unsigned int )usage->code, (unsigned long volatile   *)(& asc->pressed_numlock));
            } else {
#line 260
              clear_bit((int )usage->code, (unsigned long volatile   *)(& asc->pressed_numlock));
            }
#line 263
            input_event(input, (unsigned int )usage->type, (unsigned int )trans->to,
                        value);
          } else {

          }
#line 267
          return (1);
        } else {

        }
      }
    } else {

    }
  } else {

  }
#line 271
  if (iso_layout != 0U) {
#line 272
    if ((asc->quirks & 16UL) != 0UL) {
#line 273
      trans = apple_find_translation((struct apple_key_translation  const  *)(& apple_iso_keyboard),
                                     (int )usage->code);
#line 274
      if ((unsigned long )trans != (unsigned long )((struct apple_key_translation  const  *)0)) {
#line 275
        input_event(input, (unsigned int )usage->type, (unsigned int )trans->to, value);
#line 276
        return (1);
      } else {

      }
    } else {

    }
  } else {

  }
#line 281
  return (0);
}
}
#line 284 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
static int apple_event(struct hid_device *hdev , struct hid_field *field , struct hid_usage *usage ,
                       __s32 value ) 
{ 
  struct apple_sc *asc ;
  void *tmp ;
  int tmp___0 ;

  {
#line 287
  tmp = hid_get_drvdata(hdev);
#line 287
  asc = (struct apple_sc *)tmp;
#line 289
  if (((hdev->claimed & 1U) == 0U || (unsigned long )field->hidinput == (unsigned long )((struct hid_input *)0)) || (unsigned int )usage->type == 0U) {
#line 291
    return (0);
  } else {

  }
#line 293
  if ((asc->quirks & 64UL) != 0UL && (unsigned int )usage->code == 6U) {
#line 295
    input_event((field->hidinput)->input, (unsigned int )usage->type, (unsigned int )usage->code,
                - value);
#line 297
    return (1);
  } else {

  }
#line 300
  if ((asc->quirks & 4UL) != 0UL) {
#line 300
    tmp___0 = hidinput_apple_event(hdev, (field->hidinput)->input, usage, value);
#line 300
    if (tmp___0 != 0) {
#line 303
      return (1);
    } else {

    }
  } else {

  }
#line 306
  return (0);
}
}
#line 312 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
static __u8 *apple_report_fixup(struct hid_device *hdev , __u8 *rdesc , unsigned int *rsize ) 
{ 
  struct apple_sc *asc ;
  void *tmp ;
  __u8 tmp___0 ;

  {
#line 315
  tmp = hid_get_drvdata(hdev);
#line 315
  asc = (struct apple_sc *)tmp;
#line 317
  if ((((int )asc->quirks & 1 && *rsize > 59U) && (unsigned int )*(rdesc + 53UL) == 101U) && (unsigned int )*(rdesc + 59UL) == 101U) {
#line 319
    _dev_info((struct device  const  *)(& hdev->dev), "fixing up MacBook JIS keyboard report descriptor\n");
#line 321
    tmp___0 = 231U;
#line 321
    *(rdesc + 59UL) = tmp___0;
#line 321
    *(rdesc + 53UL) = tmp___0;
  } else {

  }
#line 323
  return (rdesc);
}
}
#line 326 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
static void apple_setup_input(struct input_dev *input ) 
{ 
  struct apple_key_translation  const  *trans ;

  {
#line 330
  set_bit(69U, (unsigned long volatile   *)(& input->keybit));
#line 333
  trans = (struct apple_key_translation  const  *)(& apple_fn_keys);
#line 333
  goto ldv_20991;
  ldv_20990: 
#line 334
  set_bit((unsigned int )trans->to, (unsigned long volatile   *)(& input->keybit));
#line 333
  trans = trans + 1;
  ldv_20991: ;
#line 333
  if ((unsigned int )((unsigned short )trans->from) != 0U) {
#line 334
    goto ldv_20990;
  } else {

  }
#line 336
  trans = (struct apple_key_translation  const  *)(& powerbook_fn_keys);
#line 336
  goto ldv_20994;
  ldv_20993: 
#line 337
  set_bit((unsigned int )trans->to, (unsigned long volatile   *)(& input->keybit));
#line 336
  trans = trans + 1;
  ldv_20994: ;
#line 336
  if ((unsigned int )((unsigned short )trans->from) != 0U) {
#line 337
    goto ldv_20993;
  } else {

  }
#line 339
  trans = (struct apple_key_translation  const  *)(& powerbook_numlock_keys);
#line 339
  goto ldv_20997;
  ldv_20996: 
#line 340
  set_bit((unsigned int )trans->to, (unsigned long volatile   *)(& input->keybit));
#line 339
  trans = trans + 1;
  ldv_20997: ;
#line 339
  if ((unsigned int )((unsigned short )trans->from) != 0U) {
#line 340
    goto ldv_20996;
  } else {

  }
#line 342
  trans = (struct apple_key_translation  const  *)(& apple_iso_keyboard);
#line 342
  goto ldv_21000;
  ldv_20999: 
#line 343
  set_bit((unsigned int )trans->to, (unsigned long volatile   *)(& input->keybit));
#line 342
  trans = trans + 1;
  ldv_21000: ;
#line 342
  if ((unsigned int )((unsigned short )trans->from) != 0U) {
#line 343
    goto ldv_20999;
  } else {

  }

#line 347
  return;
}
}
#line 346 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
static int apple_input_mapping(struct hid_device *hdev , struct hid_input *hi , struct hid_field *field ,
                               struct hid_usage *usage , unsigned long **bit , int *max ) 
{ 


  {
#line 350
  if (usage->hid == 16711683U) {
#line 352
    set_bit(20U, (unsigned long volatile   *)(& (hi->input)->evbit));
#line 353
    hid_map_usage_clear(hi, usage, bit, max, 1, 464);
#line 354
    apple_setup_input(hi->input);
#line 355
    return (1);
  } else {

  }
#line 359
  return (0);
}
}
#line 362 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
static int apple_input_mapped(struct hid_device *hdev , struct hid_input *hi , struct hid_field *field ,
                              struct hid_usage *usage , unsigned long **bit , int *max ) 
{ 
  struct apple_sc *asc ;
  void *tmp ;

  {
#line 366
  tmp = hid_get_drvdata(hdev);
#line 366
  asc = (struct apple_sc *)tmp;
#line 368
  if ((asc->quirks & 32UL) != 0UL) {
#line 369
    if (usage->hid == 65586U) {
#line 370
      hid_map_usage(hi, usage, bit, max, 2, 6);
    } else
#line 371
    if ((unsigned int )usage->code == 257U) {
#line 372
      hid_map_usage(hi, usage, bit, max, 1, 258);
    } else
#line 373
    if ((unsigned int )usage->code == 258U) {
#line 374
      hid_map_usage(hi, usage, bit, max, 1, 257);
    } else {

    }
  } else {

  }
#line 377
  return (0);
}
}
#line 380 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
static int apple_probe(struct hid_device *hdev , struct hid_device_id  const  *id ) 
{ 
  unsigned long quirks ;
  struct apple_sc *asc ;
  unsigned int connect_mask ;
  int ret ;
  void *tmp ;

  {
#line 383
  quirks = id->driver_data;
#line 385
  connect_mask = 45U;
#line 388
  tmp = kzalloc(208UL, 208U);
#line 388
  asc = (struct apple_sc *)tmp;
#line 389
  if ((unsigned long )asc == (unsigned long )((struct apple_sc *)0)) {
#line 390
    dev_err((struct device  const  *)(& hdev->dev), "can\'t alloc apple descriptor\n");
#line 391
    return (-12);
  } else {

  }
#line 394
  asc->quirks = quirks;
#line 396
  hid_set_drvdata(hdev, (void *)asc);
#line 398
  ret = hid_parse(hdev);
#line 399
  if (ret != 0) {
#line 400
    dev_err((struct device  const  *)(& hdev->dev), "parse failed\n");
#line 401
    goto err_free;
  } else {

  }
#line 404
  if ((quirks & 8UL) != 0UL) {
#line 405
    connect_mask = connect_mask | 16U;
  } else {

  }
#line 406
  if ((quirks & 128UL) != 0UL) {
#line 407
    connect_mask = connect_mask & 4294967294U;
  } else {

  }
#line 409
  ret = hid_hw_start(hdev, connect_mask);
#line 410
  if (ret != 0) {
#line 411
    dev_err((struct device  const  *)(& hdev->dev), "hw start failed\n");
#line 412
    goto err_free;
  } else {

  }
#line 415
  return (0);
  err_free: 
#line 417
  kfree((void const   *)asc);
#line 418
  return (ret);
}
}
#line 421 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
static void apple_remove(struct hid_device *hdev ) 
{ 
  void *tmp ;

  {
#line 423
  hid_hw_stop(hdev);
#line 424
  tmp = hid_get_drvdata(hdev);
#line 424
  kfree((void const   *)tmp);
#line 425
  return;
}
}
#line 427 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
static struct hid_device_id  const  apple_devices[71U]  = 
#line 427
  {      {3U, (unsigned short)0, 1452U, 772U, 96UL}, 
        {3U, (unsigned short)0, 1452U, 526U, 260UL}, 
        {3U, (unsigned short)0, 1452U, 527U, 260UL}, 
        {3U, (unsigned short)0, 1452U, 532U, 260UL}, 
        {3U, (unsigned short)0, 1452U, 533U, 276UL}, 
        {3U, (unsigned short)0, 1452U, 534U, 260UL}, 
        {3U, (unsigned short)0, 1452U, 535U, 260UL}, 
        {3U, (unsigned short)0, 1452U, 536U, 276UL}, 
        {3U, (unsigned short)0, 1452U, 537U, 261UL}, 
        {3U, (unsigned short)0, 1452U, 538U, 260UL}, 
        {3U, (unsigned short)0, 1452U, 539U, 276UL}, 
        {3U, (unsigned short)0, 1452U, 540U, 261UL}, 
        {3U, (unsigned short)0, 1452U, 541U, 4UL}, 
        {3U, (unsigned short)0, 1452U, 542U, 20UL}, 
        {3U, (unsigned short)0, 1452U, 543U, 4UL}, 
        {3U, (unsigned short)0, 1452U, 544U, 4UL}, 
        {3U, (unsigned short)0, 1452U, 545U, 20UL}, 
        {3U, (unsigned short)0, 1452U, 546U, 4UL}, 
        {3U, (unsigned short)0, 1452U, 553U, 260UL}, 
        {3U, (unsigned short)0, 1452U, 554U, 276UL}, 
        {3U, (unsigned short)0, 1452U, 555U, 261UL}, 
        {3U, (unsigned short)0, 1452U, 591U, 4UL}, 
        {3U, (unsigned short)0, 1452U, 592U, 20UL}, 
        {3U, (unsigned short)0, 1452U, 593U, 4UL}, 
        {5U, (unsigned short)0, 1452U, 556U, 260UL}, 
        {5U, (unsigned short)0, 1452U, 557U, 276UL}, 
        {5U, (unsigned short)0, 1452U, 598U, 276UL}, 
        {5U, (unsigned short)0, 1452U, 597U, 260UL}, 
        {5U, (unsigned short)0, 1452U, 558U, 260UL}, 
        {3U, (unsigned short)0, 1452U, 547U, 4UL}, 
        {3U, (unsigned short)0, 1452U, 548U, 20UL}, 
        {3U, (unsigned short)0, 1452U, 549U, 5UL}, 
        {3U, (unsigned short)0, 1452U, 560U, 4UL}, 
        {3U, (unsigned short)0, 1452U, 561U, 20UL}, 
        {3U, (unsigned short)0, 1452U, 562U, 5UL}, 
        {3U, (unsigned short)0, 1452U, 566U, 4UL}, 
        {3U, (unsigned short)0, 1452U, 567U, 20UL}, 
        {3U, (unsigned short)0, 1452U, 568U, 5UL}, 
        {3U, (unsigned short)0, 1452U, 575U, 4UL}, 
        {3U, (unsigned short)0, 1452U, 576U, 20UL}, 
        {3U, (unsigned short)0, 1452U, 577U, 5UL}, 
        {3U, (unsigned short)0, 1452U, 578U, 4UL}, 
        {3U, (unsigned short)0, 1452U, 579U, 20UL}, 
        {3U, (unsigned short)0, 1452U, 580U, 5UL}, 
        {3U, (unsigned short)0, 1452U, 581U, 4UL}, 
        {3U, (unsigned short)0, 1452U, 582U, 20UL}, 
        {3U, (unsigned short)0, 1452U, 583U, 5UL}, 
        {3U, (unsigned short)0, 1452U, 588U, 4UL}, 
        {3U, (unsigned short)0, 1452U, 589U, 20UL}, 
        {3U, (unsigned short)0, 1452U, 590U, 5UL}, 
        {3U, (unsigned short)0, 1452U, 585U, 4UL}, 
        {3U, (unsigned short)0, 1452U, 586U, 20UL}, 
        {3U, (unsigned short)0, 1452U, 587U, 5UL}, 
        {3U, (unsigned short)0, 1452U, 594U, 4UL}, 
        {3U, (unsigned short)0, 1452U, 595U, 20UL}, 
        {3U, (unsigned short)0, 1452U, 596U, 5UL}, 
        {3U, (unsigned short)0, 1452U, 610U, 4UL}, 
        {3U, (unsigned short)0, 1452U, 611U, 20UL}, 
        {3U, (unsigned short)0, 1452U, 612U, 5UL}, 
        {3U, (unsigned short)0, 1452U, 601U, 4UL}, 
        {3U, (unsigned short)0, 1452U, 602U, 20UL}, 
        {3U, (unsigned short)0, 1452U, 603U, 5UL}, 
        {3U, (unsigned short)0, 1452U, 657U, 4UL}, 
        {3U, (unsigned short)0, 1452U, 658U, 20UL}, 
        {3U, (unsigned short)0, 1452U, 659U, 5UL}, 
        {5U, (unsigned short)0, 1452U, 569U, 260UL}, 
        {5U, (unsigned short)0, 1452U, 570U, 276UL}, 
        {5U, (unsigned short)0, 1452U, 571U, 260UL}, 
        {3U, (unsigned short)0, 1452U, 778U, 260UL}, 
        {3U, (unsigned short)0, 1452U, 779U, 260UL}};
#line 583 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
struct hid_device_id  const  __mod_hid_device_table  ;
#line 585 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
static struct hid_driver apple_driver  = 
#line 585
     {(char *)"apple", (struct hid_device_id  const  *)(& apple_devices), {0, 0}, {{{{{0U}},
                                                                                   0U,
                                                                                   0U,
                                                                                   0,
                                                                                   {0,
                                                                                    {0,
                                                                                     0},
                                                                                    0,
                                                                                    0,
                                                                                    0UL}}}},
    & apple_probe, & apple_remove, 0, 0, 0, & apple_event, 0, & apple_report_fixup,
    & apple_input_mapping, & apple_input_mapped, 0, 0, 0, 0, 0, {0, 0, 0, 0, (_Bool)0,
                                                                 0, 0, 0, 0, 0, 0,
                                                                 0, 0, 0, 0}};
#line 595 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
static int apple_driver_init(void) 
{ 
  int tmp ;

  {
#line 595
  tmp = __hid_register_driver(& apple_driver, & __this_module, "hid_apple");
#line 595
  return (tmp);
}
}
#line 595 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
static void apple_driver_exit(void) 
{ 


  {
#line 595
  hid_unregister_driver(& apple_driver);
#line 596
  return;
}
}
#line 599 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
unsigned long **ldvarg7  ;
#line 600 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
__s32 ldvarg3  ;
#line 601 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
struct hid_usage *apple_driver_group1  ;
#line 602 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
unsigned long **ldvarg1  ;
#line 603 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
int ldv_retval_0  ;
#line 604 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
int ldv_retval_1  ;
#line 605
extern void ldv_initialize(void) ;
#line 606 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
int *ldvarg0  ;
#line 607 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
__u8 *ldvarg5  ;
#line 608 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
int *ldvarg6  ;
#line 609 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
struct hid_field *apple_driver_group0  ;
#line 610 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
unsigned int *ldvarg4  ;
#line 611 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
struct hid_input *apple_driver_group3  ;
#line 612 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
struct hid_device *apple_driver_group2  ;
#line 613
extern void ldv_check_final_state(void) ;
#line 614 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
struct hid_device_id *ldvarg2  ;
#line 622 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
void main(void) 
{ 
  int tmp ;
  int tmp___0 ;
  int tmp___1 ;

  {
#line 623
  ldv_initialize();
#line 625
  ldv_state_variable_1 = 0;
#line 626
  ref_cnt = 0;
#line 627
  ldv_state_variable_0 = 1;
  ldv_21093: 
#line 629
  tmp = __VERIFIER_nondet_int();
#line 629
  switch (tmp) {
  case 0: ;
#line 633
  if (ldv_state_variable_1 != 0) {
#line 634
    tmp___0 = __VERIFIER_nondet_int();
#line 634
    switch (tmp___0) {
    case 0: ;
#line 637
    if (ldv_state_variable_1 == 1) {
#line 639
      apple_input_mapped(apple_driver_group2, apple_driver_group3, apple_driver_group0,
                         apple_driver_group1, ldvarg7, ldvarg6);
#line 641
      ldv_state_variable_1 = 1;
    } else {

    }
#line 644
    if (ldv_state_variable_1 == 2) {
#line 646
      apple_input_mapped(apple_driver_group2, apple_driver_group3, apple_driver_group0,
                         apple_driver_group1, ldvarg7, ldvarg6);
#line 648
      ldv_state_variable_1 = 2;
    } else {

    }
#line 651
    goto ldv_21078;
    case 1: ;
#line 654
    if (ldv_state_variable_1 == 1) {
#line 656
      apple_report_fixup(apple_driver_group2, ldvarg5, ldvarg4);
#line 658
      ldv_state_variable_1 = 1;
    } else {

    }
#line 661
    if (ldv_state_variable_1 == 2) {
#line 663
      apple_report_fixup(apple_driver_group2, ldvarg5, ldvarg4);
#line 665
      ldv_state_variable_1 = 2;
    } else {

    }
#line 668
    goto ldv_21078;
    case 2: ;
#line 671
    if (ldv_state_variable_1 == 1) {
#line 673
      apple_event(apple_driver_group2, apple_driver_group0, apple_driver_group1, ldvarg3);
#line 675
      ldv_state_variable_1 = 1;
    } else {

    }
#line 678
    if (ldv_state_variable_1 == 2) {
#line 680
      apple_event(apple_driver_group2, apple_driver_group0, apple_driver_group1, ldvarg3);
#line 682
      ldv_state_variable_1 = 2;
    } else {

    }
#line 685
    goto ldv_21078;
    case 3: ;
#line 688
    if (ldv_state_variable_1 == 1) {
#line 690
      ldv_retval_0 = apple_probe(apple_driver_group2, (struct hid_device_id  const  *)ldvarg2);
#line 692
      if (ldv_retval_0 == 0) {
#line 693
        ldv_state_variable_1 = 2;
#line 694
        ref_cnt = ref_cnt + 1;
      } else {

      }
    } else {

    }
#line 698
    goto ldv_21078;
    case 4: ;
#line 701
    if (ldv_state_variable_1 == 1) {
#line 703
      apple_input_mapping(apple_driver_group2, apple_driver_group3, apple_driver_group0,
                          apple_driver_group1, ldvarg1, ldvarg0);
#line 705
      ldv_state_variable_1 = 1;
    } else {

    }
#line 708
    if (ldv_state_variable_1 == 2) {
#line 710
      apple_input_mapping(apple_driver_group2, apple_driver_group3, apple_driver_group0,
                          apple_driver_group1, ldvarg1, ldvarg0);
#line 712
      ldv_state_variable_1 = 2;
    } else {

    }
#line 715
    goto ldv_21078;
    case 5: ;
#line 718
    if (ldv_state_variable_1 == 2) {
#line 720
      apple_remove(apple_driver_group2);
#line 722
      ldv_state_variable_1 = 1;
#line 723
      ref_cnt = ref_cnt - 1;
    } else {

    }
#line 726
    goto ldv_21078;
    default: ;
#line 727
    goto ldv_21078;
    }
    ldv_21078: ;
  } else {

  }
#line 731
  goto ldv_21085;
  case 1: ;
#line 735
  if (ldv_state_variable_0 != 0) {
#line 736
    tmp___1 = __VERIFIER_nondet_int();
#line 736
    switch (tmp___1) {
    case 0: ;
#line 739
    if (ldv_state_variable_0 == 3 && ref_cnt == 0) {
#line 741
      apple_driver_exit();
#line 742
      ldv_state_variable_0 = 2;
#line 743
      goto ldv_final;
    } else {

    }
#line 746
    goto ldv_21089;
    case 1: ;
#line 749
    if (ldv_state_variable_0 == 1) {
#line 751
      ldv_retval_1 = apple_driver_init();
#line 753
      if (ldv_retval_1 == 0) {
#line 754
        ldv_state_variable_0 = 3;
#line 755
        ldv_state_variable_1 = 1;
      } else {

      }
#line 757
      if (ldv_retval_1 != 0) {
#line 758
        ldv_state_variable_0 = 2;
#line 759
        goto ldv_final;
      } else {

      }
    } else {

    }
#line 763
    goto ldv_21089;
    default: ;
#line 764
    goto ldv_21089;
    }
    ldv_21089: ;
  } else {

  }
#line 768
  goto ldv_21085;
  default: ;
#line 769
  goto ldv_21085;
  }
  ldv_21085: ;
#line 771
  goto ldv_21093;
  ldv_final: 
#line 773
  ldv_check_final_state();
#line 774
  return;
}
}
#line 777 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
void ldv_mutex_lock_1(struct mutex *ldv_func_arg1 ) 
{ 


  {
#line 782
  ldv_mutex_lock_lock(ldv_func_arg1);
#line 784
  mutex_lock(ldv_func_arg1);
#line 785
  return;
}
}
#line 787 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
void ldv_mutex_unlock_2(struct mutex *ldv_func_arg1 ) 
{ 


  {
#line 792
  ldv_mutex_unlock_lock(ldv_func_arg1);
#line 794
  mutex_unlock(ldv_func_arg1);
#line 795
  return;
}
}
#line 797 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
void ldv_mutex_lock_3(struct mutex *ldv_func_arg1 ) 
{ 


  {
#line 802
  ldv_mutex_lock_mutex_of_device(ldv_func_arg1);
#line 804
  mutex_lock(ldv_func_arg1);
#line 805
  return;
}
}
#line 807 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
int ldv_mutex_trylock_4(struct mutex *ldv_func_arg1 ) 
{ 
  ldv_func_ret_type___2 ldv_func_res ;
  int tmp ;
  int tmp___0 ;

  {
#line 812
  tmp = mutex_trylock(ldv_func_arg1);
#line 812
  ldv_func_res = tmp;
#line 814
  tmp___0 = ldv_mutex_trylock_mutex_of_device(ldv_func_arg1);
#line 814
  return (tmp___0);
#line 816
  return (ldv_func_res);
}
}
#line 819 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
void ldv_mutex_unlock_5(struct mutex *ldv_func_arg1 ) 
{ 


  {
#line 824
  ldv_mutex_unlock_mutex_of_device(ldv_func_arg1);
#line 826
  mutex_unlock(ldv_func_arg1);
#line 827
  return;
}
}
#line 829 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
void ldv_mutex_unlock_6(struct mutex *ldv_func_arg1 ) 
{ 


  {
#line 834
  ldv_mutex_unlock_i_mutex_of_inode(ldv_func_arg1);
#line 836
  mutex_unlock(ldv_func_arg1);
#line 837
  return;
}
}
#line 839 "/home/shchepetkov/tests/thomas/work/current--X--drivers/hid/hid-apple.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/hid/hid-apple.c.prepared"
void ldv_mutex_lock_7(struct mutex *ldv_func_arg1 ) 
{ 


  {
#line 844
  ldv_mutex_lock_i_mutex_of_inode(ldv_func_arg1);
#line 846
  mutex_lock(ldv_func_arg1);
#line 847
  return;
}
}
