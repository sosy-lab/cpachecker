// SPDX-FileCopyrightText: The Linux kernel authors
//
// SPDX-License-Identifier: GPL-2.0-only

/* Generated by CIL v. 1.5.1 */
/* print_CIL_Input is false */

#line 88 "include/linux/compiler.h"
struct kernel_symbol {
   unsigned long value ;
   char const   *name ;
};
#line 33 "include/linux/export.h"
struct module;
#line 20 "include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;
#line 23 "include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;
#line 26 "include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;
#line 30 "include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;
#line 16 "include/asm-generic/int-ll64.h"
typedef unsigned char u8;
#line 18 "include/asm-generic/int-ll64.h"
typedef short s16;
#line 19 "include/asm-generic/int-ll64.h"
typedef unsigned short u16;
#line 21 "include/asm-generic/int-ll64.h"
typedef int s32;
#line 22 "include/asm-generic/int-ll64.h"
typedef unsigned int u32;
#line 24 "include/asm-generic/int-ll64.h"
typedef long long s64;
#line 25 "include/asm-generic/int-ll64.h"
typedef unsigned long long u64;
#line 14 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/include/uapi/asm-generic/posix_types.h"
typedef long __kernel_long_t;
#line 15 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;
#line 48 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;
#line 49 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;
#line 71 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;
#line 72 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;
#line 87 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;
#line 12 "include/linux/types.h"
typedef __u32 __kernel_dev_t;
#line 15 "include/linux/types.h"
typedef __kernel_dev_t dev_t;
#line 18 "include/linux/types.h"
typedef unsigned short umode_t;
#line 29 "include/linux/types.h"
typedef _Bool bool;
#line 31 "include/linux/types.h"
typedef __kernel_uid32_t uid_t;
#line 32 "include/linux/types.h"
typedef __kernel_gid32_t gid_t;
#line 45 "include/linux/types.h"
typedef __kernel_loff_t loff_t;
#line 54 "include/linux/types.h"
typedef __kernel_size_t size_t;
#line 59 "include/linux/types.h"
typedef __kernel_ssize_t ssize_t;
#line 157 "include/linux/types.h"
typedef unsigned int gfp_t;
#line 162 "include/linux/types.h"
typedef u64 phys_addr_t;
#line 167 "include/linux/types.h"
typedef phys_addr_t resource_size_t;
#line 177 "include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};
#line 177 "include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;
#line 182 "include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};
#line 182 "include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;
#line 183 "include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};
#line 144 "include/linux/init.h"
typedef void (*ctor_fn_t)(void);
#line 48 "include/linux/dynamic_debug.h"
struct device;
#line 48
struct device;
#line 23 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/include/uapi/linux/sysinfo.h"
struct completion;
#line 23
struct completion;
#line 534 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/arch/x86/include/asm/percpu.h"
struct task_struct;
#line 534
struct task_struct;
#line 14 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/arch/x86/include/asm/spinlock_types.h"
typedef u16 __ticket_t;
#line 15 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/arch/x86/include/asm/spinlock_types.h"
typedef u32 __ticketpair_t;
#line 16 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/arch/x86/include/asm/spinlock_types.h"
struct __raw_tickets {
   __ticket_t head ;
   __ticket_t tail ;
};
#line 26 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/arch/x86/include/asm/spinlock_types.h"
union __anonunion_ldv_2093_8 {
   __ticketpair_t head_tail ;
   struct __raw_tickets tickets ;
};
#line 26 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/arch/x86/include/asm/spinlock_types.h"
struct arch_spinlock {
   union __anonunion_ldv_2093_8 ldv_2093 ;
};
#line 27 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/arch/x86/include/asm/spinlock_types.h"
typedef struct arch_spinlock arch_spinlock_t;
#line 33 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/arch/x86/include/asm/rwlock.h"
struct __anonstruct_ldv_2100_10 {
   u32 read ;
   s32 write ;
};
#line 33 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/arch/x86/include/asm/rwlock.h"
union __anonunion_arch_rwlock_t_9 {
   s64 lock ;
   struct __anonstruct_ldv_2100_10 ldv_2100 ;
};
#line 33 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/arch/x86/include/asm/rwlock.h"
typedef union __anonunion_arch_rwlock_t_9 arch_rwlock_t;
#line 34
struct lockdep_map;
#line 34
struct lockdep_map;
#line 322 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/arch/x86/include/asm/pgtable_types.h"
struct file;
#line 322
struct file;
#line 306 "include/linux/bitmap.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};
#line 195 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/arch/x86/include/asm/paravirt.h"
struct static_key;
#line 195
struct static_key;
#line 23 "include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;
#line 55 "include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};
#line 26 "include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};
#line 53 "include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};
#line 59 "include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const   *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};
#line 144 "include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const   *name ;
   int cpu ;
   unsigned long ip ;
};
#line 579 "include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 32 "include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;
#line 33 "include/linux/spinlock_types.h"
struct __anonstruct_ldv_6029_29 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};
#line 33 "include/linux/spinlock_types.h"
union __anonunion_ldv_6030_28 {
   struct raw_spinlock rlock ;
   struct __anonstruct_ldv_6029_29 ldv_6029 ;
};
#line 33 "include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_ldv_6030_28 ldv_6030 ;
};
#line 76 "include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;
#line 23 "include/linux/rwlock_types.h"
struct __anonstruct_rwlock_t_30 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 23 "include/linux/rwlock_types.h"
typedef struct __anonstruct_rwlock_t_30 rwlock_t;
#line 23 "include/linux/rwlock_types.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   char const   *name ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 46 "include/linux/uidgid.h"
typedef uid_t kuid_t;
#line 47 "include/linux/uidgid.h"
typedef gid_t kgid_t;
#line 33 "include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};
#line 38 "include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;
#line 796 "include/linux/mmzone.h"
struct rw_semaphore;
#line 796
struct rw_semaphore;
#line 797 "include/linux/mmzone.h"
struct rw_semaphore {
   long count ;
   raw_spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct lockdep_map dep_map ;
};
#line 144 "include/linux/rwsem.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};
#line 317 "include/linux/jiffies.h"
union ktime {
   s64 tv64 ;
};
#line 59 "include/linux/ktime.h"
typedef union ktime ktime_t;
#line 386
struct tvec_base;
#line 386
struct tvec_base;
#line 387 "include/linux/ktime.h"
struct timer_list {
   struct list_head entry ;
   unsigned long expires ;
   struct tvec_base *base ;
   void (*function)(unsigned long  ) ;
   unsigned long data ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};
#line 267 "include/linux/timer.h"
struct work_struct;
#line 267
struct work_struct;
#line 54 "include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct * ) ;
   struct lockdep_map lockdep_map ;
};
#line 72 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/arch/x86/include/asm/e820.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char const   *name ;
   unsigned long flags ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};
#line 58 "include/linux/pm.h"
struct pm_message {
   int event ;
};
#line 64 "include/linux/pm.h"
typedef struct pm_message pm_message_t;
#line 65 "include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device * ) ;
   void (*complete)(struct device * ) ;
   int (*suspend)(struct device * ) ;
   int (*resume)(struct device * ) ;
   int (*freeze)(struct device * ) ;
   int (*thaw)(struct device * ) ;
   int (*poweroff)(struct device * ) ;
   int (*restore)(struct device * ) ;
   int (*suspend_late)(struct device * ) ;
   int (*resume_early)(struct device * ) ;
   int (*freeze_late)(struct device * ) ;
   int (*thaw_early)(struct device * ) ;
   int (*poweroff_late)(struct device * ) ;
   int (*restore_early)(struct device * ) ;
   int (*suspend_noirq)(struct device * ) ;
   int (*resume_noirq)(struct device * ) ;
   int (*freeze_noirq)(struct device * ) ;
   int (*thaw_noirq)(struct device * ) ;
   int (*poweroff_noirq)(struct device * ) ;
   int (*restore_noirq)(struct device * ) ;
   int (*runtime_suspend)(struct device * ) ;
   int (*runtime_resume)(struct device * ) ;
   int (*runtime_idle)(struct device * ) ;
};
#line 301
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
} ;
#line 308
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
} ;
#line 316
struct wakeup_source;
#line 316
struct wakeup_source;
#line 506 "include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
};
#line 513
struct dev_pm_qos;
#line 513 "include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned char can_wakeup : 1 ;
   unsigned char async_suspend : 1 ;
   bool is_prepared ;
   bool is_suspended ;
   bool ignore_children ;
   bool early_init ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool wakeup_path ;
   bool syscore ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned char disable_depth : 3 ;
   unsigned char idle_notification : 1 ;
   unsigned char request_pending : 1 ;
   unsigned char deferred_resume : 1 ;
   unsigned char run_wake : 1 ;
   unsigned char runtime_auto : 1 ;
   unsigned char no_callbacks : 1 ;
   unsigned char irq_safe : 1 ;
   unsigned char use_autosuspend : 1 ;
   unsigned char timer_autosuspends : 1 ;
   unsigned char memalloc_noio : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   struct dev_pm_qos *qos ;
};
#line 570 "include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
};
#line 83 "include/linux/rbtree.h"
struct vm_area_struct;
#line 83
struct vm_area_struct;
#line 339 "include/linux/clocksource.h"
struct device_node;
#line 339
struct device_node;
#line 15 "include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;
#line 16 "include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;
#line 20 "include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;
#line 21 "include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;
#line 190 "include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};
#line 198 "include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;
#line 48 "include/linux/elf.h"
struct sock;
#line 48
struct sock;
#line 49
struct kobject;
#line 49
struct kobject;
#line 50
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
} ;
#line 56 "include/linux/elf.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   void *(*grab_current_ns)(void) ;
   void const   *(*netlink_ns)(struct sock * ) ;
   void const   *(*initial_ns)(void) ;
   void (*drop_ns)(void * ) ;
};
#line 57 "include/linux/kobject_ns.h"
struct attribute {
   char const   *name ;
   umode_t mode ;
   bool ignore_lockdep ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};
#line 34 "include/linux/sysfs.h"
struct attribute_group {
   char const   *name ;
   umode_t (*is_visible)(struct kobject * , struct attribute * , int  ) ;
   struct attribute **attrs ;
};
#line 63 "include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file * , struct kobject * , struct bin_attribute * , char * ,
                   loff_t  , size_t  ) ;
   ssize_t (*write)(struct file * , struct kobject * , struct bin_attribute * , char * ,
                    loff_t  , size_t  ) ;
   int (*mmap)(struct file * , struct kobject * , struct bin_attribute * , struct vm_area_struct * ) ;
};
#line 110 "include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject * , struct attribute * , char * ) ;
   ssize_t (*store)(struct kobject * , struct attribute * , char const   * , size_t  ) ;
   void const   *(*namespace)(struct kobject * , struct attribute  const  * ) ;
};
#line 129
struct sysfs_dirent;
#line 129
struct sysfs_dirent;
#line 198 "include/linux/sysfs.h"
struct kref {
   atomic_t refcount ;
};
#line 49 "include/linux/kobject.h"
struct kset;
#line 49
struct kobj_type;
#line 49 "include/linux/kobject.h"
struct kobject {
   char const   *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct sysfs_dirent *sd ;
   struct kref kref ;
   unsigned char state_initialized : 1 ;
   unsigned char state_in_sysfs : 1 ;
   unsigned char state_add_uevent_sent : 1 ;
   unsigned char state_remove_uevent_sent : 1 ;
   unsigned char uevent_suppress : 1 ;
};
#line 107 "include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject * ) ;
   struct sysfs_ops  const  *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations  const  *(*child_ns_type)(struct kobject * ) ;
   void const   *(*namespace)(struct kobject * ) ;
};
#line 115 "include/linux/kobject.h"
struct kobj_uevent_env {
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};
#line 122 "include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const  filter)(struct kset * , struct kobject * ) ;
   char const   *(* const  name)(struct kset * , struct kobject * ) ;
   int (* const  uevent)(struct kset * , struct kobject * , struct kobj_uevent_env * ) ;
};
#line 139 "include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops  const  *uevent_ops ;
};
#line 214
struct kernel_param;
#line 214
struct kernel_param;
#line 215 "include/linux/kobject.h"
struct kernel_param_ops {
   int (*set)(char const   * , struct kernel_param  const  * ) ;
   int (*get)(char * , struct kernel_param  const  * ) ;
   void (*free)(void * ) ;
};
#line 47 "include/linux/moduleparam.h"
struct kparam_string;
#line 47
struct kparam_array;
#line 47 "include/linux/moduleparam.h"
union __anonunion_ldv_14127_134 {
   void *arg ;
   struct kparam_string  const  *str ;
   struct kparam_array  const  *arr ;
};
#line 47 "include/linux/moduleparam.h"
struct kernel_param {
   char const   *name ;
   struct kernel_param_ops  const  *ops ;
   u16 perm ;
   s16 level ;
   union __anonunion_ldv_14127_134 ldv_14127 ;
};
#line 59 "include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};
#line 65 "include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops  const  *ops ;
   void *elem ;
};
#line 457 "include/linux/moduleparam.h"
struct static_key {
   atomic_t enabled ;
};
#line 210 "include/linux/jump_label.h"
struct tracepoint;
#line 210
struct tracepoint;
#line 211 "include/linux/jump_label.h"
struct tracepoint_func {
   void *func ;
   void *data ;
};
#line 29 "include/linux/tracepoint.h"
struct tracepoint {
   char const   *name ;
   struct static_key key ;
   void (*regfunc)(void) ;
   void (*unregfunc)(void) ;
   struct tracepoint_func *funcs ;
};
#line 86 "include/linux/tracepoint.h"
struct mod_arch_specific {

};
#line 37 "include/linux/module.h"
struct module_param_attrs;
#line 37 "include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
};
#line 46 "include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute * , struct module_kobject * , char * ) ;
   ssize_t (*store)(struct module_attribute * , struct module_kobject * , char const   * ,
                    size_t  ) ;
   void (*setup)(struct module * , char const   * ) ;
   int (*test)(struct module * ) ;
   void (*free)(struct module * ) ;
};
#line 72
struct exception_table_entry;
#line 72
struct exception_table_entry;
#line 201
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
} ;
#line 208 "include/linux/module.h"
struct module_ref {
   unsigned long incs ;
   unsigned long decs ;
};
#line 222
struct module_sect_attrs;
#line 222
struct module_notes_attrs;
#line 222
struct ftrace_event_call;
#line 222 "include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const   *version ;
   char const   *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol  const  *syms ;
   unsigned long const   *crcs ;
   unsigned int num_syms ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol  const  *gpl_syms ;
   unsigned long const   *gpl_crcs ;
   struct kernel_symbol  const  *unused_syms ;
   unsigned long const   *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol  const  *unused_gpl_syms ;
   unsigned long const   *unused_gpl_crcs ;
   bool sig_ok ;
   struct kernel_symbol  const  *gpl_future_syms ;
   unsigned long const   *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const  *tracepoints_ptrs ;
   unsigned int num_trace_bprintk_fmt ;
   char const   **trace_bprintk_fmt_start ;
   struct ftrace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct list_head source_list ;
   struct list_head target_list ;
   struct task_struct *waiter ;
   void (*exit)(void) ;
   struct module_ref *refptr ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};
#line 569 "include/linux/slab.h"
struct klist_node;
#line 569
struct klist_node;
#line 37 "include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};
#line 42 "include/linux/ratelimit.h"
struct dma_map_ops;
#line 42 "include/linux/ratelimit.h"
struct dev_archdata {
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};
#line 11 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/arch/x86/include/asm/device.h"
struct pdev_archdata {

};
#line 14
struct device_private;
#line 14
struct device_private;
#line 15
struct device_driver;
#line 15
struct device_driver;
#line 16
struct driver_private;
#line 16
struct driver_private;
#line 17
struct class;
#line 17
struct class;
#line 18
struct subsys_private;
#line 18
struct subsys_private;
#line 19
struct bus_type;
#line 19
struct bus_type;
#line 20
struct iommu_ops;
#line 20
struct iommu_ops;
#line 21
struct iommu_group;
#line 21
struct iommu_group;
#line 22 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/arch/x86/include/asm/device.h"
struct bus_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct bus_type * , char * ) ;
   ssize_t (*store)(struct bus_type * , char const   * , size_t  ) ;
};
#line 55 "include/linux/device.h"
struct device_attribute;
#line 55
struct driver_attribute;
#line 55 "include/linux/device.h"
struct bus_type {
   char const   *name ;
   char const   *dev_name ;
   struct device *dev_root ;
   struct bus_attribute *bus_attrs ;
   struct device_attribute *dev_attrs ;
   struct driver_attribute *drv_attrs ;
   int (*match)(struct device * , struct device_driver * ) ;
   int (*uevent)(struct device * , struct kobj_uevent_env * ) ;
   int (*probe)(struct device * ) ;
   int (*remove)(struct device * ) ;
   void (*shutdown)(struct device * ) ;
   int (*online)(struct device * ) ;
   int (*offline)(struct device * ) ;
   int (*suspend)(struct device * , pm_message_t  ) ;
   int (*resume)(struct device * ) ;
   struct dev_pm_ops  const  *pm ;
   struct iommu_ops *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
};
#line 131
struct device_type;
#line 188
struct of_device_id;
#line 188
struct acpi_device_id;
#line 188 "include/linux/device.h"
struct device_driver {
   char const   *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const   *mod_name ;
   bool suppress_bind_attrs ;
   struct of_device_id  const  *of_match_table ;
   struct acpi_device_id  const  *acpi_match_table ;
   int (*probe)(struct device * ) ;
   int (*remove)(struct device * ) ;
   void (*shutdown)(struct device * ) ;
   int (*suspend)(struct device * , pm_message_t  ) ;
   int (*resume)(struct device * ) ;
   struct attribute_group  const  **groups ;
   struct dev_pm_ops  const  *pm ;
   struct driver_private *p ;
};
#line 253 "include/linux/device.h"
struct driver_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device_driver * , char * ) ;
   ssize_t (*store)(struct device_driver * , char const   * , size_t  ) ;
};
#line 309
struct class_attribute;
#line 309 "include/linux/device.h"
struct class {
   char const   *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct device_attribute *dev_attrs ;
   struct bin_attribute *dev_bin_attrs ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device * , struct kobj_uevent_env * ) ;
   char *(*devnode)(struct device * , umode_t * ) ;
   void (*class_release)(struct class * ) ;
   void (*dev_release)(struct device * ) ;
   int (*suspend)(struct device * , pm_message_t  ) ;
   int (*resume)(struct device * ) ;
   struct kobj_ns_type_operations  const  *ns_type ;
   void const   *(*namespace)(struct device * ) ;
   struct dev_pm_ops  const  *pm ;
   struct subsys_private *p ;
};
#line 404 "include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class * , struct class_attribute * , char * ) ;
   ssize_t (*store)(struct class * , struct class_attribute * , char const   * , size_t  ) ;
   void const   *(*namespace)(struct class * , struct class_attribute  const  * ) ;
};
#line 457 "include/linux/device.h"
struct device_type {
   char const   *name ;
   struct attribute_group  const  **groups ;
   int (*uevent)(struct device * , struct kobj_uevent_env * ) ;
   char *(*devnode)(struct device * , umode_t * , kuid_t * , kgid_t * ) ;
   void (*release)(struct device * ) ;
   struct dev_pm_ops  const  *pm ;
};
#line 485 "include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device * , struct device_attribute * , char * ) ;
   ssize_t (*store)(struct device * , struct device_attribute * , char const   * ,
                    size_t  ) ;
};
#line 590 "include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};
#line 599 "include/linux/device.h"
struct acpi_dev_node {
   void *handle ;
};
#line 604
struct dma_coherent_mem;
#line 604 "include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const   *init_name ;
   struct device_type  const  *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct acpi_dev_node acpi_node ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group  const  **groups ;
   void (*release)(struct device * ) ;
   struct iommu_group *iommu_group ;
   bool offline_disabled ;
   bool offline ;
};
#line 746 "include/linux/device.h"
struct wakeup_source {
   char const   *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   bool active ;
   bool autosleep_enabled ;
};
#line 13 "include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;
#line 186 "include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
};
#line 219 "include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void const   *data ;
};
#line 470 "include/linux/mod_devicetable.h"
struct platform_device_id {
   char name[20U] ;
   kernel_ulong_t driver_data ;
};
#line 600
struct mfd_cell;
#line 600
struct mfd_cell;
#line 601 "include/linux/mod_devicetable.h"
struct platform_device {
   char const   *name ;
   int id ;
   bool id_auto ;
   struct device dev ;
   u32 num_resources ;
   struct resource *resource ;
   struct platform_device_id  const  *id_entry ;
   struct mfd_cell *mfd_cell ;
   struct pdev_archdata archdata ;
};
#line 172 "include/linux/platform_device.h"
struct platform_driver {
   int (*probe)(struct platform_device * ) ;
   int (*remove)(struct platform_device * ) ;
   void (*shutdown)(struct platform_device * ) ;
   int (*suspend)(struct platform_device * , pm_message_t  ) ;
   int (*resume)(struct platform_device * ) ;
   struct device_driver driver ;
   struct platform_device_id  const  *id_table ;
};
#line 309
enum led_brightness {
    LED_OFF = 0,
    LED_HALF = 127,
    LED_FULL = 255
} ;
#line 315
struct led_trigger;
#line 315 "include/linux/platform_device.h"
struct led_classdev {
   char const   *name ;
   int brightness ;
   int max_brightness ;
   int flags ;
   void (*brightness_set)(struct led_classdev * , enum led_brightness  ) ;
   enum led_brightness (*brightness_get)(struct led_classdev * ) ;
   int (*blink_set)(struct led_classdev * , unsigned long * , unsigned long * ) ;
   struct device *dev ;
   struct list_head node ;
   char const   *default_trigger ;
   unsigned long blink_delay_on ;
   unsigned long blink_delay_off ;
   struct timer_list blink_timer ;
   int blink_brightness ;
   struct work_struct set_brightness_work ;
   int delayed_set_value ;
   struct rw_semaphore trigger_lock ;
   struct led_trigger *trigger ;
   struct list_head trig_list ;
   void *trigger_data ;
   bool activated ;
};
#line 140 "include/linux/leds.h"
struct led_trigger {
   char const   *name ;
   void (*activate)(struct led_classdev * ) ;
   void (*deactivate)(struct led_classdev * ) ;
   rwlock_t leddev_list_lock ;
   struct list_head led_cdevs ;
   struct list_head next_trig ;
};
#line 333
enum power_supply_property {
    POWER_SUPPLY_PROP_STATUS = 0,
    POWER_SUPPLY_PROP_CHARGE_TYPE = 1,
    POWER_SUPPLY_PROP_HEALTH = 2,
    POWER_SUPPLY_PROP_PRESENT = 3,
    POWER_SUPPLY_PROP_ONLINE = 4,
    POWER_SUPPLY_PROP_AUTHENTIC = 5,
    POWER_SUPPLY_PROP_TECHNOLOGY = 6,
    POWER_SUPPLY_PROP_CYCLE_COUNT = 7,
    POWER_SUPPLY_PROP_VOLTAGE_MAX = 8,
    POWER_SUPPLY_PROP_VOLTAGE_MIN = 9,
    POWER_SUPPLY_PROP_VOLTAGE_MAX_DESIGN = 10,
    POWER_SUPPLY_PROP_VOLTAGE_MIN_DESIGN = 11,
    POWER_SUPPLY_PROP_VOLTAGE_NOW = 12,
    POWER_SUPPLY_PROP_VOLTAGE_AVG = 13,
    POWER_SUPPLY_PROP_VOLTAGE_OCV = 14,
    POWER_SUPPLY_PROP_CURRENT_MAX = 15,
    POWER_SUPPLY_PROP_CURRENT_NOW = 16,
    POWER_SUPPLY_PROP_CURRENT_AVG = 17,
    POWER_SUPPLY_PROP_POWER_NOW = 18,
    POWER_SUPPLY_PROP_POWER_AVG = 19,
    POWER_SUPPLY_PROP_CHARGE_FULL_DESIGN = 20,
    POWER_SUPPLY_PROP_CHARGE_EMPTY_DESIGN = 21,
    POWER_SUPPLY_PROP_CHARGE_FULL = 22,
    POWER_SUPPLY_PROP_CHARGE_EMPTY = 23,
    POWER_SUPPLY_PROP_CHARGE_NOW = 24,
    POWER_SUPPLY_PROP_CHARGE_AVG = 25,
    POWER_SUPPLY_PROP_CHARGE_COUNTER = 26,
    POWER_SUPPLY_PROP_CONSTANT_CHARGE_CURRENT = 27,
    POWER_SUPPLY_PROP_CONSTANT_CHARGE_CURRENT_MAX = 28,
    POWER_SUPPLY_PROP_CONSTANT_CHARGE_VOLTAGE = 29,
    POWER_SUPPLY_PROP_CONSTANT_CHARGE_VOLTAGE_MAX = 30,
    POWER_SUPPLY_PROP_CHARGE_CONTROL_LIMIT = 31,
    POWER_SUPPLY_PROP_CHARGE_CONTROL_LIMIT_MAX = 32,
    POWER_SUPPLY_PROP_ENERGY_FULL_DESIGN = 33,
    POWER_SUPPLY_PROP_ENERGY_EMPTY_DESIGN = 34,
    POWER_SUPPLY_PROP_ENERGY_FULL = 35,
    POWER_SUPPLY_PROP_ENERGY_EMPTY = 36,
    POWER_SUPPLY_PROP_ENERGY_NOW = 37,
    POWER_SUPPLY_PROP_ENERGY_AVG = 38,
    POWER_SUPPLY_PROP_CAPACITY = 39,
    POWER_SUPPLY_PROP_CAPACITY_ALERT_MIN = 40,
    POWER_SUPPLY_PROP_CAPACITY_ALERT_MAX = 41,
    POWER_SUPPLY_PROP_CAPACITY_LEVEL = 42,
    POWER_SUPPLY_PROP_TEMP = 43,
    POWER_SUPPLY_PROP_TEMP_ALERT_MIN = 44,
    POWER_SUPPLY_PROP_TEMP_ALERT_MAX = 45,
    POWER_SUPPLY_PROP_TEMP_AMBIENT = 46,
    POWER_SUPPLY_PROP_TEMP_AMBIENT_ALERT_MIN = 47,
    POWER_SUPPLY_PROP_TEMP_AMBIENT_ALERT_MAX = 48,
    POWER_SUPPLY_PROP_TIME_TO_EMPTY_NOW = 49,
    POWER_SUPPLY_PROP_TIME_TO_EMPTY_AVG = 50,
    POWER_SUPPLY_PROP_TIME_TO_FULL_NOW = 51,
    POWER_SUPPLY_PROP_TIME_TO_FULL_AVG = 52,
    POWER_SUPPLY_PROP_TYPE = 53,
    POWER_SUPPLY_PROP_SCOPE = 54,
    POWER_SUPPLY_PROP_MODEL_NAME = 55,
    POWER_SUPPLY_PROP_MANUFACTURER = 56,
    POWER_SUPPLY_PROP_SERIAL_NUMBER = 57
} ;
#line 394
enum power_supply_type {
    POWER_SUPPLY_TYPE_UNKNOWN = 0,
    POWER_SUPPLY_TYPE_BATTERY = 1,
    POWER_SUPPLY_TYPE_UPS = 2,
    POWER_SUPPLY_TYPE_MAINS = 3,
    POWER_SUPPLY_TYPE_USB = 4,
    POWER_SUPPLY_TYPE_USB_DCP = 5,
    POWER_SUPPLY_TYPE_USB_CDP = 6,
    POWER_SUPPLY_TYPE_USB_ACA = 7
} ;
#line 405 "include/linux/leds.h"
union power_supply_propval {
   int intval ;
   char const   *strval ;
};
#line 164 "include/linux/power_supply.h"
struct power_supply {
   char const   *name ;
   enum power_supply_type type ;
   enum power_supply_property *properties ;
   size_t num_properties ;
   char **supplied_to ;
   size_t num_supplicants ;
   char **supplied_from ;
   size_t num_supplies ;
   struct device_node *of_node ;
   int (*get_property)(struct power_supply * , enum power_supply_property  , union power_supply_propval * ) ;
   int (*set_property)(struct power_supply * , enum power_supply_property  , union power_supply_propval  const  * ) ;
   int (*property_is_writeable)(struct power_supply * , enum power_supply_property  ) ;
   void (*external_power_changed)(struct power_supply * ) ;
   void (*set_charged)(struct power_supply * ) ;
   int use_for_apm ;
   struct device *dev ;
   struct work_struct changed_work ;
   struct led_trigger *charging_full_trig ;
   char *charging_full_trig_name ;
   struct led_trigger *charging_trig ;
   char *charging_trig_name ;
   struct led_trigger *full_trig ;
   char *full_trig_name ;
   struct led_trigger *online_trig ;
   char *online_trig_name ;
   struct led_trigger *charging_blink_full_solid_trig ;
   char *charging_blink_full_solid_trig_name ;
};
#line 133 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/drivers/power/../w1/slaves/w1_ds2781.h"
struct ds2781_device_info {
   struct device *dev ;
   struct power_supply bat ;
   struct device *w1_dev ;
};
#line 75 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
enum current_types {
    CURRENT_NOW = 0,
    CURRENT_AVG = 1
} ;
#line 1289 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
typedef int ldv_func_ret_type___2;
#line 33 "include/linux/export.h"
extern struct module __this_module ;
#line 304 "include/linux/kernel.h"
extern int kstrtou16(char const   * , unsigned int  , u16 * ) ;
#line 306
extern int kstrtou8(char const   * , unsigned int  , u8 * ) ;
#line 355
extern int sprintf(char * , char const   *  , ...) ;
#line 173 "include/linux/mutex.h"
extern int mutex_trylock(struct mutex * ) ;
#line 176
int ldv_mutex_trylock_4(struct mutex *ldv_func_arg1 ) ;
#line 178
extern void mutex_unlock(struct mutex * ) ;
#line 181
void ldv_mutex_unlock_2(struct mutex *ldv_func_arg1 ) ;
#line 185
void ldv_mutex_unlock_5(struct mutex *ldv_func_arg1 ) ;
#line 7 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
extern void mutex_lock(struct mutex * ) ;
#line 10
void ldv_mutex_lock_1(struct mutex *ldv_func_arg1 ) ;
#line 14
void ldv_mutex_lock_3(struct mutex *ldv_func_arg1 ) ;
#line 19
extern void ldv_mutex_lock_lock(struct mutex * ) ;
#line 23
extern void ldv_mutex_unlock_lock(struct mutex * ) ;
#line 27
extern void ldv_mutex_lock_mutex_of_device(struct mutex * ) ;
#line 28
extern int ldv_mutex_trylock_mutex_of_device(struct mutex * ) ;
#line 31
extern void ldv_mutex_unlock_mutex_of_device(struct mutex * ) ;
#line 33 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
int ldv_state_variable_3  ;
#line 34 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
int ldv_state_variable_2  ;
#line 35 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
int ref_cnt  ;
#line 36
extern int __VERIFIER_nondet_int(void) ;
#line 37 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
int ldv_state_variable_1  ;
#line 38 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
int ldv_state_variable_7  ;
#line 39 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
int ldv_state_variable_4  ;
#line 40 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
int ldv_state_variable_6  ;
#line 41 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
int ldv_state_variable_0  ;
#line 42 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
int ldv_state_variable_5  ;
#line 152 "include/linux/sysfs.h"
extern int sysfs_create_bin_file(struct kobject * , struct bin_attribute  const  * ) ;
#line 154
extern void sysfs_remove_bin_file(struct kobject * , struct bin_attribute  const  * ) ;
#line 170
extern int sysfs_create_group(struct kobject * , struct attribute_group  const  * ) ;
#line 174
extern void sysfs_remove_group(struct kobject * , struct attribute_group  const  * ) ;
#line 80 "include/linux/kobject.h"
__inline static char const   *kobject_name(struct kobject  const  *kobj ) 
{ 


  {
#line 82
  return ((char const   *)kobj->name);
}
}
#line 580 "include/linux/device.h"
extern void *devm_kzalloc(struct device * , size_t  , gfp_t  ) ;
#line 757 "include/linux/device.h"
__inline static char const   *dev_name(struct device  const  *dev ) 
{ 
  char const   *tmp ;

  {
#line 760
  if ((unsigned long )dev->init_name != (unsigned long )((char const   */* const  */)0)) {
#line 761
    return ((char const   *)dev->init_name);
  } else {

  }
#line 763
  tmp = kobject_name(& dev->kobj);
#line 763
  return (tmp);
}
}
#line 872
extern void *dev_get_drvdata(struct device  const  * ) ;
#line 873
extern int dev_set_drvdata(struct device * , void * ) ;
#line 982
extern int dev_err(struct device  const  * , char const   *  , ...) ;
#line 191 "include/linux/platform_device.h"
extern int __platform_driver_register(struct platform_driver * , struct module * ) ;
#line 193
extern void platform_driver_unregister(struct platform_driver * ) ;
#line 201 "include/linux/platform_device.h"
__inline static void *platform_get_drvdata(struct platform_device  const  *pdev ) 
{ 
  void *tmp ;

  {
#line 203
  tmp = dev_get_drvdata(& pdev->dev);
#line 203
  return (tmp);
}
}
#line 206 "include/linux/platform_device.h"
__inline static void platform_set_drvdata(struct platform_device *pdev , void *data ) 
{ 


  {
#line 209
  dev_set_drvdata(& pdev->dev, data);
#line 210
  return;
}
}
#line 237 "include/linux/power_supply.h"
extern int power_supply_am_i_supplied(struct power_supply * ) ;
#line 246
extern int power_supply_register(struct device * , struct power_supply * ) ;
#line 248
extern void power_supply_unregister(struct power_supply * ) ;
#line 130 "/home/shchepetkov/tests/thomas/inst/current/envs/linux-3.11-rc1.tar.xz/linux-3.11-rc1/drivers/power/../w1/slaves/w1_ds2781.h"
extern int w1_ds2781_io(struct device * , char * , int  , size_t  , int  ) ;
#line 132
extern int w1_ds2781_eeprom_cmd(struct device * , int  , int  ) ;
#line 81 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
static char const   model[7U]  = {      'D',      'S',      '2',      '7', 
        '8',      '1',      '\000'};
#line 82 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
static char const   manufacturer[13U]  = 
#line 82
  {      'M',      'a',      'x',      'i', 
        'm',      '/',      'D',      'a', 
        'l',      'l',      'a',      's', 
        '\000'};
#line 85 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
__inline static struct ds2781_device_info *to_ds2781_device_info(struct power_supply *psy ) 
{ 
  struct power_supply  const  *__mptr ;

  {
#line 87
  __mptr = (struct power_supply  const  *)psy;
#line 87
  return ((struct ds2781_device_info *)__mptr + 0xfffffffffffffff8UL);
}
}
#line 90 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
__inline static struct power_supply *to_power_supply(struct device *dev ) 
{ 
  void *tmp ;

  {
#line 92
  tmp = dev_get_drvdata((struct device  const  *)dev);
#line 92
  return ((struct power_supply *)tmp);
}
}
#line 95 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
__inline static int ds2781_battery_io(struct ds2781_device_info *dev_info , char *buf ,
                                      int addr , size_t count , int io ) 
{ 
  int tmp ;

  {
#line 98
  tmp = w1_ds2781_io(dev_info->w1_dev, buf, addr, count, io);
#line 98
  return (tmp);
}
}
#line 101 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
static int w1_ds2781_read(struct ds2781_device_info *dev_info , char *buf , int addr ,
                          size_t count ) 
{ 
  int tmp ;

  {
#line 104
  tmp = ds2781_battery_io(dev_info, buf, addr, count, 0);
#line 104
  return (tmp);
}
}
#line 107 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
__inline static int ds2781_read8(struct ds2781_device_info *dev_info , u8 *val , int addr ) 
{ 
  int tmp ;

  {
#line 110
  tmp = ds2781_battery_io(dev_info, (char *)val, addr, 1UL, 0);
#line 110
  return (tmp);
}
}
#line 113 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
static int ds2781_read16(struct ds2781_device_info *dev_info , s16 *val , int addr ) 
{ 
  int ret ;
  u8 raw[2U] ;

  {
#line 119
  ret = ds2781_battery_io(dev_info, (char *)(& raw), addr, 2UL, 0);
#line 120
  if (ret < 0) {
#line 121
    return (ret);
  } else {

  }
#line 123
  *val = (int )((s16 )((int )raw[0] << 8)) | (int )((s16 )raw[1]);
#line 125
  return (0);
}
}
#line 128 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
__inline static int ds2781_read_block(struct ds2781_device_info *dev_info , u8 *val ,
                                      int addr , size_t count ) 
{ 
  int tmp ;

  {
#line 131
  tmp = ds2781_battery_io(dev_info, (char *)val, addr, count, 0);
#line 131
  return (tmp);
}
}
#line 134 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
__inline static int ds2781_write(struct ds2781_device_info *dev_info , u8 *val , int addr ,
                                 size_t count ) 
{ 
  int tmp ;

  {
#line 137
  tmp = ds2781_battery_io(dev_info, (char *)val, addr, count, 1);
#line 137
  return (tmp);
}
}
#line 140 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
__inline static int ds2781_store_eeprom(struct device *dev , int addr ) 
{ 
  int tmp ;

  {
#line 142
  tmp = w1_ds2781_eeprom_cmd(dev, addr, 72);
#line 142
  return (tmp);
}
}
#line 145 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
__inline static int ds2781_recall_eeprom(struct device *dev , int addr ) 
{ 
  int tmp ;

  {
#line 147
  tmp = w1_ds2781_eeprom_cmd(dev, addr, 184);
#line 147
  return (tmp);
}
}
#line 150 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
static int ds2781_save_eeprom(struct ds2781_device_info *dev_info , int reg ) 
{ 
  int ret ;

  {
#line 154
  ret = ds2781_store_eeprom(dev_info->w1_dev, reg);
#line 155
  if (ret < 0) {
#line 156
    return (ret);
  } else {

  }
#line 158
  ret = ds2781_recall_eeprom(dev_info->w1_dev, reg);
#line 159
  if (ret < 0) {
#line 160
    return (ret);
  } else {

  }
#line 162
  return (0);
}
}
#line 166 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
static int ds2781_set_sense_register(struct ds2781_device_info *dev_info , u8 conductance ) 
{ 
  int ret ;
  int tmp ;

  {
#line 171
  ret = ds2781_write(dev_info, & conductance, 105, 1UL);
#line 173
  if (ret < 0) {
#line 174
    return (ret);
  } else {

  }
#line 176
  tmp = ds2781_save_eeprom(dev_info, 105);
#line 176
  return (tmp);
}
}
#line 180 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
static int ds2781_get_rsgain_register(struct ds2781_device_info *dev_info , u16 *rsgain ) 
{ 
  int tmp ;

  {
#line 183
  tmp = ds2781_read16(dev_info, (s16 *)rsgain, 120);
#line 183
  return (tmp);
}
}
#line 187 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
static int ds2781_set_rsgain_register(struct ds2781_device_info *dev_info , u16 rsgain ) 
{ 
  int ret ;
  u8 raw[2U] ;
  int tmp ;

  {
#line 191
  raw[0] = (unsigned char )((int )rsgain >> 8);
#line 191
  raw[1] = (unsigned char )rsgain;
#line 193
  ret = ds2781_write(dev_info, (u8 *)(& raw), 120, 2UL);
#line 195
  if (ret < 0) {
#line 196
    return (ret);
  } else {

  }
#line 198
  tmp = ds2781_save_eeprom(dev_info, 120);
#line 198
  return (tmp);
}
}
#line 201 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
static int ds2781_get_voltage(struct ds2781_device_info *dev_info , int *voltage_uV ) 
{ 
  int ret ;
  char val[2U] ;
  int voltage_raw ;

  {
#line 208
  ret = w1_ds2781_read(dev_info, (char *)(& val), 12, 2UL);
#line 209
  if (ret < 0) {
#line 210
    return (ret);
  } else {

  }
#line 220
  voltage_raw = ((int )val[0] << 3) | ((int )((signed char )val[1]) >> 5);
#line 225
  *voltage_uV = voltage_raw * 9760;
#line 227
  return (0);
}
}
#line 230 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
static int ds2781_get_temperature(struct ds2781_device_info *dev_info , int *temp ) 
{ 
  int ret ;
  char val[2U] ;
  int temp_raw ;

  {
#line 237
  ret = w1_ds2781_read(dev_info, (char *)(& val), 10, 2UL);
#line 238
  if (ret < 0) {
#line 239
    return (ret);
  } else {

  }
#line 250
  temp_raw = ((int )val[0] << 3) | ((int )((signed char )val[1]) >> 5);
#line 252
  *temp = temp_raw / 4 + temp_raw;
#line 254
  return (0);
}
}
#line 257 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
static int ds2781_get_current(struct ds2781_device_info *dev_info , enum current_types type ,
                              int *current_uA ) 
{ 
  int ret ;
  int sense_res ;
  s16 current_raw ;
  u8 sense_res_raw ;
  u8 reg_msb ;

  {
#line 268
  ret = ds2781_read8(dev_info, & sense_res_raw, 105);
#line 269
  if (ret < 0) {
#line 270
    return (ret);
  } else {

  }
#line 272
  if ((unsigned int )sense_res_raw == 0U) {
#line 273
    dev_err((struct device  const  *)dev_info->dev, "sense resistor value is 0\n");
#line 274
    return (-22);
  } else {

  }
#line 276
  sense_res = 1000 / (int )sense_res_raw;
#line 278
  if ((unsigned int )type == 0U) {
#line 279
    reg_msb = 14U;
  } else
#line 280
  if ((unsigned int )type == 1U) {
#line 281
    reg_msb = 8U;
  } else {
#line 283
    return (-22);
  }
#line 294
  ret = ds2781_read16(dev_info, & current_raw, (int )reg_msb);
#line 295
  if (ret < 0) {
#line 296
    return (ret);
  } else {

  }
#line 298
  *current_uA = (int )current_raw * (1563 / sense_res);
#line 299
  return (0);
}
}
#line 302 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
static int ds2781_get_accumulated_current(struct ds2781_device_info *dev_info , int *accumulated_current ) 
{ 
  int ret ;
  int sense_res ;
  s16 current_raw ;
  u8 sense_res_raw ;

  {
#line 313
  ret = ds2781_read8(dev_info, & sense_res_raw, 105);
#line 314
  if (ret < 0) {
#line 315
    return (ret);
  } else {

  }
#line 317
  if ((unsigned int )sense_res_raw == 0U) {
#line 318
    dev_err((struct device  const  *)dev_info->dev, "sense resistor value is 0\n");
#line 319
    return (-22);
  } else {

  }
#line 321
  sense_res = 1000 / (int )sense_res_raw;
#line 331
  ret = ds2781_read16(dev_info, & current_raw, 16);
#line 332
  if (ret < 0) {
#line 333
    return (ret);
  } else {

  }
#line 335
  *accumulated_current = (int )current_raw * (6250 / sense_res);
#line 336
  return (0);
}
}
#line 339 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
static int ds2781_get_capacity(struct ds2781_device_info *dev_info , int *capacity ) 
{ 
  int ret ;
  u8 raw ;

  {
#line 345
  ret = ds2781_read8(dev_info, & raw, 6);
#line 346
  if (ret < 0) {
#line 347
    return (ret);
  } else {

  }
#line 349
  *capacity = (int )raw;
#line 350
  return (0);
}
}
#line 353 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
static int ds2781_get_status(struct ds2781_device_info *dev_info , int *status ) 
{ 
  int ret ;
  int current_uA ;
  int capacity ;
  int tmp ;

  {
#line 357
  ret = ds2781_get_current(dev_info, 0, & current_uA);
#line 358
  if (ret < 0) {
#line 359
    return (ret);
  } else {

  }
#line 361
  ret = ds2781_get_capacity(dev_info, & capacity);
#line 362
  if (ret < 0) {
#line 363
    return (ret);
  } else {

  }
#line 365
  tmp = power_supply_am_i_supplied(& dev_info->bat);
#line 365
  if (tmp != 0) {
#line 366
    if (capacity == 100) {
#line 367
      *status = 4;
    } else
#line 368
    if (current_uA > 50000) {
#line 369
      *status = 1;
    } else {
#line 371
      *status = 3;
    }
  } else {
#line 373
    *status = 2;
  }
#line 375
  return (0);
}
}
#line 378 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
static int ds2781_get_charge_now(struct ds2781_device_info *dev_info , int *charge_now ) 
{ 
  int ret ;
  u16 charge_raw ;

  {
#line 392
  ret = ds2781_read16(dev_info, (s16 *)(& charge_raw), 2);
#line 393
  if (ret < 0) {
#line 394
    return (ret);
  } else {

  }
#line 396
  *charge_now = (int )charge_raw * 1600;
#line 397
  return (0);
}
}
#line 400 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
static int ds2781_get_control_register(struct ds2781_device_info *dev_info , u8 *control_reg ) 
{ 
  int tmp ;

  {
#line 403
  tmp = ds2781_read8(dev_info, control_reg, 96);
#line 403
  return (tmp);
}
}
#line 406 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
static int ds2781_set_control_register(struct ds2781_device_info *dev_info , u8 control_reg ) 
{ 
  int ret ;
  int tmp ;

  {
#line 411
  ret = ds2781_write(dev_info, & control_reg, 96, 1UL);
#line 413
  if (ret < 0) {
#line 414
    return (ret);
  } else {

  }
#line 416
  tmp = ds2781_save_eeprom(dev_info, 96);
#line 416
  return (tmp);
}
}
#line 419 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
static int ds2781_battery_get_property(struct power_supply *psy , enum power_supply_property psp ,
                                       union power_supply_propval *val ) 
{ 
  int ret ;
  struct ds2781_device_info *dev_info ;
  struct ds2781_device_info *tmp ;

  {
#line 423
  ret = 0;
#line 424
  tmp = to_ds2781_device_info(psy);
#line 424
  dev_info = tmp;
#line 426
  switch ((unsigned int )psp) {
  case 12U: 
#line 428
  ret = ds2781_get_voltage(dev_info, & val->intval);
#line 429
  goto ldv_16937;
  case 43U: 
#line 432
  ret = ds2781_get_temperature(dev_info, & val->intval);
#line 433
  goto ldv_16937;
  case 55U: 
#line 436
  val->strval = (char const   *)(& model);
#line 437
  goto ldv_16937;
  case 56U: 
#line 440
  val->strval = (char const   *)(& manufacturer);
#line 441
  goto ldv_16937;
  case 16U: 
#line 444
  ret = ds2781_get_current(dev_info, 0, & val->intval);
#line 445
  goto ldv_16937;
  case 17U: 
#line 448
  ret = ds2781_get_current(dev_info, 1, & val->intval);
#line 449
  goto ldv_16937;
  case 0U: 
#line 452
  ret = ds2781_get_status(dev_info, & val->intval);
#line 453
  goto ldv_16937;
  case 39U: 
#line 456
  ret = ds2781_get_capacity(dev_info, & val->intval);
#line 457
  goto ldv_16937;
  case 26U: 
#line 460
  ret = ds2781_get_accumulated_current(dev_info, & val->intval);
#line 461
  goto ldv_16937;
  case 24U: 
#line 464
  ret = ds2781_get_charge_now(dev_info, & val->intval);
#line 465
  goto ldv_16937;
  default: 
#line 468
  ret = -22;
  }
  ldv_16937: ;
#line 471
  return (ret);
}
}
#line 474 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
static enum power_supply_property ds2781_battery_props[10U]  = 
#line 474
  {      0,      12,      43,      55, 
        56,      16,      17,      39, 
        26,      24};
#line 487 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
static ssize_t ds2781_get_pmod_enabled(struct device *dev , struct device_attribute *attr ,
                                       char *buf ) 
{ 
  int ret ;
  u8 control_reg ;
  struct power_supply *psy ;
  struct power_supply *tmp ;
  struct ds2781_device_info *dev_info ;
  struct ds2781_device_info *tmp___0 ;
  int tmp___1 ;

  {
#line 493
  tmp = to_power_supply(dev);
#line 493
  psy = tmp;
#line 494
  tmp___0 = to_ds2781_device_info(psy);
#line 494
  dev_info = tmp___0;
#line 497
  ret = ds2781_get_control_register(dev_info, & control_reg);
#line 498
  if (ret < 0) {
#line 499
    return ((ssize_t )ret);
  } else {

  }
#line 501
  tmp___1 = sprintf(buf, "%d\n", ((int )control_reg & 32) != 0);
#line 501
  return ((ssize_t )tmp___1);
}
}
#line 505 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
static ssize_t ds2781_set_pmod_enabled(struct device *dev , struct device_attribute *attr ,
                                       char const   *buf , size_t count ) 
{ 
  int ret ;
  u8 control_reg ;
  u8 new_setting ;
  struct power_supply *psy ;
  struct power_supply *tmp ;
  struct ds2781_device_info *dev_info ;
  struct ds2781_device_info *tmp___0 ;

  {
#line 512
  tmp = to_power_supply(dev);
#line 512
  psy = tmp;
#line 513
  tmp___0 = to_ds2781_device_info(psy);
#line 513
  dev_info = tmp___0;
#line 516
  ret = ds2781_get_control_register(dev_info, & control_reg);
#line 517
  if (ret < 0) {
#line 518
    return ((ssize_t )ret);
  } else {

  }
#line 520
  ret = kstrtou8(buf, 0U, & new_setting);
#line 521
  if (ret < 0) {
#line 522
    return ((ssize_t )ret);
  } else {

  }
#line 524
  if ((unsigned int )new_setting != 0U && (unsigned int )new_setting != 1U) {
#line 525
    dev_err((struct device  const  *)dev_info->dev, "Invalid pmod setting (0 or 1)\n");
#line 526
    return (-22L);
  } else {

  }
#line 529
  if ((unsigned int )new_setting != 0U) {
#line 530
    control_reg = (u8 )((unsigned int )control_reg | 32U);
  } else {
#line 532
    control_reg = (unsigned int )control_reg & 223U;
  }
#line 534
  ret = ds2781_set_control_register(dev_info, (int )control_reg);
#line 535
  if (ret < 0) {
#line 536
    return ((ssize_t )ret);
  } else {

  }
#line 538
  return ((ssize_t )count);
}
}
#line 541 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
static ssize_t ds2781_get_sense_resistor_value(struct device *dev , struct device_attribute *attr ,
                                               char *buf ) 
{ 
  int ret ;
  u8 sense_resistor ;
  struct power_supply *psy ;
  struct power_supply *tmp ;
  struct ds2781_device_info *dev_info ;
  struct ds2781_device_info *tmp___0 ;

  {
#line 547
  tmp = to_power_supply(dev);
#line 547
  psy = tmp;
#line 548
  tmp___0 = to_ds2781_device_info(psy);
#line 548
  dev_info = tmp___0;
#line 550
  ret = ds2781_read8(dev_info, & sense_resistor, 105);
#line 551
  if (ret < 0) {
#line 552
    return ((ssize_t )ret);
  } else {

  }
#line 554
  ret = sprintf(buf, "%d\n", (int )sense_resistor);
#line 555
  return ((ssize_t )ret);
}
}
#line 558 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
static ssize_t ds2781_set_sense_resistor_value(struct device *dev , struct device_attribute *attr ,
                                               char const   *buf , size_t count ) 
{ 
  int ret ;
  u8 new_setting ;
  struct power_supply *psy ;
  struct power_supply *tmp ;
  struct ds2781_device_info *dev_info ;
  struct ds2781_device_info *tmp___0 ;

  {
#line 565
  tmp = to_power_supply(dev);
#line 565
  psy = tmp;
#line 566
  tmp___0 = to_ds2781_device_info(psy);
#line 566
  dev_info = tmp___0;
#line 568
  ret = kstrtou8(buf, 0U, & new_setting);
#line 569
  if (ret < 0) {
#line 570
    return ((ssize_t )ret);
  } else {

  }
#line 572
  ret = ds2781_set_sense_register(dev_info, (int )new_setting);
#line 573
  if (ret < 0) {
#line 574
    return ((ssize_t )ret);
  } else {

  }
#line 576
  return ((ssize_t )count);
}
}
#line 579 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
static ssize_t ds2781_get_rsgain_setting(struct device *dev , struct device_attribute *attr ,
                                         char *buf ) 
{ 
  int ret ;
  u16 rsgain ;
  struct power_supply *psy ;
  struct power_supply *tmp ;
  struct ds2781_device_info *dev_info ;
  struct ds2781_device_info *tmp___0 ;
  int tmp___1 ;

  {
#line 585
  tmp = to_power_supply(dev);
#line 585
  psy = tmp;
#line 586
  tmp___0 = to_ds2781_device_info(psy);
#line 586
  dev_info = tmp___0;
#line 588
  ret = ds2781_get_rsgain_register(dev_info, & rsgain);
#line 589
  if (ret < 0) {
#line 590
    return ((ssize_t )ret);
  } else {

  }
#line 592
  tmp___1 = sprintf(buf, "%d\n", (int )rsgain);
#line 592
  return ((ssize_t )tmp___1);
}
}
#line 595 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
static ssize_t ds2781_set_rsgain_setting(struct device *dev , struct device_attribute *attr ,
                                         char const   *buf , size_t count ) 
{ 
  int ret ;
  u16 new_setting ;
  struct power_supply *psy ;
  struct power_supply *tmp ;
  struct ds2781_device_info *dev_info ;
  struct ds2781_device_info *tmp___0 ;

  {
#line 602
  tmp = to_power_supply(dev);
#line 602
  psy = tmp;
#line 603
  tmp___0 = to_ds2781_device_info(psy);
#line 603
  dev_info = tmp___0;
#line 605
  ret = kstrtou16(buf, 0U, & new_setting);
#line 606
  if (ret < 0) {
#line 607
    return ((ssize_t )ret);
  } else {

  }
#line 610
  if ((unsigned int )new_setting > 1999U) {
#line 611
    dev_err((struct device  const  *)dev_info->dev, "Invalid rsgain setting (0 - 1999)\n");
#line 612
    return (-22L);
  } else {

  }
#line 615
  ret = ds2781_set_rsgain_register(dev_info, (int )new_setting);
#line 616
  if (ret < 0) {
#line 617
    return ((ssize_t )ret);
  } else {

  }
#line 619
  return ((ssize_t )count);
}
}
#line 622 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
static ssize_t ds2781_get_pio_pin(struct device *dev , struct device_attribute *attr ,
                                  char *buf ) 
{ 
  int ret ;
  u8 sfr ;
  struct power_supply *psy ;
  struct power_supply *tmp ;
  struct ds2781_device_info *dev_info ;
  struct ds2781_device_info *tmp___0 ;

  {
#line 628
  tmp = to_power_supply(dev);
#line 628
  psy = tmp;
#line 629
  tmp___0 = to_ds2781_device_info(psy);
#line 629
  dev_info = tmp___0;
#line 631
  ret = ds2781_read8(dev_info, & sfr, 21);
#line 632
  if (ret < 0) {
#line 633
    return ((ssize_t )ret);
  } else {

  }
#line 635
  ret = sprintf(buf, "%d\n", (int )sfr & 1);
#line 636
  return ((ssize_t )ret);
}
}
#line 639 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
static ssize_t ds2781_set_pio_pin(struct device *dev , struct device_attribute *attr ,
                                  char const   *buf , size_t count ) 
{ 
  int ret ;
  u8 new_setting ;
  struct power_supply *psy ;
  struct power_supply *tmp ;
  struct ds2781_device_info *dev_info ;
  struct ds2781_device_info *tmp___0 ;

  {
#line 646
  tmp = to_power_supply(dev);
#line 646
  psy = tmp;
#line 647
  tmp___0 = to_ds2781_device_info(psy);
#line 647
  dev_info = tmp___0;
#line 649
  ret = kstrtou8(buf, 0U, & new_setting);
#line 650
  if (ret < 0) {
#line 651
    return ((ssize_t )ret);
  } else {

  }
#line 653
  if ((unsigned int )new_setting != 0U && (unsigned int )new_setting != 1U) {
#line 654
    dev_err((struct device  const  *)dev_info->dev, "Invalid pio_pin setting (0 or 1)\n");
#line 655
    return (-22L);
  } else {

  }
#line 658
  ret = ds2781_write(dev_info, & new_setting, 21, 1UL);
#line 660
  if (ret < 0) {
#line 661
    return ((ssize_t )ret);
  } else {

  }
#line 663
  return ((ssize_t )count);
}
}
#line 666 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
static ssize_t ds2781_read_param_eeprom_bin(struct file *filp , struct kobject *kobj ,
                                            struct bin_attribute *bin_attr , char *buf ,
                                            loff_t off , size_t count ) 
{ 
  struct device *dev ;
  struct kobject  const  *__mptr ;
  struct power_supply *psy ;
  struct power_supply *tmp ;
  struct ds2781_device_info *dev_info ;
  struct ds2781_device_info *tmp___0 ;
  loff_t __min1 ;
  loff_t __min2 ;
  int tmp___1 ;

  {
#line 671
  __mptr = (struct kobject  const  *)kobj;
#line 671
  dev = (struct device *)__mptr + 0xfffffffffffffff0UL;
#line 672
  tmp = to_power_supply(dev);
#line 672
  psy = tmp;
#line 673
  tmp___0 = to_ds2781_device_info(psy);
#line 673
  dev_info = tmp___0;
#line 675
  __min1 = (loff_t )count;
#line 675
  __min2 = 32LL - off;
#line 675
  count = (size_t )(__min1 < __min2 ? __min1 : __min2);
#line 677
  tmp___1 = ds2781_read_block(dev_info, (u8 *)buf, (int )((unsigned int )off + 96U),
                              count);
#line 677
  return ((ssize_t )tmp___1);
}
}
#line 681 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
static ssize_t ds2781_write_param_eeprom_bin(struct file *filp , struct kobject *kobj ,
                                             struct bin_attribute *bin_attr , char *buf ,
                                             loff_t off , size_t count ) 
{ 
  struct device *dev ;
  struct kobject  const  *__mptr ;
  struct power_supply *psy ;
  struct power_supply *tmp ;
  struct ds2781_device_info *dev_info ;
  struct ds2781_device_info *tmp___0 ;
  int ret ;
  loff_t __min1 ;
  loff_t __min2 ;

  {
#line 686
  __mptr = (struct kobject  const  *)kobj;
#line 686
  dev = (struct device *)__mptr + 0xfffffffffffffff0UL;
#line 687
  tmp = to_power_supply(dev);
#line 687
  psy = tmp;
#line 688
  tmp___0 = to_ds2781_device_info(psy);
#line 688
  dev_info = tmp___0;
#line 691
  __min1 = (loff_t )count;
#line 691
  __min2 = 32LL - off;
#line 691
  count = (size_t )(__min1 < __min2 ? __min1 : __min2);
#line 693
  ret = ds2781_write(dev_info, (u8 *)buf, (int )((unsigned int )off + 96U), count);
#line 695
  if (ret < 0) {
#line 696
    return ((ssize_t )ret);
  } else {

  }
#line 698
  ret = ds2781_save_eeprom(dev_info, 96);
#line 699
  if (ret < 0) {
#line 700
    return ((ssize_t )ret);
  } else {

  }
#line 702
  return ((ssize_t )count);
}
}
#line 705 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
static struct bin_attribute ds2781_param_eeprom_bin_attr  =    {{"param_eeprom", 420U, (_Bool)0, 0, {{{(char)0}, {(char)0}, {(char)0}, {(char)0},
                                          {(char)0}, {(char)0}, {(char)0}, {(char)0}}}},
    32UL, 0, & ds2781_read_param_eeprom_bin, & ds2781_write_param_eeprom_bin, 0};
#line 715 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
static ssize_t ds2781_read_user_eeprom_bin(struct file *filp , struct kobject *kobj ,
                                           struct bin_attribute *bin_attr , char *buf ,
                                           loff_t off , size_t count ) 
{ 
  struct device *dev ;
  struct kobject  const  *__mptr ;
  struct power_supply *psy ;
  struct power_supply *tmp ;
  struct ds2781_device_info *dev_info ;
  struct ds2781_device_info *tmp___0 ;
  loff_t __min1 ;
  loff_t __min2 ;
  int tmp___1 ;

  {
#line 720
  __mptr = (struct kobject  const  *)kobj;
#line 720
  dev = (struct device *)__mptr + 0xfffffffffffffff0UL;
#line 721
  tmp = to_power_supply(dev);
#line 721
  psy = tmp;
#line 722
  tmp___0 = to_ds2781_device_info(psy);
#line 722
  dev_info = tmp___0;
#line 724
  __min1 = (loff_t )count;
#line 724
  __min2 = 16LL - off;
#line 724
  count = (size_t )(__min1 < __min2 ? __min1 : __min2);
#line 726
  tmp___1 = ds2781_read_block(dev_info, (u8 *)buf, (int )((unsigned int )off + 32U),
                              count);
#line 726
  return ((ssize_t )tmp___1);
}
}
#line 731 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
static ssize_t ds2781_write_user_eeprom_bin(struct file *filp , struct kobject *kobj ,
                                            struct bin_attribute *bin_attr , char *buf ,
                                            loff_t off , size_t count ) 
{ 
  struct device *dev ;
  struct kobject  const  *__mptr ;
  struct power_supply *psy ;
  struct power_supply *tmp ;
  struct ds2781_device_info *dev_info ;
  struct ds2781_device_info *tmp___0 ;
  int ret ;
  loff_t __min1 ;
  loff_t __min2 ;

  {
#line 736
  __mptr = (struct kobject  const  *)kobj;
#line 736
  dev = (struct device *)__mptr + 0xfffffffffffffff0UL;
#line 737
  tmp = to_power_supply(dev);
#line 737
  psy = tmp;
#line 738
  tmp___0 = to_ds2781_device_info(psy);
#line 738
  dev_info = tmp___0;
#line 741
  __min1 = (loff_t )count;
#line 741
  __min2 = 16LL - off;
#line 741
  count = (size_t )(__min1 < __min2 ? __min1 : __min2);
#line 743
  ret = ds2781_write(dev_info, (u8 *)buf, (int )((unsigned int )off + 32U), count);
#line 745
  if (ret < 0) {
#line 746
    return ((ssize_t )ret);
  } else {

  }
#line 748
  ret = ds2781_save_eeprom(dev_info, 32);
#line 749
  if (ret < 0) {
#line 750
    return ((ssize_t )ret);
  } else {

  }
#line 752
  return ((ssize_t )count);
}
}
#line 755 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
static struct bin_attribute ds2781_user_eeprom_bin_attr  =    {{"user_eeprom", 420U, (_Bool)0, 0, {{{(char)0}, {(char)0}, {(char)0}, {(char)0},
                                         {(char)0}, {(char)0}, {(char)0}, {(char)0}}}},
    16UL, 0, & ds2781_read_user_eeprom_bin, & ds2781_write_user_eeprom_bin, 0};
#line 766 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
static struct device_attribute dev_attr_pmod_enabled  =    {{"pmod_enabled", 420U, (_Bool)0, 0, {{{(char)0}, {(char)0}, {(char)0}, {(char)0},
                                          {(char)0}, {(char)0}, {(char)0}, {(char)0}}}},
    & ds2781_get_pmod_enabled, & ds2781_set_pmod_enabled};
#line 768 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
static struct device_attribute dev_attr_sense_resistor_value  =    {{"sense_resistor_value", 420U, (_Bool)0, 0, {{{(char)0}, {(char)0}, {(char)0},
                                                  {(char)0}, {(char)0}, {(char)0},
                                                  {(char)0}, {(char)0}}}}, & ds2781_get_sense_resistor_value,
    & ds2781_set_sense_resistor_value};
#line 770 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
static struct device_attribute dev_attr_rsgain_setting  =    {{"rsgain_setting", 420U, (_Bool)0, 0, {{{(char)0}, {(char)0}, {(char)0}, {(char)0},
                                            {(char)0}, {(char)0}, {(char)0}, {(char)0}}}},
    & ds2781_get_rsgain_setting, & ds2781_set_rsgain_setting};
#line 772 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
static struct device_attribute dev_attr_pio_pin  =    {{"pio_pin", 420U, (_Bool)0, 0, {{{(char)0}, {(char)0}, {(char)0}, {(char)0}, {(char)0},
                                     {(char)0}, {(char)0}, {(char)0}}}}, & ds2781_get_pio_pin,
    & ds2781_set_pio_pin};
#line 775 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
static struct attribute *ds2781_attributes[5U]  = {      & dev_attr_pmod_enabled.attr,      & dev_attr_sense_resistor_value.attr,      & dev_attr_rsgain_setting.attr,      & dev_attr_pio_pin.attr, 
        0};
#line 783 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
static struct attribute_group  const  ds2781_attr_group  =    {0, 0, (struct attribute **)(& ds2781_attributes)};
#line 787 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
static int ds2781_battery_probe(struct platform_device *pdev ) 
{ 
  int ret ;
  struct ds2781_device_info *dev_info ;
  void *tmp ;

  {
#line 789
  ret = 0;
#line 792
  tmp = devm_kzalloc(& pdev->dev, 304UL, 208U);
#line 792
  dev_info = (struct ds2781_device_info *)tmp;
#line 793
  if ((unsigned long )dev_info == (unsigned long )((struct ds2781_device_info *)0)) {
#line 794
    return (-12);
  } else {

  }
#line 796
  platform_set_drvdata(pdev, (void *)dev_info);
#line 798
  dev_info->dev = & pdev->dev;
#line 799
  dev_info->w1_dev = pdev->dev.parent;
#line 800
  dev_info->bat.name = dev_name((struct device  const  *)(& pdev->dev));
#line 801
  dev_info->bat.type = 1;
#line 802
  dev_info->bat.properties = (enum power_supply_property *)(& ds2781_battery_props);
#line 803
  dev_info->bat.num_properties = 10UL;
#line 804
  dev_info->bat.get_property = & ds2781_battery_get_property;
#line 806
  ret = power_supply_register(& pdev->dev, & dev_info->bat);
#line 807
  if (ret != 0) {
#line 808
    dev_err((struct device  const  *)dev_info->dev, "failed to register battery\n");
#line 809
    goto fail;
  } else {

  }
#line 812
  ret = sysfs_create_group(& (dev_info->bat.dev)->kobj, & ds2781_attr_group);
#line 813
  if (ret != 0) {
#line 814
    dev_err((struct device  const  *)dev_info->dev, "failed to create sysfs group\n");
#line 815
    goto fail_unregister;
  } else {

  }
#line 818
  ret = sysfs_create_bin_file(& (dev_info->bat.dev)->kobj, (struct bin_attribute  const  *)(& ds2781_param_eeprom_bin_attr));
#line 820
  if (ret != 0) {
#line 821
    dev_err((struct device  const  *)dev_info->dev, "failed to create param eeprom bin file");
#line 823
    goto fail_remove_group;
  } else {

  }
#line 826
  ret = sysfs_create_bin_file(& (dev_info->bat.dev)->kobj, (struct bin_attribute  const  *)(& ds2781_user_eeprom_bin_attr));
#line 828
  if (ret != 0) {
#line 829
    dev_err((struct device  const  *)dev_info->dev, "failed to create user eeprom bin file");
#line 831
    goto fail_remove_bin_file;
  } else {

  }
#line 834
  return (0);
  fail_remove_bin_file: 
#line 837
  sysfs_remove_bin_file(& (dev_info->bat.dev)->kobj, (struct bin_attribute  const  *)(& ds2781_param_eeprom_bin_attr));
  fail_remove_group: 
#line 840
  sysfs_remove_group(& (dev_info->bat.dev)->kobj, & ds2781_attr_group);
  fail_unregister: 
#line 842
  power_supply_unregister(& dev_info->bat);
  fail: ;
#line 844
  return (ret);
}
}
#line 847 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
static int ds2781_battery_remove(struct platform_device *pdev ) 
{ 
  struct ds2781_device_info *dev_info ;
  void *tmp ;

  {
#line 849
  tmp = platform_get_drvdata((struct platform_device  const  *)pdev);
#line 849
  dev_info = (struct ds2781_device_info *)tmp;
#line 852
  sysfs_remove_group(& (dev_info->bat.dev)->kobj, & ds2781_attr_group);
#line 854
  power_supply_unregister(& dev_info->bat);
#line 856
  return (0);
}
}
#line 859 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
static struct platform_driver ds2781_battery_driver  =    {& ds2781_battery_probe, & ds2781_battery_remove, 0, 0, 0, {"ds2781-battery", 0,
                                                               0, 0, (_Bool)0, 0,
                                                               0, 0, 0, 0, 0, 0, 0,
                                                               0, 0}, 0};
#line 866 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
static int ds2781_battery_driver_init(void) 
{ 
  int tmp ;

  {
#line 866
  tmp = __platform_driver_register(& ds2781_battery_driver, & __this_module);
#line 866
  return (tmp);
}
}
#line 866 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
static void ds2781_battery_driver_exit(void) 
{ 


  {
#line 866
  platform_driver_unregister(& ds2781_battery_driver);
#line 867
  return;
}
}
#line 874 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
char *ldvarg18  ;
#line 875 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
loff_t ldvarg11  ;
#line 876 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
size_t ldvarg7  ;
#line 877 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
char *ldvarg23  ;
#line 878 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
size_t ldvarg12  ;
#line 879 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
struct bin_attribute *ds2781_param_eeprom_bin_attr_group1  ;
#line 880 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
char *ldvarg1  ;
#line 881 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
int ldv_retval_0  ;
#line 882 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
struct file *ds2781_user_eeprom_bin_attr_group2  ;
#line 883 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
struct bin_attribute *ds2781_user_eeprom_bin_attr_group1  ;
#line 884 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
int ldv_retval_1  ;
#line 885 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
struct device *dev_attr_pmod_enabled_group0  ;
#line 886 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
struct device_attribute *dev_attr_sense_resistor_value_group1  ;
#line 887
extern int ldv_ds2781_user_eeprom_bin_attr_probe_6(void) ;
#line 888 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
struct device_attribute *dev_attr_pmod_enabled_group1  ;
#line 889 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
size_t ldvarg0  ;
#line 890 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
struct file *ds2781_param_eeprom_bin_attr_group2  ;
#line 891 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
loff_t ldvarg5  ;
#line 892 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
size_t ldvarg16  ;
#line 893 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
char *ldvarg6  ;
#line 894 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
loff_t ldvarg14  ;
#line 895 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
char *ldvarg4  ;
#line 896 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
struct device_attribute *dev_attr_rsgain_setting_group1  ;
#line 897
extern void ldv_check_final_state(void) ;
#line 898 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
loff_t ldvarg2  ;
#line 899
extern int ldv_ds2781_user_eeprom_bin_attr_release_6(void) ;
#line 900 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
char *ldvarg20  ;
#line 901 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
size_t ldvarg3  ;
#line 902 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
struct kobject *ds2781_user_eeprom_bin_attr_group0  ;
#line 903 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
struct kobject *ds2781_param_eeprom_bin_attr_group0  ;
#line 904 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
struct device *dev_attr_rsgain_setting_group0  ;
#line 905 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
char *ldvarg8  ;
#line 906
extern void ldv_initialize(void) ;
#line 907 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
char *ldvarg13  ;
#line 908 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
char *ldvarg10  ;
#line 909 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
struct device *dev_attr_sense_resistor_value_group0  ;
#line 910 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
size_t ldvarg9  ;
#line 911 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
struct device *dev_attr_pio_pin_group0  ;
#line 912
extern int ldv_ds2781_param_eeprom_bin_attr_release_7(void) ;
#line 913
extern int ldv_ds2781_param_eeprom_bin_attr_probe_7(void) ;
#line 914 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
char *ldvarg15  ;
#line 915 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
char *ldvarg21  ;
#line 916 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
struct device_attribute *dev_attr_pio_pin_group1  ;
#line 917 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
char *ldvarg17  ;
#line 918 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
size_t ldvarg22  ;
#line 919 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
size_t ldvarg19  ;
#line 920 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
struct platform_device *ds2781_battery_driver_group0  ;
#line 934 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
void main(void) 
{ 
  int tmp ;
  int tmp___0 ;
  int tmp___1 ;
  int tmp___2 ;
  int tmp___3 ;
  int tmp___4 ;
  int tmp___5 ;
  int tmp___6 ;
  int tmp___7 ;

  {
#line 935
  ldv_initialize();
#line 937
  ldv_state_variable_6 = 0;
#line 938
  ldv_state_variable_3 = 0;
#line 939
  ldv_state_variable_7 = 0;
#line 940
  ldv_state_variable_2 = 0;
#line 941
  ldv_state_variable_1 = 0;
#line 942
  ldv_state_variable_4 = 0;
#line 943
  ref_cnt = 0;
#line 944
  ldv_state_variable_0 = 1;
#line 945
  ldv_state_variable_5 = 0;
  ldv_17255: 
#line 947
  tmp = __VERIFIER_nondet_int();
#line 947
  switch (tmp) {
  case 0: ;
#line 951
  if (ldv_state_variable_6 != 0) {
#line 952
    tmp___0 = __VERIFIER_nondet_int();
#line 952
    switch (tmp___0) {
    case 0: ;
#line 955
    if (ldv_state_variable_6 == 2) {
#line 957
      ds2781_write_user_eeprom_bin(ds2781_user_eeprom_bin_attr_group2, ds2781_user_eeprom_bin_attr_group0,
                                   ds2781_user_eeprom_bin_attr_group1, ldvarg4, ldvarg5,
                                   ldvarg3);
#line 959
      ldv_state_variable_6 = 2;
    } else {

    }
#line 962
    goto ldv_17210;
    case 1: ;
#line 965
    if (ldv_state_variable_6 == 2) {
#line 967
      ds2781_read_user_eeprom_bin(ds2781_user_eeprom_bin_attr_group2, ds2781_user_eeprom_bin_attr_group0,
                                  ds2781_user_eeprom_bin_attr_group1, ldvarg1, ldvarg2,
                                  ldvarg0);
#line 969
      ldv_state_variable_6 = 2;
    } else {

    }
#line 972
    goto ldv_17210;
    case 2: ;
#line 975
    if (ldv_state_variable_6 == 2) {
#line 977
      ldv_ds2781_user_eeprom_bin_attr_release_6();
#line 979
      ldv_state_variable_6 = 1;
#line 980
      ref_cnt = ref_cnt - 1;
    } else {

    }
#line 983
    goto ldv_17210;
    case 3: ;
#line 986
    if (ldv_state_variable_6 == 1) {
#line 988
      ldv_ds2781_user_eeprom_bin_attr_probe_6();
#line 990
      ldv_state_variable_6 = 2;
#line 991
      ref_cnt = ref_cnt + 1;
    } else {

    }
#line 994
    goto ldv_17210;
    default: ;
#line 995
    goto ldv_17210;
    }
    ldv_17210: ;
  } else {

  }
#line 999
  goto ldv_17215;
  case 1: ;
#line 1003
  if (ldv_state_variable_3 != 0) {
#line 1004
    tmp___1 = __VERIFIER_nondet_int();
#line 1004
    switch (tmp___1) {
    case 0: ;
#line 1007
    if (ldv_state_variable_3 == 1) {
#line 1009
      ds2781_set_rsgain_setting(dev_attr_rsgain_setting_group0, dev_attr_rsgain_setting_group1,
                                (char const   *)ldvarg8, ldvarg7);
#line 1011
      ldv_state_variable_3 = 1;
    } else {

    }
#line 1014
    goto ldv_17218;
    case 1: ;
#line 1017
    if (ldv_state_variable_3 == 1) {
#line 1019
      ds2781_get_rsgain_setting(dev_attr_rsgain_setting_group0, dev_attr_rsgain_setting_group1,
                                ldvarg6);
#line 1021
      ldv_state_variable_3 = 1;
    } else {

    }
#line 1024
    goto ldv_17218;
    default: ;
#line 1025
    goto ldv_17218;
    }
    ldv_17218: ;
  } else {

  }
#line 1029
  goto ldv_17215;
  case 2: ;
#line 1033
  if (ldv_state_variable_7 != 0) {
#line 1034
    tmp___2 = __VERIFIER_nondet_int();
#line 1034
    switch (tmp___2) {
    case 0: ;
#line 1037
    if (ldv_state_variable_7 == 2) {
#line 1039
      ds2781_write_param_eeprom_bin(ds2781_param_eeprom_bin_attr_group2, ds2781_param_eeprom_bin_attr_group0,
                                    ds2781_param_eeprom_bin_attr_group1, ldvarg13,
                                    ldvarg14, ldvarg12);
#line 1041
      ldv_state_variable_7 = 2;
    } else {

    }
#line 1044
    goto ldv_17223;
    case 1: ;
#line 1047
    if (ldv_state_variable_7 == 2) {
#line 1049
      ds2781_read_param_eeprom_bin(ds2781_param_eeprom_bin_attr_group2, ds2781_param_eeprom_bin_attr_group0,
                                   ds2781_param_eeprom_bin_attr_group1, ldvarg10,
                                   ldvarg11, ldvarg9);
#line 1051
      ldv_state_variable_7 = 2;
    } else {

    }
#line 1054
    goto ldv_17223;
    case 2: ;
#line 1057
    if (ldv_state_variable_7 == 2) {
#line 1059
      ldv_ds2781_param_eeprom_bin_attr_release_7();
#line 1061
      ldv_state_variable_7 = 1;
#line 1062
      ref_cnt = ref_cnt - 1;
    } else {

    }
#line 1065
    goto ldv_17223;
    case 3: ;
#line 1068
    if (ldv_state_variable_7 == 1) {
#line 1070
      ldv_ds2781_param_eeprom_bin_attr_probe_7();
#line 1072
      ldv_state_variable_7 = 2;
#line 1073
      ref_cnt = ref_cnt + 1;
    } else {

    }
#line 1076
    goto ldv_17223;
    default: ;
#line 1077
    goto ldv_17223;
    }
    ldv_17223: ;
  } else {

  }
#line 1081
  goto ldv_17215;
  case 3: ;
#line 1085
  if (ldv_state_variable_2 != 0) {
#line 1086
    tmp___3 = __VERIFIER_nondet_int();
#line 1086
    switch (tmp___3) {
    case 0: ;
#line 1089
    if (ldv_state_variable_2 == 1) {
#line 1091
      ds2781_set_pio_pin(dev_attr_pio_pin_group0, dev_attr_pio_pin_group1, (char const   *)ldvarg17,
                         ldvarg16);
#line 1093
      ldv_state_variable_2 = 1;
    } else {

    }
#line 1096
    goto ldv_17230;
    case 1: ;
#line 1099
    if (ldv_state_variable_2 == 1) {
#line 1101
      ds2781_get_pio_pin(dev_attr_pio_pin_group0, dev_attr_pio_pin_group1, ldvarg15);
#line 1103
      ldv_state_variable_2 = 1;
    } else {

    }
#line 1106
    goto ldv_17230;
    default: ;
#line 1107
    goto ldv_17230;
    }
    ldv_17230: ;
  } else {

  }
#line 1111
  goto ldv_17215;
  case 4: ;
#line 1115
  if (ldv_state_variable_1 != 0) {
#line 1116
    tmp___4 = __VERIFIER_nondet_int();
#line 1116
    switch (tmp___4) {
    case 0: ;
#line 1119
    if (ldv_state_variable_1 == 1) {
#line 1121
      ldv_retval_0 = ds2781_battery_probe(ds2781_battery_driver_group0);
#line 1123
      if (ldv_retval_0 == 0) {
#line 1124
        ldv_state_variable_1 = 2;
#line 1125
        ref_cnt = ref_cnt + 1;
      } else {

      }
    } else {

    }
#line 1129
    goto ldv_17235;
    case 1: ;
#line 1132
    if (ldv_state_variable_1 == 2) {
#line 1134
      ds2781_battery_remove(ds2781_battery_driver_group0);
#line 1136
      ldv_state_variable_1 = 1;
#line 1137
      ref_cnt = ref_cnt - 1;
    } else {

    }
#line 1140
    goto ldv_17235;
    default: ;
#line 1141
    goto ldv_17235;
    }
    ldv_17235: ;
  } else {

  }
#line 1145
  goto ldv_17215;
  case 5: ;
#line 1149
  if (ldv_state_variable_4 != 0) {
#line 1150
    tmp___5 = __VERIFIER_nondet_int();
#line 1150
    switch (tmp___5) {
    case 0: ;
#line 1153
    if (ldv_state_variable_4 == 1) {
#line 1155
      ds2781_set_sense_resistor_value(dev_attr_sense_resistor_value_group0, dev_attr_sense_resistor_value_group1,
                                      (char const   *)ldvarg20, ldvarg19);
#line 1157
      ldv_state_variable_4 = 1;
    } else {

    }
#line 1160
    goto ldv_17240;
    case 1: ;
#line 1163
    if (ldv_state_variable_4 == 1) {
#line 1165
      ds2781_get_sense_resistor_value(dev_attr_sense_resistor_value_group0, dev_attr_sense_resistor_value_group1,
                                      ldvarg18);
#line 1167
      ldv_state_variable_4 = 1;
    } else {

    }
#line 1170
    goto ldv_17240;
    default: ;
#line 1171
    goto ldv_17240;
    }
    ldv_17240: ;
  } else {

  }
#line 1175
  goto ldv_17215;
  case 6: ;
#line 1179
  if (ldv_state_variable_0 != 0) {
#line 1180
    tmp___6 = __VERIFIER_nondet_int();
#line 1180
    switch (tmp___6) {
    case 0: ;
#line 1183
    if (ldv_state_variable_0 == 3 && ref_cnt == 0) {
#line 1185
      ds2781_battery_driver_exit();
#line 1186
      ldv_state_variable_0 = 2;
#line 1187
      goto ldv_final;
    } else {

    }
#line 1190
    goto ldv_17246;
    case 1: ;
#line 1193
    if (ldv_state_variable_0 == 1) {
#line 1195
      ldv_retval_1 = ds2781_battery_driver_init();
#line 1197
      if (ldv_retval_1 == 0) {
#line 1198
        ldv_state_variable_0 = 3;
#line 1199
        ldv_state_variable_5 = 1;
#line 1200
        ldv_state_variable_2 = 1;
#line 1201
        ldv_state_variable_7 = 1;
#line 1202
        ldv_state_variable_3 = 1;
#line 1203
        ldv_state_variable_1 = 1;
#line 1204
        ldv_state_variable_4 = 1;
#line 1205
        ldv_state_variable_6 = 1;
      } else {

      }
#line 1207
      if (ldv_retval_1 != 0) {
#line 1208
        ldv_state_variable_0 = 2;
#line 1209
        goto ldv_final;
      } else {

      }
    } else {

    }
#line 1213
    goto ldv_17246;
    default: ;
#line 1214
    goto ldv_17246;
    }
    ldv_17246: ;
  } else {

  }
#line 1218
  goto ldv_17215;
  case 7: ;
#line 1222
  if (ldv_state_variable_5 != 0) {
#line 1223
    tmp___7 = __VERIFIER_nondet_int();
#line 1223
    switch (tmp___7) {
    case 0: ;
#line 1226
    if (ldv_state_variable_5 == 1) {
#line 1228
      ds2781_set_pmod_enabled(dev_attr_pmod_enabled_group0, dev_attr_pmod_enabled_group1,
                              (char const   *)ldvarg23, ldvarg22);
#line 1230
      ldv_state_variable_5 = 1;
    } else {

    }
#line 1233
    goto ldv_17251;
    case 1: ;
#line 1236
    if (ldv_state_variable_5 == 1) {
#line 1238
      ds2781_get_pmod_enabled(dev_attr_pmod_enabled_group0, dev_attr_pmod_enabled_group1,
                              ldvarg21);
#line 1240
      ldv_state_variable_5 = 1;
    } else {

    }
#line 1243
    goto ldv_17251;
    default: ;
#line 1244
    goto ldv_17251;
    }
    ldv_17251: ;
  } else {

  }
#line 1248
  goto ldv_17215;
  default: ;
#line 1249
  goto ldv_17215;
  }
  ldv_17215: ;
#line 1251
  goto ldv_17255;
  ldv_final: 
#line 1253
  ldv_check_final_state();
#line 1254
  return;
}
}
#line 1257 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
void ldv_mutex_lock_1(struct mutex *ldv_func_arg1 ) 
{ 


  {
#line 1262
  ldv_mutex_lock_lock(ldv_func_arg1);
#line 1264
  mutex_lock(ldv_func_arg1);
#line 1265
  return;
}
}
#line 1267 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
void ldv_mutex_unlock_2(struct mutex *ldv_func_arg1 ) 
{ 


  {
#line 1272
  ldv_mutex_unlock_lock(ldv_func_arg1);
#line 1274
  mutex_unlock(ldv_func_arg1);
#line 1275
  return;
}
}
#line 1277 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
void ldv_mutex_lock_3(struct mutex *ldv_func_arg1 ) 
{ 


  {
#line 1282
  ldv_mutex_lock_mutex_of_device(ldv_func_arg1);
#line 1284
  mutex_lock(ldv_func_arg1);
#line 1285
  return;
}
}
#line 1287 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
int ldv_mutex_trylock_4(struct mutex *ldv_func_arg1 ) 
{ 
  ldv_func_ret_type___2 ldv_func_res ;
  int tmp ;
  int tmp___0 ;

  {
#line 1292
  tmp = mutex_trylock(ldv_func_arg1);
#line 1292
  ldv_func_res = tmp;
#line 1294
  tmp___0 = ldv_mutex_trylock_mutex_of_device(ldv_func_arg1);
#line 1294
  return (tmp___0);
#line 1296
  return (ldv_func_res);
}
}
#line 1299 "/home/shchepetkov/tests/thomas/work/current--X--drivers/power/ds2781_battery.ko--X--x1linux-3.11-rc1.tar.xz--X--32_7a/linux-3.11-rc1.tar.xz/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/power/ds2781_battery.c.prepared"
void ldv_mutex_unlock_5(struct mutex *ldv_func_arg1 ) 
{ 


  {
#line 1304
  ldv_mutex_unlock_mutex_of_device(ldv_func_arg1);
#line 1306
  mutex_unlock(ldv_func_arg1);
#line 1307
  return;
}
}
