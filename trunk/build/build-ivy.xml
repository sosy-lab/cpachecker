<?xml version="1.0" encoding="UTF-8" ?>

<!--
This file is part of SoSy-Lab Java-Project Template,
a collection of common files and build definitions for Java projects:
https://gitlab.com/sosy-lab/software/java-project-template

SPDX-FileCopyrightText: 2018-2020 Dirk Beyer <https://www.sosy-lab.org>

SPDX-License-Identifier: Apache-2.0
-->

<!-- vim: set tabstop=8 shiftwidth=4 expandtab filetype=ant : -->
<project name="ivy" basedir="."
         xmlns:ivy="antlib:org.apache.ivy.ant">

    <!-- Targets for managing dependencies with Ivy. -->

    <!-- DO NOT EDIT LOCALLY!
         Keep this file synchronized with
         https://gitlab.com/sosy-lab/software/java-project-template
    -->

    <!-- These properties can be overridden from including file. -->
    <property name="ivy.target_version" value="2.5.0"/> <!-- Change version number here to use a newer version of Ivy. -->
    <!-- <property name="ivy.disable" value=""/> --> <!-- Disable ivy completely. -->
    <property name="ivy.repo.url" value="https://www.sosy-lab.org/ivy"/>
    <property name="ivy.lib.dir" value="lib/java"/>
    <property name="ivy.configuration.main" value="runtime"/>
    <property name="ivy.configurations" value="build, ${ivy.configuration.main}, test, spotbugs"/>
    <property name="ivy.dep.file" value="lib/ivy.xml"/>
    <property name="ivy.settings.file" value="build/ivysettings.xml"/>

    <property name="ivy.jar.dir" value="${ivy.lib.dir}/build"/>
    <property name="ivy.jar.file" value="ivy.jar"/>
    <available file="${ivy.jar.dir}/${ivy.jar.file}" property="ivy.jar.present"/>
    <available file="${ivy.lib.dir}-contrib" property="ivy.contrib.present"/>

    <property environment="env"/>
    <!-- Use $HOME with fallback of ${user.home} for home directory to avoid use of hardcoded home directory path in Java. -->
    <condition property="home.dir" value="${env.HOME}" else="${user.home}">
        <isset property="env.HOME"/>
    </condition>
    <condition property="tmp.ivy.cache.dir" value="${env.IVY_CACHE_DIR}" else="${home.dir}/.ivy2/cache">
        <isset property="env.IVY_CACHE_DIR" />
    </condition>
    <property name="ivy.cache.dir" location="${tmp.ivy.cache.dir}" />

    <!-- If necessary, download Ivy from web site so that it does not need to be installed. -->
    <target name="bootstrap-ivy" unless="ivy.jar.present">
        <mkdir dir="${ivy.jar.dir}"/>
        <echo message="Downloading ivy..."/>
        <get src="${ivy.repo.url}/org.apache.ivy/ivy/ivy-${ivy.target_version}.jar" dest="${ivy.jar.dir}/${ivy.jar.file}" usetimestamp="true"/>
    </target>

    <!-- Load the Ivy plugin for Ant so the Ivy tasks are available. -->
    <target name="load-ivy" depends="bootstrap-ivy">
        <path id="ivy.lib.path">
            <fileset dir="${ivy.jar.dir}" includes="${ivy.jar.file}"/>
        </path>
        <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
        <ivy:settings file="${ivy.settings.file}"/>
    </target>

    <!-- Ask Ivy to get all the dependencies for us -->
    <target name="resolve-dependencies" depends="load-ivy, update-contrib" unless="ivy.disable">
        <echo message="Downloading and installing dependencies with Ivy..."/>
        <ivy:resolve conf="${ivy.configurations}" log="download-only"/>
        <ivy:retrieve sync="true" overwriteMode="different" pattern="${ivy.lib.dir}/[conf]/[artifact](-[classifier]).[ext]"/>
    </target>

    <target name="report-dependencies" depends="resolve-dependencies" description="Generate dependencies report">
      <ivy:report graph="false" dot="true" conf="${ivy.configurations}, contrib"/>
    </target>

    <!-- Update additional resources if they were downloaded previously. -->
    <target name="update-contrib" if="ivy.contrib.present">
        <antcall target="install-contrib"/>
    </target>

    <target name="install-contrib" depends="load-ivy" unless="ivy.disable" description="Retrieve sources and docs for external libraries">
        <ivy:resolve conf="contrib" log="download-only"/>
        <ivy:retrieve sync="true" pattern="${ivy.lib.dir}-contrib/[artifact](-[classifier]).[ext]"/>
    </target>

    <target name="update-lib" depends="load-ivy" description="Update the version of a library to the latest one">
        <property name="update-lib.revision" value="latest.release"/>
        <ivy:findrevision organisation="${update-lib.org}" module="${update-lib.module}" revision="${update-lib.revision}" property="update-lib.version"/>
        <echo message="Found version ${update-lib.version} of ${update-lib.org}/${update-lib.module}"/>
        <replaceregexp file="${ivy.dep.file}" match='(org="${update-lib.org}" name="${update-lib.module}" rev=)"[0-9a-zA-Z+-.]*"' replace='\1"${update-lib.version}"' byline="true"/>
    </target>
</project>
