# This file is part of CPAchecker,
# a tool for configurable software verification:
# https://cpachecker.sosy-lab.org
#
# SPDX-FileCopyrightText: 2007-2020 Dirk Beyer <https://www.sosy-lab.org>
#
# SPDX-License-Identifier: Apache-2.0

# When checking witnesses, the witness automaton must agree with the
# specification automata on target states.
cpa.automaton.treatErrorsAsTargets = false
WitnessAutomaton.cpa.automaton.treatErrorsAsTargets = true

# Keep as much of the source code as possible:
# Other tools may use that code in their witnesses
cfa.simplifyCfa = false

# Always explore towards the closest violating automaton states first
analysis.traversal.byAutomatonVariable = __DISTANCE_TO_VIOLATION

# No multi edges during witness checking
cpa.composite.aggregateBasicBlocks = false

# Disable statistics for memory consumption.
statistics.memory = false

# This is already a counterexample/witness check; no further check is required
# (actually, further checks may add confidence, but this process could be repeated ad infinitum)
analysis.checkCounterexamples = false

# Disable writing of C counterexamples, because witness automata can cause ARG
# branching without control-flow branching (due to nondeterministic matching),
# which is not supported by our C export.
counterexample.export.exportAsSource = false
