# This file is part of CPAchecker,
# a tool for configurable software verification:
# https://cpachecker.sosy-lab.org
#
# SPDX-FileCopyrightText: 2007-2020 Dirk Beyer <https://www.sosy-lab.org>
#
# SPDX-License-Identifier: Apache-2.0

# The configuration is used as a precise configuration for lock analysis,

#include lockStatistics-core.properties

CompositeCPA.cpas = cpa.location.LocationCPA, cpa.callstack.CallstackCPA, cpa.thread.ThreadCPA, cpa.lock.LockCPA, cpa.predicate.BAMPredicateCPA, cpa.functionpointer.FunctionPointerCPA
cpa.usage.refinementChain = IdentifierIterator, PointIterator, UsageIterator, PathIterator, PredicateRefiner

solver.solver = SMTINTERPOL
analysis.algorithm.CEGAR = true

[cegar]
refiner = cpa.usage.refinement.IdentifierIterator
globalRefinement = true
# maxIterations = 20

[cpa.predicate]
useBitwiseAxioms = true
encodeBitvectorAs = INTEGER
encodeFloatAs = RATIONAL
useArraysForHeap = false
defaultArrayLength = 1
maxArrayLength = 1
nondetFunctions = ldv_undef_int
useHavocAbstraction = true
# New heuristics: type detection and void* tracking
revealAllocationTypeFromLhs = true
deferUntypedAllocations = true
# New heuristic for cillified files: pre-populate small structures with all their fields
maxPreFilledAllocationSize = 0
# An option enabling PathFormulaWithUF, CToFormulaWithUFConverter and appropriate merging policy
handlePointerAliasing =  true
# Setting the option to make memory allocations always return correct addresses
memoryAllocationsAlwaysSucceed = true
blk.alwaysAtJoin     = true

[cpa.predicate.bam]
reduceIrrelevantPrecision = false
useAbstractionReduction = false
auxiliaryPredicateComputer = false
