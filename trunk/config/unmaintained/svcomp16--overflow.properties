# This file is part of CPAchecker,
# a tool for configurable software verification:
# https://cpachecker.sosy-lab.org
#
# SPDX-FileCopyrightText: 2007-2020 Dirk Beyer <https://www.sosy-lab.org>
#
# SPDX-License-Identifier: Apache-2.0

# ----------------------------------------------------------------------
# This configuration file uses sets of intervals to check the overflow property.
# ----------------------------------------------------------------------

cpa = cpa.arg.ARGCPA
ARGCPA.cpa = cpa.composite.CompositeCPA
CompositeCPA.cpas = cpa.location.LocationCPA, cpa.invariants.InvariantsCPA, cpa.callstack.CallstackCPA, cpa.functionpointer.FunctionPointerCPA, cpa.pointer2.PointerCPA

cpa.invariants.merge = SEP
cpa.invariants.interestingVariableLimit = 0
cpa.invariants.abstractionStateFactory = NEVER
cpa.invariants.analyzeTargetPathsOnly = false
cpa.invariants.analyzeRelevantVariablesOnly = false
cpa.invariants.maximumFormulaDepth = 1

# Simplifications must be turned off; they would hide the overflows
cfa.simplifyConstExpressions=false

# specification to find overflow related problems
specification = ../specification/sv-comp-overflow.spc

# checking counterexamples, esp. with CBMC does not make sense
analysis.checkCounterexamples = false

# multi edges are not required for the overflow tasks
cpa.composite.aggregateBasicBlocks = false

# Disable all output files except the witness.
output.disable = true

# Write witness to file (required by competition).
counterexample.export.graphml=witness.graphml

# simplified CFA is bad for witnesses
cfa.simplifyCfa = false

# This is the configuration used when verifying the overflow property (actually this configuration).
overflow.config = svcomp16--overflow.properties
