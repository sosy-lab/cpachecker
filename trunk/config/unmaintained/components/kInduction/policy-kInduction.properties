# This file is part of CPAchecker,
# a tool for configurable software verification:
# https://cpachecker.sosy-lab.org
#
# SPDX-FileCopyrightText: 2007-2020 Dirk Beyer <https://www.sosy-lab.org>
# SPDX-FileCopyrightText: 2014-2017 Universit√© Grenoble Alpes
#
# SPDX-License-Identifier: Apache-2.0

#include ../../../bmc.properties

# NOTE: PredicateCPA is used with no abstractions, hence it effectively performs
# symbolic execution.
CompositeCPA.cpas = cpa.location.LocationCPA, cpa.callstack.CallstackCPA, cpa.functionpointer.FunctionPointerCPA, cpa.predicate.PredicateCPA, cpa.assumptions.storage.AssumptionStorageCPA, cpa.loopbound.LoopBoundCPA, cpa.value.ValueAnalysisCPA

[cpa.loopbound]
maxLoopIterationsUpperBound = 0
maxLoopIterations = 1
maxLoopIterationAdjusterFactory = INCREMENT

[bmc]
induction = true
invariantGenerationStrategy = REACHED_SET

[cpa.predicate]
encodeFloatAs = RATIONAL

[cpa.callstack]
depth=1

[analysis]
checkCounterexamples = true

[counterexample]
checker = CPACHECKER
checker.config = ../../../cex-checks/predicateAnalysis-as-cex-check.properties
