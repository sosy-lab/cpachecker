# This file is part of CPAchecker,
# a tool for configurable software verification:
# https://cpachecker.sosy-lab.org
#
# SPDX-FileCopyrightText: 2007-2020 Dirk Beyer <https://www.sosy-lab.org>
#
# SPDX-License-Identifier: Apache-2.0

# ------------------------------------------------------------------
# This configuration file uses value analysis of integer
# variables in a model-checking configuration.
# This configuration makes use of a CEGAR approach, by only tracking
# variables that are found, via interpolation, to be relevant to the
# error.
# To counter the imprecision of the value domain, a predicate
# analysis in the ABE-lf configuration is used to increase the
# precision.
# Furthemore, variables that have more then 22 distinct values along
# a path are dropped in the subsequent path exploration.
# ------------------------------------------------------------------

#include ../valueAnalysis-predicateAnalysis-Cegar-ABElf.properties

CompositeCPA.cpas       = cpa.location.LocationCPA, cpa.callstack.CallstackCPA, cpa.value.ValueAnalysisCPA, cpa.predicate.PredicateCPA, cpa.conditions.path.PathConditionsCPA

# this automaton defines which locations are the error locations
specification = ../specification/sv-comp-errorlabel.spc

# drop variables from abstract state once they have more then 22 distinct assignments along the current path
cpa.conditions.path.condition = AssignmentsInPathCondition
cpa.conditions.path.assignments.threshold = 22

cpa.predicate.useArraysForHeap = false
cpa.predicate.maxArrayLength = 20
solver.solver = MathSAT5
cpa.predicate.encodeBitvectorAs = RATIONAL

output.disable         = true
statistics.memory      = false
counterexample.export.file = ErrorPath.txt

# malloc never returns null according to SV-Comp rules
cpa.predicate.memoryAllocationsAlwaysSucceed = true
