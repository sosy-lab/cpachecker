# This file is part of CPAchecker,
# a tool for configurable software verification:
# https://cpachecker.sosy-lab.org
#
# SPDX-FileCopyrightText: 2007-2020 Dirk Beyer <https://www.sosy-lab.org>
#
# SPDX-License-Identifier: Apache-2.0

# ----------------------------------------------------------------------
# This file provides a configuration of CPAchecker
# that should work reasonably well for a wide range of programs and properties.
# It uses
# - memory graphs for memory-safety properties,
# - predicate abstraction for overflow properties,
# - lasso-based analysis for termination properties,
# - BDDs for concurrent programs,
# - predicate abstraction and value analysis for recursive programs, and
# - k-induction for all other cases.
# ----------------------------------------------------------------------

# This automaton defines which locations are the error locations
specification = specification/default.spc

# Use sequential combination of analyses.
analysis.restartAfterUnknown = true

# if we find a concurrent program, we copy the CFA to avoid colliding function names.
cfa.useCFACloningForMultiThreadedPrograms=true

# The analyses used for reachability properties.
restartAlgorithm.configFiles = components/kInduction+Invariants/kInduction.properties, components/valueAnalysis-predicateAnalysis-bam-rec.properties::if-recursive, components/bddAnalysis-concurrency.properties::if-concurrent

# The analyses used for memory safety properties;
# everything in this file is then ignored.
memorysafety.config = smg.properties

# This is the configuration used when verifying the overflow property;
# everything in this file is then ignored.
overflow.config = default--overflow.properties

# This is the configuration used for verifying the termination property:
# everything in this file is then ignored.
termination.config = terminationAnalysis.properties

#include includes/resource-limits.properties
