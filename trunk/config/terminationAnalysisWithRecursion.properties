# This file is part of CPAchecker,
# a tool for configurable software verification:
# https://cpachecker.sosy-lab.org
#
# SPDX-FileCopyrightText: 2007-2020 Dirk Beyer <https://www.sosy-lab.org>
#
# SPDX-License-Identifier: Apache-2.0

#include terminationAnalysis.properties

# Use this configuration as configuration for termination analysis.
termination.config = terminationAnalysisWithRecursion.properties

termination.considerRecursion = true

# ensure that analysis abstracts at beginning of recursion
# explicit nodes depend on recursion currently looked at
# and will be set by termination algorithm
cpa.predicate.blk.alwaysAtExplicitNodes = true

# during recursion need to stop when callstack differs
# may not use partitioned reached set which prohibits this behavior
analysis.reachedSet=LOCATIONMAPPED

# always restart to avoid problems with those children of refinement root
# that are not deleted in lazy refinement
cpa.predicate.refinement.restartAfterRefinements=1

# Add constraints for the range of the return-value of a nondet-method. For
# example the assignment 'X=nondet_int()' produces the constraint
# 'MIN<=X<=MAX', where MIN and MAX are computed from the type of the method
# (signature, not name!).
cpa.predicate.addRangeConstraintsForNondet = true

# increase call stack depth (threshold tested out experimentally)
cpa.callstack.depth = 10
