# This file is part of CPAchecker,
# a tool for configurable software verification:
# https://cpachecker.sosy-lab.org
#
# SPDX-FileCopyrightText: 2007-2020 Dirk Beyer <https://www.sosy-lab.org>
#
# SPDX-License-Identifier: Apache-2.0

#include ../predicateAnalysis.properties

cpa.predicate.blk.alwaysAtFunctions = false
cpa.predicate.blk.alwaysAtLoops     = true

cegar.refiner = cpa.predicate.PredicateRefiner

# Guessing predicates statically from the CFA is a heuristic that pays off.
cpa.predicate.refinement.performInitialStaticRefinement = true

CompositeCPA.cpas = cpa.location.LocationCPA, cpa.callstack.CallstackCPA, cpa.functionpointer.FunctionPointerCPA, cpa.predicate.PredicateCPA, cpa.assumptions.storage.AssumptionStorageCPA

# this automaton defines which locations are the error locations
specification = ../specification/sv-comp-reachability.spc

analysis.collectAssumptions = true
assumptions.automatonFile = AssumptionAutomaton.txt

# Enable MultiEdges, this gives a little bit of performance.
cpa.composite.aggregateBasicBlocks = true

counterexample.continueAfterInfeasibleError = false
counterexample.removeInfeasibleErrorState = false

[analysis.traversal]
order = bfs
useReversePostorder = true
useCallstack = true
