# This file is part of CPAchecker,
# a tool for configurable software verification:
# https://cpachecker.sosy-lab.org
#
# SPDX-FileCopyrightText: 2007-2020 Dirk Beyer <https://www.sosy-lab.org>
#
# SPDX-License-Identifier: Apache-2.0

# order is important, first include the basic BDD analysis, then BAM
#include includes/bddAnalysis.properties
#include includes/bam.properties
#include includes/resource-limits.properties

CompositeCPA.cpas = cpa.location.LocationCPA, cpa.callstack.CallstackCPA, cpa.bdd.BDDCPA

specification = ./specification/default.spc

# loop partitions are problematic,
# if the loop counter has no lower bound within the block,
# because we unroll the loop completely (for all values in range of the bitsize!).
cpa.bam.blockHeuristic=FunctionPartitioning

# for full block abstraction, we require:
# - several utility variables to model input and apply variables for block abstractions.
# - full reached-set analysis: do not break on target states, search for exit and target states when leaving a block.
cpa.bdd.useBlockAbstraction=true
cpa.bdd.initAdditionalVariables=2
cpa.automaton.breakOnTargetState=-1
cpa.bam.searchTargetStatesOnExit=true
