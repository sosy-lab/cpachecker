<?xml version="1.0" encoding="UTF-8" ?>

<!--
This file is part of CPAchecker,
a tool for configurable software verification:
https://cpachecker.sosy-lab.org

SPDX-FileCopyrightText: 2007-2020 Dirk Beyer <https://www.sosy-lab.org>

SPDX-License-Identifier: Apache-2.0
-->

<!-- vim: set tabstop=8 shiftwidth=4 expandtab filetype=ant : -->
<project name="version" basedir=".">

    <!-- Targets for determining the version number based on the version-control revision. -->

    <!-- For release versions, set version directly -->
    <condition property="version" value="${version.base}">
        <not><contains string="${version.base}" substring="-git"/></not>
    </condition>

    <target name="determine-version-revision" unless="version">
        <!-- Determine full CPAchecker version including git commit. -->
        <loadresource property="version.core">
            <propertyresource name="version.base"/>
            <filterchain>
                <replacestring from="-git" to="" />
            </filterchain>
        </loadresource>
        <exec executable="git"
            dir="${basedir}"
            outputProperty="tmp.version.revision"
            failifexecutionfails="false"
            logError="true">
            <arg value="describe"/>
            <arg value="--match=cpachecker-${version.core}"/>
            <arg value="--dirty=+"/>
        </exec>
        <loadresource property="version.revision" quiet="true" failonerror="false">
            <!-- This only sets version.revision if it is non-empty. -->
            <propertyresource name="tmp.version.revision"/>
            <filterchain>
                <replacestring from="cpachecker-" to="" />
            </filterchain>
        </loadresource>
    </target>

    <target name="determine-version" depends="determine-version-revision">
        <mkdir dir="${class.dir}/org/sosy_lab/cpachecker"/>
        <condition property="version" value="${version.revision}" else="${version.core}-unknown">
            <isset property="version.revision"/>
        </condition>
        <echo message="${version}" file="${version.file}"/>
    </target>

</project>
