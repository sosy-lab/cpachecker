<?xml version="1.0"?>

<!--
This file is part of CPAchecker,
a tool for configurable software verification:
https://cpachecker.sosy-lab.org

SPDX-FileCopyrightText: 2007-2020 Dirk Beyer <https://www.sosy-lab.org>

SPDX-License-Identifier: Apache-2.0
-->

<!DOCTYPE benchmark PUBLIC "+//IDN sosy-lab.org//DTD BenchExec benchmark 1.0//EN" "http://www.sosy-lab.org/benchexec/benchmark-1.0.dtd">
<benchmark tool="cpachecker" timelimit="900 s">
<option name="-heap">3000M</option>
<option name="-noout"/>
<option name="-spec">sv-comp</option>
<option name="-disable-java-assertions"/>
<option name="-setprop">statistics.memory=false</option>
<option name="-setprop">pcc.strategy=ReachedSetStrategy</option>
<option name="-setprop">pcc.proofFile=arg.obj</option>

<rundefinition name="PureReachDef">
	<option name="-reachingdef-value"/>
	<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/bitvector/s3_clnt_1_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofcheck.propertychecker.parameters=skip,ssl3_connect::skip,0,end,</option>
<include>../programs/benchmarks/bitvector/s3_clnt_1_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/bitvector/s3_clnt_2_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<option name="-setprop">pcc.proofcheck.propertychecker.parameters=skip,ssl3_connect::skip,0,end,</option>
<include>../programs/benchmarks/bitvector/s3_clnt_2_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/bitvector/s3_clnt_3_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<option name="-setprop">pcc.proofcheck.propertychecker.parameters=skip,ssl3_connect::skip,0,end,</option>
<include>../programs/benchmarks/bitvector/s3_clnt_3_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/bitvector/s3_srvr_1_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<option name="-setprop">pcc.proofcheck.propertychecker.parameters=skip,ssl3_accept::skip,0,end,</option>
<include>../programs/benchmarks/bitvector/s3_srvr_1_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/bitvector/s3_srvr_2_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<option name="-setprop">pcc.proofcheck.propertychecker.parameters=skip,ssl3_accept::skip,0,end,</option>
<include>../programs/benchmarks/bitvector/s3_srvr_2_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/bitvector/s3_srvr_3_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<option name="-setprop">pcc.proofcheck.propertychecker.parameters=skip,ssl3_accept::skip,0,end,</option>
<include>../programs/benchmarks/bitvector/s3_srvr_3_true.BV.c.cil.c</include>
</tasks>
</rundefinition>

<!--<rundefinition name="ReachDef_ValueDF">
	<option name="-reachingdef-value"/>
	<option name="-setprop">cpa.value.merge=JOIN</option>
	<option name="-setprop">analysis.traversal.order=BFS</option>
	<option name="-setprop">pcc.proofcheck.propertychecker=org.sosy_lab.cpachecker.pcc.propertychecker.SingleDefinitionSingleValueChecker</option>
		<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/locks/test_locks_5_true.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<option name="-setprop">pcc.proofcheck.propertychecker.parameters=cond,main::cond,0,out,</option>
<include>../programs/benchmarks/locks/test_locks_5_true.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/locks/test_locks_6_true.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<option name="-setprop">pcc.proofcheck.propertychecker.parameters=cond,main::cond,0,out,</option>
<include>../programs/benchmarks/locks/test_locks_6_true.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/locks/test_locks_7_true.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<option name="-setprop">pcc.proofcheck.propertychecker.parameters=cond,main::cond,0,out,</option>
<include>../programs/benchmarks/locks/test_locks_7_true.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/bitvector/s3_clnt_1_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<option name="-setprop">pcc.proofcheck.propertychecker.parameters=skip,ssl3_connect::skip,0,end,</option>
<include>../programs/benchmarks/bitvector/s3_clnt_1_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/bitvector/s3_clnt_2_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<option name="-setprop">pcc.proofcheck.propertychecker.parameters=skip,ssl3_connect::skip,0,end,</option>
<include>../programs/benchmarks/bitvector/s3_clnt_2_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/bitvector/s3_clnt_3_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<option name="-setprop">pcc.proofcheck.propertychecker.parameters=skip,ssl3_connect::skip,0,end,</option>
<include>../programs/benchmarks/bitvector/s3_clnt_3_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/bitvector/s3_srvr_1_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<option name="-setprop">pcc.proofcheck.propertychecker.parameters=skip,ssl3_accept::skip,0,end,</option>
<include>../programs/benchmarks/bitvector/s3_srvr_1_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/bitvector/s3_srvr_2_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<option name="-setprop">pcc.proofcheck.propertychecker.parameters=skip,ssl3_accept::skip,0,end,</option>
<include>../programs/benchmarks/bitvector/s3_srvr_2_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/bitvector/s3_srvr_3_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<option name="-setprop">pcc.proofcheck.propertychecker.parameters=skip,ssl3_accept::skip,0,end,</option>
<include>../programs/benchmarks/bitvector/s3_srvr_3_true.BV.c.cil.c</include>
</tasks>
</rundefinition>

<rundefinition name="ReachDef_ValueJOINSEP">
	<option name="-reachingdef-value"/>
	<option name="-setprop">analysis.traversal.order=BFS</option>
	<option name="-setprop">pcc.proofcheck.propertychecker=org.sosy_lab.cpachecker.pcc.propertychecker.SingleDefinitionSingleValueChecker</option>
		<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/locks/test_locks_5_true.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<option name="-setprop">pcc.proofcheck.propertychecker.parameters=cond,main::cond,0,out,</option>
<include>../programs/benchmarks/locks/test_locks_5_true.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/locks/test_locks_6_true.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<option name="-setprop">pcc.proofcheck.propertychecker.parameters=cond,main::cond,0,out,</option>
<include>../programs/benchmarks/locks/test_locks_6_true.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/locks/test_locks_7_true.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<option name="-setprop">pcc.proofcheck.propertychecker.parameters=cond,main::cond,0,out,</option>
<include>../programs/benchmarks/locks/test_locks_7_true.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/bitvector/s3_clnt_1_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<option name="-setprop">pcc.proofcheck.propertychecker.parameters=skip,ssl3_connect::skip,0,end,</option>
<include>../programs/benchmarks/bitvector/s3_clnt_1_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/bitvector/s3_clnt_2_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<option name="-setprop">pcc.proofcheck.propertychecker.parameters=skip,ssl3_connect::skip,0,end,</option>
<include>../programs/benchmarks/bitvector/s3_clnt_2_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/bitvector/s3_clnt_3_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<option name="-setprop">pcc.proofcheck.propertychecker.parameters=skip,ssl3_connect::skip,0,end,</option>
<include>../programs/benchmarks/bitvector/s3_clnt_3_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/bitvector/s3_srvr_1_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<option name="-setprop">pcc.proofcheck.propertychecker.parameters=skip,ssl3_accept::skip,0,end,</option>
<include>../programs/benchmarks/bitvector/s3_srvr_1_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/bitvector/s3_srvr_2_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<option name="-setprop">pcc.proofcheck.propertychecker.parameters=skip,ssl3_accept::skip,0,end,</option>
<include>../programs/benchmarks/bitvector/s3_srvr_2_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/bitvector/s3_srvr_3_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<option name="-setprop">pcc.proofcheck.propertychecker.parameters=skip,ssl3_accept::skip,0,end,</option>
<include>../programs/benchmarks/bitvector/s3_srvr_3_true.BV.c.cil.c</include>
</tasks>
</rundefinition>

<rundefinition name="ReachDef_ValueSEPJOIN">
	<option name="-reachingdef-value"/>
	<option name="-setprop">CompositeCPA.cpas = cpa.location.LocationCPA, cpa.reachdef.ReachingDefCPA, cpa.value.ValueAnalysisCPA, cpa.conditions.global.GlobalConditionsCPA</option>
	<option name="-setprop">cpa.value.merge=JOIN</option>
	<option name="-setprop">cpa.reachdef.merge=SEP</option>
	<option name="-setprop">analysis.traversal.order=BFS</option>
	<option name="-setprop">pcc.proofcheck.propertychecker=org.sosy_lab.cpachecker.pcc.propertychecker.SingleDefinitionSingleValueChecker</option>
		<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/locks/test_locks_5_true.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<option name="-setprop">pcc.proofcheck.propertychecker.parameters=cond,main::cond,0,out,</option>
<include>../programs/benchmarks/locks/test_locks_5_true.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/locks/test_locks_6_true.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<option name="-setprop">pcc.proofcheck.propertychecker.parameters=cond,main::cond,0,out,</option>
<include>../programs/benchmarks/locks/test_locks_6_true.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/locks/test_locks_7_true.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<option name="-setprop">pcc.proofcheck.propertychecker.parameters=cond,main::cond,0,out,</option>
<include>../programs/benchmarks/locks/test_locks_7_true.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/bitvector/s3_clnt_1_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<option name="-setprop">pcc.proofcheck.propertychecker.parameters=skip,ssl3_connect::skip,0,end,</option>
<include>../programs/benchmarks/bitvector/s3_clnt_1_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/bitvector/s3_clnt_2_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<option name="-setprop">pcc.proofcheck.propertychecker.parameters=skip,ssl3_connect::skip,0,end,</option>
<include>../programs/benchmarks/bitvector/s3_clnt_2_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/bitvector/s3_clnt_3_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<option name="-setprop">pcc.proofcheck.propertychecker.parameters=skip,ssl3_connect::skip,0,end,</option>
<include>../programs/benchmarks/bitvector/s3_clnt_3_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/bitvector/s3_srvr_1_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<option name="-setprop">pcc.proofcheck.propertychecker.parameters=skip,ssl3_accept::skip,0,end,</option>
<include>../programs/benchmarks/bitvector/s3_srvr_1_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/bitvector/s3_srvr_2_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<option name="-setprop">pcc.proofcheck.propertychecker.parameters=skip,ssl3_accept::skip,0,end,</option>
<include>../programs/benchmarks/bitvector/s3_srvr_2_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/bitvector/s3_srvr_3_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<option name="-setprop">pcc.proofcheck.propertychecker.parameters=skip,ssl3_accept::skip,0,end,</option>
<include>../programs/benchmarks/bitvector/s3_srvr_3_true.BV.c.cil.c</include>
</tasks>
</rundefinition>

<rundefinition name="ReachDef_ValueMC">
	<option name="-reachingdef-value"/>
	<option name="-setprop">cpa.reachdef.merge=SEP</option>
	<option name="-setprop">analysis.traversal.order=DFS</option>
	<option name="-setprop">pcc.proofcheck.propertychecker=org.sosy_lab.cpachecker.pcc.propertychecker.SingleDefinitionSingleValueChecker</option>
		<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/locks/test_locks_5_true.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<option name="-setprop">pcc.proofcheck.propertychecker.parameters=cond,main::cond,0,out,</option>
<include>../programs/benchmarks/locks/test_locks_5_true.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/locks/test_locks_6_true.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<option name="-setprop">pcc.proofcheck.propertychecker.parameters=cond,main::cond,0,out,</option>
<include>../programs/benchmarks/locks/test_locks_6_true.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/locks/test_locks_7_true.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<option name="-setprop">pcc.proofcheck.propertychecker.parameters=cond,main::cond,0,out,</option>
<include>../programs/benchmarks/locks/test_locks_7_true.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/bitvector/s3_clnt_1_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<option name="-setprop">pcc.proofcheck.propertychecker.parameters=skip,ssl3_connect::skip,0,end,</option>
<include>../programs/benchmarks/bitvector/s3_clnt_1_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/bitvector/s3_clnt_2_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<option name="-setprop">pcc.proofcheck.propertychecker.parameters=skip,ssl3_connect::skip,0,end,</option>
<include>../programs/benchmarks/bitvector/s3_clnt_2_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/bitvector/s3_clnt_3_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<option name="-setprop">pcc.proofcheck.propertychecker.parameters=skip,ssl3_connect::skip,0,end,</option>
<include>../programs/benchmarks/bitvector/s3_clnt_3_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/bitvector/s3_srvr_1_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<option name="-setprop">pcc.proofcheck.propertychecker.parameters=skip,ssl3_accept::skip,0,end,</option>
<include>../programs/benchmarks/bitvector/s3_srvr_1_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/bitvector/s3_srvr_2_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<option name="-setprop">pcc.proofcheck.propertychecker.parameters=skip,ssl3_accept::skip,0,end,</option>
<include>../programs/benchmarks/bitvector/s3_srvr_2_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/bitvector/s3_srvr_3_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<option name="-setprop">pcc.proofcheck.propertychecker.parameters=skip,ssl3_accept::skip,0,end,</option>
<include>../programs/benchmarks/bitvector/s3_srvr_3_true.BV.c.cil.c</include>
</tasks>
</rundefinition>

<rundefinition name="ReachDefDF">
	<option name="-reachingdefinition"/>
	<option name="-setprop">analysis.traversal.order=BFS</option>
		<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/locks/test_locks_5_true.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<include>../programs/benchmarks/locks/test_locks_5_true.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/locks/test_locks_6_true.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<include>../programs/benchmarks/locks/test_locks_6_true.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/locks/test_locks_7_true.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<include>../programs/benchmarks/locks/test_locks_7_true.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/bitvector/s3_clnt_1_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<include>../programs/benchmarks/bitvector/s3_clnt_1_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/bitvector/s3_clnt_2_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<include>../programs/benchmarks/bitvector/s3_clnt_2_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/bitvector/s3_clnt_3_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<include>../programs/benchmarks/bitvector/s3_clnt_3_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/bitvector/s3_srvr_1_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<include>../programs/benchmarks/bitvector/s3_srvr_1_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/bitvector/s3_srvr_2_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<include>../programs/benchmarks/bitvector/s3_srvr_2_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/bitvector/s3_srvr_3_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<include>../programs/benchmarks/bitvector/s3_srvr_3_true.BV.c.cil.c</include>
</tasks>
</rundefinition>

<rundefinition name="ValueDF">
	<option name="-valueAnalysis-pcc-trac-all"/>
	<option name="-setprop">analysis.traversal.order=BFS</option>
	<option name="-setprop">cpa.value.merge=JOIN</option>
		<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/locks/test_locks_5_true.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<include>../programs/benchmarks/locks/test_locks_5_true.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/locks/test_locks_6_true.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<include>../programs/benchmarks/locks/test_locks_6_true.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/locks/test_locks_7_true.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<include>../programs/benchmarks/locks/test_locks_7_true.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/bitvector/s3_clnt_1_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<include>../programs/benchmarks/bitvector/s3_clnt_1_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/bitvector/s3_clnt_2_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<include>../programs/benchmarks/bitvector/s3_clnt_2_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/bitvector/s3_clnt_3_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<include>../programs/benchmarks/bitvector/s3_clnt_3_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/bitvector/s3_srvr_1_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<include>../programs/benchmarks/bitvector/s3_srvr_1_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/bitvector/s3_srvr_2_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<include>../programs/benchmarks/bitvector/s3_srvr_2_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/bitvector/s3_srvr_3_true.BV.c.cil.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<include>../programs/benchmarks/bitvector/s3_srvr_3_true.BV.c.cil.c</include>
</tasks>
</rundefinition>

<rundefinition name="StructureTest">
	<option name="-reachingdef-value"/>
	<option name="-setprop">cpa.value.merge=JOIN</option>
	<option name="-setprop">analysis.traversal.order=BFS</option>
		<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/locks/test_locks_5_true.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<include>../programs/benchmarks/locks/test_locks_5_true.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/nestedLocks/test_locks_while_seq_5_safe.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<include>../programs/nestedLocks/test_locks_while_seq_5_safe.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/nestedLocks/test_locks_while_mix_5_safe.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<include>../programs/nestedLocks/test_locks_while_mix_5_safe.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/nestedLocks/test_locks_while_nest_5_safe.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<include>../programs/nestedLocks/test_locks_while_nest_5_safe.c</include>
</tasks>
</rundefinition>

<rundefinition name="ReachDefDFCompare">
	<option name="-reachingdefinition"/>
	<option name="-setprop">analysis.traversal.order=BFS</option>
		<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/locks/test_locks_5_true.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<include>../programs/benchmarks/locks/test_locks_5_true.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/locks/test_locks_6_true.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<include>../programs/benchmarks/locks/test_locks_6_true.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/locks/test_locks_7_true.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<include>../programs/benchmarks/locks/test_locks_7_true.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/locks/test_locks_8_true.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<include>../programs/benchmarks/locks/test_locks_8_true.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/locks/test_locks_9_true.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<include>../programs/benchmarks/locks/test_locks_9_true.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/locks/test_locks_10_true.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<include>../programs/benchmarks/locks/test_locks_10_true.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/locks/test_locks_11_true.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<include>../programs/benchmarks/locks/test_locks_11_true.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/locks/test_locks_12_true.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<include>../programs/benchmarks/locks/test_locks_12_true.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/locks/test_locks_13_true.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<include>../programs/benchmarks/locks/test_locks_13_true.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/locks/test_locks_14_true.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<include>../programs/benchmarks/locks/test_locks_14_true.c</include>
</tasks>
<tasks>
<option name="-setprop">pcc.proofgen.doPCC = true</option>
<include>../programs/benchmarks/locks/test_locks_15_true.c</include>
</tasks>
<tasks>
<option name="-setprop">analysis.algorithm.proofCheck = true</option>
<include>../programs/benchmarks/locks/test_locks_15_true.c</include>
</tasks>
</rundefinition>-->

<columns>
<column title="Total time">Total time for CPAchecker</column>
<column title="Set up time">Time for analysis setup</column>
<column title="Read time">Time for reading in proof</column>
<column title="Sort time">Time for preparing proof for checking</column>
<column title="All time">Total time for proof check algorithm</column>
<column title="Analysis time">Time for Analysis</column>
<column title="Transfer time">Time for abstract successor checks</column>
<column title="Stop time">Time for covering checks</column>
<column title="Property time">Time for checking property</column>
<column title="#Elems">Number of iterations</column>
</columns>
</benchmark>
