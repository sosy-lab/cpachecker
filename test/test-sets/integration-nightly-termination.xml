<?xml version="1.0"?>

<!--
This file is part of CPAchecker,
a tool for configurable software verification:
https://cpachecker.sosy-lab.org

SPDX-FileCopyrightText: 2007-2020 Dirk Beyer <https://www.sosy-lab.org>

SPDX-License-Identifier: Apache-2.0
-->

<!DOCTYPE benchmark PUBLIC "+//IDN sosy-lab.org//DTD BenchExec benchmark 1.9//EN" "https://www.sosy-lab.org/benchexec/benchmark-1.9.dtd">
<benchmark tool="cpachecker" timelimit="900 s" hardtimelimit="1000 s" memlimit="15 GB" cpuCores="2">

  <option name="--no-output-files"/>
  <option name="--heap">13000M</option>

  <rundefinition>
    <option name="--lassoRankerAnalysis"/>
  </rundefinition>

  <!-- SV-Comp files assume that malloc always succeeds -->
  <option name="--option">cpa.predicate.memoryAllocationsAlwaysSucceed=true</option>

  <!--
    We collect error- and proof-witness files for further steps in our BuildBot.
    Currently we expect the following compressed witness files from a complete benchmark set:
    - induction:    170M
    - predicate:    600M
    - value:        600M
    - smg:           10M
    - termination:  170M
    - sv-comp18/19: 230M
    CPAchecker can compress and handle compressed witnesses automatically.
    Please disable compression for real SVComp benchmarks!
  -->
  <resultfiles>**.graphml*</resultfiles>
  <option name="--option">cpa.arg.compressWitness=true</option>
  <option name="--option">counterexample.export.compressWitness=true</option>
  <option name="--option">counterexample.export.graphml=witness.graphml</option>
  <option name="--option">cpa.arg.proofWitness=witness.graphml</option>
  <option name="--option">termination.violation.witness=witness.graphml</option>

  <tasks name="Termination-BitVectors">
    <includesfile>../programs/benchmarks/BitVectors-Termination.set</includesfile>
    <propertyfile>../programs/benchmarks/properties/termination.prp</propertyfile>
  </tasks>
  <tasks name="Termination-MainControlFlow">
    <includesfile>../programs/benchmarks/ControlFlow-Termination.set</includesfile>
    <propertyfile>../programs/benchmarks/properties/termination.prp</propertyfile>
  </tasks>
  <tasks name="Termination-MainHeap">
    <includesfile>../programs/benchmarks/Heap-Termination.set</includesfile>
    <propertyfile>../programs/benchmarks/properties/termination.prp</propertyfile>
  </tasks>
  <tasks name="Termination-Other">
    <includesfile>../programs/benchmarks/Arrays.set</includesfile>
    <includesfile>../programs/benchmarks/BitVectors.set</includesfile>
    <includesfile>../programs/benchmarks/ControlFlow.set</includesfile>
    <includesfile>../programs/benchmarks/ECA.set</includesfile>
    <includesfile>../programs/benchmarks/Floats.set</includesfile>
    <includesfile>../programs/benchmarks/Heap.set</includesfile>
    <includesfile>../programs/benchmarks/Loops.set</includesfile>
    <includesfile>../programs/benchmarks/ProductLines.set</includesfile>
    <includesfile>../programs/benchmarks/Recursive.set</includesfile>
    <includesfile>../programs/benchmarks/Sequentialized.set</includesfile>
    <includesfile>../programs/benchmarks/SoftwareSystems-uthash.set</includesfile>
    <propertyfile>../programs/benchmarks/properties/termination.prp</propertyfile>
  </tasks>
  <tasks name="SoftwareSystems-DeviceDriversLinux64-Termination">
    <includesfile>../programs/benchmarks/SoftwareSystems-DeviceDriversLinux64.set</includesfile>
    <propertyfile>../programs/benchmarks/properties/termination.prp</propertyfile>
  </tasks>
</benchmark>
