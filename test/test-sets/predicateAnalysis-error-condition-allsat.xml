<?xml version="1.0"?>

<!-- This file is part of CPAchecker, -->
<!-- a tool for configurable software verification: -->
<!-- https://cpachecker.sosy-lab.org -->
<!-- -->
<!-- SPDX-FileCopyrightText: 2025 Dirk Beyer <https://www.sosy-lab.org> -->
<!-- -->
<!-- SPDX-License-Identifier: Apache-2.0 -->

<!DOCTYPE benchmark PUBLIC "+//IDN sosy-lab.org//DTD BenchExec benchmark 2.3//EN" "http://www.sosy-lab.org/benchexec/benchmark-2.3.dtd">
<benchmark tool="cpachecker" timelimit="900 s" hardtimelimit="1000 s" memlimit="7 GB" cpuCores="2">
    <require cpuModel="Intel Core i7-6700 @ 3.40 GHz" />
    <option name="--benchmark"/>
    <option name="--heap" />
    <option name="10000M" />
    <option name="--timelimit" />
    <option name="1800 s" />

    <!-- SV-Comp files assume that malloc always succeeds -->
    <option name="--option">cpa.predicate.memoryAllocationsAlwaysSucceed=true</option>
    <option name="--predicateAnalysis"/>
    <option name="--option">analysis.algorithm.findErrorCondition=true</option>
    <option name="--option">findErrorCondition.refiners=ALLSAT</option>
    <option name="--option">findErrorCondition.withFormatter=false</option>

    <rundefinition name="ErrorCondition">
        <tasks name="ReachSafety-BitVectors">
            <includesfile>../programs/benchmarks/BitVectors.set</includesfile>
            <propertyfile expected_verdict="false">../programs/benchmarks/properties/unreach-call.prp</propertyfile>
            <!-- SV-Comp files assume that malloc always succeeds -->
            <option name="--option">cpa.predicate.memoryAllocationsAlwaysSucceed=true</option>
        </tasks>
        <tasks name="ReachSafety-ControlFlow">
            <includesfile>../programs/benchmarks/ControlFlow.set</includesfile>
            <propertyfile expected_verdict="false">../programs/benchmarks/properties/unreach-call.prp</propertyfile>
            <!-- SV-Comp files assume that malloc always succeeds -->
            <option name="--option">cpa.predicate.memoryAllocationsAlwaysSucceed=true</option>
        </tasks>
        <tasks name="ReachSafety-ECA">
            <includesfile>../programs/benchmarks/ECA.set</includesfile>
            <propertyfile expected_verdict="false">../programs/benchmarks/properties/unreach-call.prp</propertyfile>
            <!-- SV-Comp files assume that malloc always succeeds -->
            <option name="--option">cpa.predicate.memoryAllocationsAlwaysSucceed=true</option>
        </tasks>
        <tasks name="ReachSafety-Floats">
            <includesfile>../programs/benchmarks/Floats.set</includesfile>
            <propertyfile expected_verdict="false">../programs/benchmarks/properties/unreach-call.prp</propertyfile>
            <!-- SV-Comp files assume that malloc always succeeds -->
            <option name="--option">cpa.predicate.memoryAllocationsAlwaysSucceed=true</option>
        </tasks>
        <tasks name="ReachSafety-Heap">
            <includesfile>../programs/benchmarks/Heap.set</includesfile>
            <includesfile>../programs/benchmarks/LinkedLists.set</includesfile>
            <propertyfile expected_verdict="false">../programs/benchmarks/properties/unreach-call.prp</propertyfile>
            <!-- SV-Comp files assume that malloc always succeeds -->
            <option name="--option">cpa.predicate.memoryAllocationsAlwaysSucceed=true</option>
        </tasks>
        <tasks name="ReachSafety-Loops">
            <includesfile>../programs/benchmarks/Loops.set</includesfile>
            <includesfile>../programs/benchmarks/VerifyThis-Loops.set</includesfile>
            <propertyfile expected_verdict="false">../programs/benchmarks/properties/unreach-call.prp</propertyfile>
            <!-- SV-Comp files assume that malloc always succeeds -->
            <option name="--option">cpa.predicate.memoryAllocationsAlwaysSucceed=true</option>
        </tasks>
        <tasks name="ReachSafety-ProductLines">
            <includesfile>../programs/benchmarks/ProductLines.set</includesfile>
            <propertyfile expected_verdict="false">../programs/benchmarks/properties/unreach-call.prp</propertyfile>
            <!-- SV-Comp files assume that malloc always succeeds -->
            <option name="--option">cpa.predicate.memoryAllocationsAlwaysSucceed=true</option>
        </tasks>
        <tasks name="ReachSafety-Sequentialized">
            <includesfile>../programs/benchmarks/Sequentialized.set</includesfile>
            <propertyfile expected_verdict="false">../programs/benchmarks/properties/unreach-call.prp</propertyfile>
            <!-- SV-Comp files assume that malloc always succeeds -->
            <option name="--option">cpa.predicate.memoryAllocationsAlwaysSucceed=true</option>
        </tasks>
        <tasks name="ReachSafety-XCSP">
            <includesfile>../programs/benchmarks/XCSP.set</includesfile>
            <propertyfile expected_verdict="false">../programs/benchmarks/properties/unreach-call.prp</propertyfile>
            <!-- SV-Comp files assume that malloc always succeeds -->
            <option name="--option">cpa.predicate.memoryAllocationsAlwaysSucceed=true</option>
        </tasks>
        <tasks name="ReachSafety-Combinations">
            <includesfile>../programs/benchmarks/Combinations.set</includesfile>
            <propertyfile expected_verdict="false">../programs/benchmarks/properties/unreach-call.prp</propertyfile>
            <!-- SV-Comp files assume that malloc always succeeds -->
            <option name="--option">cpa.predicate.memoryAllocationsAlwaysSucceed=true</option>
        </tasks>
        <tasks name="ReachSafety-Hardware">
            <includesfile>../programs/benchmarks/Hardware.set</includesfile>
            <propertyfile expected_verdict="false">../programs/benchmarks/properties/unreach-call.prp</propertyfile>
            <!-- SV-Comp files assume that malloc always succeeds -->
            <option name="--option">cpa.predicate.memoryAllocationsAlwaysSucceed=true</option>
        </tasks>

        <tasks name="SoftwareSystems-AWS-C-Common-ReachSafety">
            <includesfile>../programs/benchmarks/SoftwareSystems-AWS-C-Common.set</includesfile>
            <propertyfile expected_verdict="false">../programs/benchmarks/properties/unreach-call.prp</propertyfile>
            <!-- SV-Comp files assume that malloc always succeeds -->
            <option name="--option">cpa.predicate.memoryAllocationsAlwaysSucceed=true</option>
        </tasks>
        <tasks name="SoftwareSystems-BusyBox-ReachSafety">
            <includesfile>../programs/benchmarks/SoftwareSystems-BusyBox.set</includesfile>
            <propertyfile expected_verdict="false">../programs/benchmarks/properties/unreach-call.prp</propertyfile>
            <!-- SV-Comp files assume that malloc always succeeds -->
            <option name="--option">cpa.predicate.memoryAllocationsAlwaysSucceed=true</option>
        </tasks>
        <tasks name="SoftwareSystems-coreutils-ReachSafety">
            <includesfile>../programs/benchmarks/SoftwareSystems-coreutils.set</includesfile>
            <propertyfile expected_verdict="false">../programs/benchmarks/properties/unreach-call.prp</propertyfile>
            <!-- SV-Comp files assume that malloc always succeeds -->
            <option name="--option">cpa.predicate.memoryAllocationsAlwaysSucceed=true</option>
        </tasks>
        <tasks name="SoftwareSystems-DeviceDriversLinux64-ReachSafety">
            <includesfile>../programs/benchmarks/SoftwareSystems-DeviceDriversLinux64.set</includesfile>
            <propertyfile expected_verdict="false">../programs/benchmarks/properties/unreach-call.prp</propertyfile>
            <!-- SV-Comp files assume that malloc always succeeds -->
            <option name="--option">cpa.predicate.memoryAllocationsAlwaysSucceed=true</option>
        </tasks>
        <tasks name="SoftwareSystems-uthash-ReachSafety">
            <includesfile>../programs/benchmarks/SoftwareSystems-uthash.set</includesfile>
            <propertyfile expected_verdict="false">../programs/benchmarks/properties/unreach-call.prp</propertyfile>
            <!-- SV-Comp files assume that malloc always succeeds -->
            <option name="--option">cpa.predicate.memoryAllocationsAlwaysSucceed=true</option>
        </tasks>

    </rundefinition>
</benchmark>
