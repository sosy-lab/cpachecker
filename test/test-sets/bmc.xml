<?xml version="1.0"?>

<!--
This file is part of CPAchecker,
a tool for configurable software verification:
https://cpachecker.sosy-lab.org

SPDX-FileCopyrightText: 2007-2020 Dirk Beyer <https://www.sosy-lab.org>

SPDX-License-Identifier: Apache-2.0
-->

<!DOCTYPE benchmark PUBLIC "+//IDN sosy-lab.org//DTD BenchExec benchmark 1.0//EN" "http://www.sosy-lab.org/benchexec/benchmark-1.0.dtd">
<benchmark tool="cpachecker" timelimit="900 s" hardtimelimit="1000 s" memlimit="15 GB" cpuCores="2">
  <option name="--heap">13000M</option>
  <option name="--stack" reason="CVC4 needs a larger stack">50M</option>
  <option name="--no-output-files"/>
  <option name="--benchmark"/>
  <option name="--bmc"/>
  <option name="--option">cpa.predicate.useArraysForHeap=false</option>

  <!-- SV-Comp files assume that malloc always succeeds -->
  <option name="--option">cpa.predicate.memoryAllocationsAlwaysSucceed=true</option>

  <tasks name="ReachSafety-Arrays">
    <includesfile>../programs/benchmarks/Arrays.set</includesfile>
    <propertyfile>../programs/benchmarks/properties/unreach-call.prp</propertyfile>
  </tasks>
  <tasks name="ReachSafety-BitVectors">
    <includesfile>../programs/benchmarks/BitVectors.set</includesfile>
    <propertyfile>../programs/benchmarks/properties/unreach-call.prp</propertyfile>
  </tasks>
  <tasks name="ReachSafety-ControlFlow">
    <includesfile>../programs/benchmarks/ControlFlow.set</includesfile>
    <propertyfile>../programs/benchmarks/properties/unreach-call.prp</propertyfile>
  </tasks>
  <tasks name="ReachSafety-ECA">
    <includesfile>../programs/benchmarks/ECA.set</includesfile>
    <propertyfile>../programs/benchmarks/properties/unreach-call.prp</propertyfile>
  </tasks>
  <tasks name="ReachSafety-Floats">
    <includesfile>../programs/benchmarks/Floats.set</includesfile>
    <propertyfile>../programs/benchmarks/properties/unreach-call.prp</propertyfile>
  </tasks>
  <tasks name="ReachSafety-Heap">
    <includesfile>../programs/benchmarks/Heap.set</includesfile>
    <includesfile>../programs/benchmarks/LinkedLists.set</includesfile>
    <propertyfile>../programs/benchmarks/properties/unreach-call.prp</propertyfile>
  </tasks>
  <tasks name="ReachSafety-Loops">
    <includesfile>../programs/benchmarks/Loops.set</includesfile>
    <includesfile>../programs/benchmarks/VerifyThis-Loops.set</includesfile>
    <propertyfile>../programs/benchmarks/properties/unreach-call.prp</propertyfile>
  </tasks>
  <tasks name="ReachSafety-ProductLines">
    <includesfile>../programs/benchmarks/ProductLines.set</includesfile>
    <propertyfile>../programs/benchmarks/properties/unreach-call.prp</propertyfile>
  </tasks>
  <tasks name="ReachSafety-Recursive">
    <includesfile>../programs/benchmarks/Recursive.set</includesfile>
    <includesfile>../programs/benchmarks/VerifyThis-Recursive.set</includesfile>
    <propertyfile>../programs/benchmarks/properties/unreach-call.prp</propertyfile>
  </tasks>
  <tasks name="ReachSafety-Sequentialized">
    <includesfile>../programs/benchmarks/Sequentialized.set</includesfile>
    <propertyfile>../programs/benchmarks/properties/unreach-call.prp</propertyfile>
  </tasks>
  <tasks name="ReachSafety-XCSP">
    <includesfile>../programs/benchmarks/XCSP.set</includesfile>
    <propertyfile>../programs/benchmarks/properties/unreach-call.prp</propertyfile>
  </tasks>
  <tasks name="ReachSafety-Combinations">
    <includesfile>../programs/benchmarks/Combinations.set</includesfile>
    <propertyfile>../programs/benchmarks/properties/unreach-call.prp</propertyfile>
  </tasks>
  <tasks name="ReachSafety-Hardware">
    <includesfile>../programs/benchmarks/Hardware.set</includesfile>
    <propertyfile>../programs/benchmarks/properties/unreach-call.prp</propertyfile>
  </tasks>
  <tasks name="ReachSafety-Hardness">
    <includesfile>../programs/benchmarks/Hardness.set</includesfile>
    <propertyfile>../programs/benchmarks/properties/unreach-call.prp</propertyfile>
  </tasks>
  <tasks name="ReachSafety-Fuzzle">
    <includesfile>../programs/benchmarks/Fuzzle.set</includesfile>
    <propertyfile>../programs/benchmarks/properties/unreach-call.prp</propertyfile>
  </tasks>
  <tasks name="SoftwareSystems-AWS-C-Common-ReachSafety">
    <includesfile>../programs/benchmarks/SoftwareSystems-AWS-C-Common.set</includesfile>
    <propertyfile>../programs/benchmarks/properties/unreach-call.prp</propertyfile>
  </tasks>
  <tasks name="SoftwareSystems-DeviceDriversLinux64-ReachSafety">
    <includesfile>../programs/benchmarks/SoftwareSystems-DeviceDriversLinux64.set</includesfile>
    <excludesfile>../programs/benchmarks/SoftwareSystems-DeviceDriversLinux64Large.set</excludesfile>
    <propertyfile>../programs/benchmarks/properties/unreach-call.prp</propertyfile>
  </tasks>
  <tasks name="SoftwareSystems-DeviceDriversLinux64Large-ReachSafety">
    <includesfile>../programs/benchmarks/SoftwareSystems-DeviceDriversLinux64Large.set</includesfile>
    <propertyfile>../programs/benchmarks/properties/unreach-call.prp</propertyfile>
  </tasks>
  <tasks name="SoftwareSystems-Other-ReachSafety">
    <includesfile>../programs/benchmarks/SoftwareSystems-coreutils.set</includesfile>
    <includesfile>../programs/benchmarks/SoftwareSystems-BusyBox.set</includesfile>
    <includesfile>../programs/benchmarks/SoftwareSystems-OpenBSD.set</includesfile>
    <propertyfile>../programs/benchmarks/properties/unreach-call.prp</propertyfile>
  </tasks>
  <tasks name="SoftwareSystems-uthash-ReachSafety">
    <includesfile>../programs/benchmarks/SoftwareSystems-uthash.set</includesfile>
    <propertyfile>../programs/benchmarks/properties/unreach-call.prp</propertyfile>
  </tasks>
  <tasks name="SoftwareSystems-Intel-TDX-Module-ReachSafety">
    <includesfile>../programs/benchmarks/SoftwareSystems-Intel-TDX-Module.set</includesfile>
    <propertyfile>../programs/benchmarks/properties/unreach-call.prp</propertyfile>
  </tasks>

  <rundefinition name="k1-mathsat5">
    <option name="--option">cpa.loopbound.maxLoopIterations=1</option>
    <option name="--option">solver.solver=mathsat5</option>
  </rundefinition>
  <rundefinition name="k10-mathsat5">
    <option name="--option">cpa.loopbound.maxLoopIterations=10</option>
    <option name="--option">solver.solver=mathsat5</option>
  </rundefinition>

  <rundefinition name="k1-z3">
    <option name="--option">cpa.loopbound.maxLoopIterations=1</option>
    <option name="--option">solver.solver=z3</option>
  </rundefinition>
  <rundefinition name="k10-z3">
    <option name="--option">cpa.loopbound.maxLoopIterations=10</option>
    <option name="--option">solver.solver=z3</option>
  </rundefinition>

  <rundefinition name="k1-cvc4">
    <option name="--option">cpa.loopbound.maxLoopIterations=1</option>
    <option name="--option">solver.solver=cvc4</option>
  </rundefinition>
  <rundefinition name="k10-cvc4">
    <option name="--option">cpa.loopbound.maxLoopIterations=10</option>
    <option name="--option">solver.solver=cvc4</option>
  </rundefinition>

  <rundefinition name="k1-cvc5">
    <option name="--option">cpa.loopbound.maxLoopIterations=1</option>
    <option name="--option">solver.solver=cvc5</option>
  </rundefinition>
  <rundefinition name="k10-cvc5">
    <option name="--option">cpa.loopbound.maxLoopIterations=10</option>
    <option name="--option">solver.solver=cvc5</option>
  </rundefinition>

  <rundefinition name="k1-smtinterpol">
    <option name="--option">cpa.loopbound.maxLoopIterations=1</option>
    <option name="--option">cpa.predicate.encodeFloatAs=INTEGER</option>
    <option name="--option">cpa.predicate.encodeBitvectorAs=INTEGER</option>
    <option name="--option">solver.solver=smtinterpol</option>
  </rundefinition>
  <rundefinition name="k10-smtinterpol">
    <option name="--option">cpa.loopbound.maxLoopIterations=10</option>
    <option name="--option">cpa.predicate.encodeFloatAs=INTEGER</option>
    <option name="--option">cpa.predicate.encodeBitvectorAs=INTEGER</option>
    <option name="--option">solver.solver=smtinterpol</option>
  </rundefinition>

  <rundefinition name="k1-princess">
    <option name="--option">cpa.loopbound.maxLoopIterations=1</option>
    <option name="--option">cpa.predicate.encodeFloatAs=INTEGER</option>
    <option name="--option">cpa.predicate.encodeBitvectorAs=INTEGER</option>
    <option name="--option">solver.solver=princess</option>
  </rundefinition>
  <rundefinition name="k10-princess">
    <option name="--option">cpa.loopbound.maxLoopIterations=10</option>
    <option name="--option">cpa.predicate.encodeFloatAs=INTEGER</option>
    <option name="--option">cpa.predicate.encodeBitvectorAs=INTEGER</option>
    <option name="--option">solver.solver=princess</option>
  </rundefinition>

    <rundefinition name="k1-opensmt2">
    <option name="--option">cpa.loopbound.maxLoopIterations=1</option>
    <option name="--option">cpa.predicate.encodeFloatAs=INTEGER</option>
    <option name="--option">cpa.predicate.encodeBitvectorAs=INTEGER</option>
    <option name="--option">solver.solver=opensmt</option>
  </rundefinition>
  <rundefinition name="k10-opensmt2">
    <option name="--option">cpa.loopbound.maxLoopIterations=10</option>
    <option name="--option">cpa.predicate.encodeFloatAs=INTEGER</option>
    <option name="--option">cpa.predicate.encodeBitvectorAs=INTEGER</option>
    <option name="--option">solver.solver=opensmt</option>
  </rundefinition>

  <rundefinition name="k1-boolector">
    <option name="--option">cpa.loopbound.maxLoopIterations=1</option>
    <option name="--option">cpa.predicate.encodeFloatAs=UNSUPPORTED</option>
    <option name="--option">cpa.predicate.encodeIntegerAs=BITVECTOR</option>
    <option name="--option">cpa.predicate.handlePointerAliasing=false</option>
    <option name="--option">counterexample.export.allowImpreciseCounterexamples=true</option>
    <option name="--option">solver.solver=boolector</option>
  </rundefinition>
  <rundefinition name="k10-boolector">
    <option name="--option">cpa.loopbound.maxLoopIterations=10</option>
    <option name="--option">cpa.predicate.encodeFloatAs=UNSUPPORTED</option>
    <option name="--option">cpa.predicate.encodeIntegerAs=BITVECTOR</option>
    <option name="--option">cpa.predicate.handlePointerAliasing=false</option>
    <option name="--option">counterexample.export.allowImpreciseCounterexamples=true</option>
    <option name="--option">solver.solver=boolector</option>
  </rundefinition>

    <rundefinition name="k1-bitwuzla">
    <option name="--option">cpa.loopbound.maxLoopIterations=1</option>
    <option name="--option">cpa.predicate.encodeIntegerAs=BITVECTOR</option>
    <option name="--option">solver.solver=bitwuzla</option>
  </rundefinition>
  <rundefinition name="k10-bitwuzla">
    <option name="--option">cpa.loopbound.maxLoopIterations=10</option>
    <option name="--option">cpa.predicate.encodeIntegerAs=BITVECTOR</option>
    <option name="--option">solver.solver=bitwuzla</option>
  </rundefinition>

  <!-- To install Yices2, please edit `lib/ivy.xml` and include the GPL-licenced parts of JavaSMT. -->
  <rundefinition name="k1-yices2">
    <option name="--option">cpa.loopbound.maxLoopIterations=1</option>
    <option name="--option">cpa.predicate.encodeFloatAs=RATIONAL</option>
    <option name="--option">solver.solver=yices2</option>
  </rundefinition>
  <rundefinition name="k10-yices2">
    <option name="--option">cpa.loopbound.maxLoopIterations=10</option>
    <option name="--option">cpa.predicate.encodeFloatAs=RATIONAL</option>
    <option name="--option">solver.solver=yices2</option>
  </rundefinition>

  <columns>
    <column title="total">time for CPAchecker</column>
    <column title="reached">Size of reached set</column>
    <column title="targets">Number of target states</column>
    <column title="sat check time">Time for final sat check</column>
    <column title="assertions check time">Time for bounding assertions check</column>
  </columns>
</benchmark>
