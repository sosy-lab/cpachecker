<?xml version="1.0"?>

<!--
This file is part of CPAchecker,
a tool for configurable software verification:
https://cpachecker.sosy-lab.org

SPDX-FileCopyrightText: 2007-2020 Dirk Beyer <https://www.sosy-lab.org>

SPDX-License-Identifier: Apache-2.0
-->

<!DOCTYPE benchmark PUBLIC "+//IDN sosy-lab.org//DTD BenchExec benchmark 1.0//EN" "http://www.sosy-lab.org/benchexec/benchmark-1.0.dtd">
<benchmark tool="cpachecker" timelimit="900 s" hardtimelimit="1000 s" memlimit="15 GB" cpuCores="2">

  <option name="-noout"/>
  <option name="-disable-java-assertions"/>
  <option name="-setprop">statistics.memory=true</option>
  <option name="-heap">10000M</option>
  <option name="-stack">512000k</option>
  <option name="-setprop">specification=config/specification/sv-comp-reachability.spc</option>

<rundefinition name="Verification">
		
    <tasks>
	<option name="-combinations-valueCegar60+pred-cmc"/>
	<option name="-setprop">restartAlgorithm.combineARGsAfterRestart=true</option>
	<option name="-setprop">pcc.proofgen.doPCC=false</option>
	<option name="-setprop">assumptions.automatonIgnoreAssumptions=true</option>
	<option name="-setprop">cpa.composite.aggregateBasicBlocks=false</option>
    <option name="-setprop">solver.solver=MATHSAT5</option>
<include>../programs/benchmarks/loop-new/nested-1.yml</include>
<include>../programs/benchmarks/loops/matrix-1.yml</include>
<include>../programs/benchmarks/seq-mthreaded/pals_floodmax.3.ufo.UNBOUNDED.pals.yml</include>
<include>../programs/benchmarks/seq-mthreaded/pals_lcr-var-start-time.3.ufo.UNBOUNDED.pals.yml</include>
<include>../programs/CMC+PCC/bonus.c</include>
</tasks>

<tasks>
	<option name="-combinations-valueCegar60+pred-cmc"/>
	<option name="-setprop">restartAlgorithm.combineARGsAfterRestart=true</option>
	<option name="-setprop">pcc.proofgen.doPCC=false</option>
    <option name="-setprop">assumptions.automatonIgnoreAssumptions=true</option>
    <option name="-setprop">cpa.composite.aggregateBasicBlocks=false</option>
    <option name="-setprop">solver.solver=MATHSAT5</option>
    <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
<include>../programs/benchmarks/loops/matrix-1.yml</include>
<include>../programs/CMC+PCC/bonus.c</include>
</tasks>
	
<tasks>
	<option name="-combinations-value10+pred-cmc"/>
	<option name="-setprop">restartAlgorithm.combineARGsAfterRestart=true</option>
	<option name="-setprop">pcc.proofgen.doPCC=false</option>
    <option name="-setprop">assumptions.automatonIgnoreAssumptions=true</option>
    <option name="-setprop">solver.solver=MATHSAT5</option>
<include>../programs/benchmarks/float-benchs/filter2_iterated.yml</include>
<include>../programs/benchmarks/floats-esbmc-regression/fabs.yml</include>
<include>../programs/benchmarks/loop-new/nested-1.yml</include>
<include>../programs/benchmarks/seq-mthreaded/pals_STARTPALS_Triplicated.ufo.UNBOUNDED.pals.yml</include>
<include>../programs/benchmarks/seq-mthreaded/pals_lcr-var-start-time.3.ufo.BOUNDED-6.pals.yml</include>
<include>../programs/CMC+PCC/bonus.c</include>
</tasks>

 <tasks>
	<option name="-combinations-value10+pred-cmc"/>
	<option name="-setprop">restartAlgorithm.combineARGsAfterRestart=true</option>
	<option name="-setprop">pcc.proofgen.doPCC=false</option>
    <option name="-setprop">assumptions.automatonIgnoreAssumptions=true</option>
    <option name="-setprop">solver.solver=MATHSAT5</option>
    <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
<include>../programs/benchmarks/float-benchs/filter2.yml</include>
<include>../programs/benchmarks/floats-esbmc-regression/fabs.yml</include>
<include>../programs/benchmarks/loops/matrix-1.yml</include>
<include>../programs/CMC+PCC/bonus.c</include>
</tasks>
    
<tasks>
	  <option name="-config">config/unmaintained/combinations-value10+apron-cmc.properties</option>
	  <option name="-setprop">cpa.composite.aggregateBasicBlocks=false</option>
	  <option name="-setprop">restartAlgorithm.combineARGsAfterRestart=true</option>
	  <option name="-setprop">pcc.proofgen.doPCC=false</option>
<include>../programs/benchmarks/bitvector/soft_float_2.c.cil.yml</include>
<include>../programs/benchmarks/bitvector/soft_float_3.c.cil.yml</include>
<include>../programs/benchmarks/bitvector/soft_float_5.c.cil.yml</include>
<include>../programs/benchmarks/floats-cbmc-regression/float-rounding1.yml</include>
<include>../programs/benchmarks/floats-cbmc-regression/float21.yml</include>
      </tasks>
   
      <tasks>
	  <option name="-config">config/unmaintained/combinations-valueCegar60+apronCegar-cmc.properties</option>
	  <option name="-setprop">cpa.composite.aggregateBasicBlocks=false</option>
	  <option name="-setprop">restartAlgorithm.combineARGsAfterRestart=true</option>
	  <option name="-setprop">pcc.proofgen.doPCC=false</option>
<include>../programs/benchmarks/bitvector/soft_float_2.c.cil.yml</include>
<include>../programs/benchmarks/bitvector/soft_float_3.c.cil.yml</include>
<include>../programs/benchmarks/eca-rers2012/Problem16_label59.yml</include>
<include>../programs/benchmarks/floats-cbmc-regression/float-rounding1.yml</include>
<include>../programs/benchmarks/loop-lit/gr2006.yml</include>
<include>../programs/benchmarks/ntdrivers/floppy2.i.cil.yml</include>
<include>../programs/benchmarks/ntdrivers/floppy.i.cil-3.yml</include>
<include>../programs/benchmarks/ntdrivers/parport.i.cil-2.yml</include>
<include>../programs/benchmarks/systemc/toy.cil.yml</include>
      </tasks>

</rundefinition>

<rundefinition name="Verification Memory">
		
    <tasks>
	<option name="-combinations-valueCegar60+pred-cmc"/>
	<option name="-setprop">restartAlgorithm.combineARGsAfterRestart=false</option>
	<option name="-setprop">pcc.proofgen.doPCC=false</option>
	<option name="-setprop">assumptions.automatonIgnoreAssumptions=true</option>
	<option name="-setprop">cpa.composite.aggregateBasicBlocks=false</option>
    <option name="-setprop">solver.solver=MATHSAT5</option>
<include>../programs/benchmarks/loop-new/nested-1.yml</include>
<include>../programs/benchmarks/loops/matrix-1.yml</include>
<include>../programs/benchmarks/seq-mthreaded/pals_floodmax.3.ufo.UNBOUNDED.pals.yml</include>
<include>../programs/benchmarks/seq-mthreaded/pals_lcr-var-start-time.3.ufo.UNBOUNDED.pals.yml</include>
<include>../programs/CMC+PCC/bonus.c</include>
</tasks>

<tasks>
	<option name="-combinations-valueCegar60+pred-cmc"/>
	<option name="-setprop">restartAlgorithm.combineARGsAfterRestart=false</option>
	<option name="-setprop">pcc.proofgen.doPCC=false</option>
    <option name="-setprop">assumptions.automatonIgnoreAssumptions=true</option>
    <option name="-setprop">cpa.composite.aggregateBasicBlocks=false</option>
    <option name="-setprop">solver.solver=MATHSAT5</option>
    <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
<include>../programs/benchmarks/loops/matrix-1.yml</include>
<include>../programs/CMC+PCC/bonus.c</include>
</tasks>
	
<tasks>
	<option name="-combinations-value10+pred-cmc"/>
	<option name="-setprop">restartAlgorithm.combineARGsAfterRestart=false</option>
	<option name="-setprop">pcc.proofgen.doPCC=false</option>
    <option name="-setprop">assumptions.automatonIgnoreAssumptions=true</option>
    <option name="-setprop">solver.solver=MATHSAT5</option>
<include>../programs/benchmarks/float-benchs/filter2_iterated.yml</include>
<include>../programs/benchmarks/floats-esbmc-regression/fabs.yml</include>
<include>../programs/benchmarks/loop-new/nested-1.yml</include>
<include>../programs/benchmarks/seq-mthreaded/pals_STARTPALS_Triplicated.ufo.UNBOUNDED.pals.yml</include>
<include>../programs/benchmarks/seq-mthreaded/pals_lcr-var-start-time.3.ufo.BOUNDED-6.pals.yml</include>
<include>../programs/CMC+PCC/bonus.c</include>
</tasks>

 <tasks>
	<option name="-combinations-value10+pred-cmc"/>
	<option name="-setprop">restartAlgorithm.combineARGsAfterRestart=false</option>
	<option name="-setprop">pcc.proofgen.doPCC=false</option>
    <option name="-setprop">assumptions.automatonIgnoreAssumptions=true</option>
    <option name="-setprop">solver.solver=MATHSAT5</option>
    <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
<include>../programs/benchmarks/float-benchs/filter2.yml</include>
<include>../programs/benchmarks/floats-esbmc-regression/fabs.yml</include>
<include>../programs/benchmarks/loops/matrix-1.yml</include>
<include>../programs/CMC+PCC/bonus.c</include>
</tasks>
    
<tasks>
	  <option name="-config">config/unmaintained/combinations-value10+apron-cmc.properties</option>
	  <option name="-setprop">cpa.composite.aggregateBasicBlocks=false</option>
	  <option name="-setprop">restartAlgorithm.combineARGsAfterRestart=false</option>
	  <option name="-setprop">pcc.proofgen.doPCC=false</option>
<include>../programs/benchmarks/bitvector/soft_float_2.c.cil.yml</include>
<include>../programs/benchmarks/bitvector/soft_float_3.c.cil.yml</include>
<include>../programs/benchmarks/bitvector/soft_float_5.c.cil.yml</include>
<include>../programs/benchmarks/floats-cbmc-regression/float-rounding1.yml</include>
<include>../programs/benchmarks/floats-cbmc-regression/float21.yml</include>
      </tasks>
   
      <tasks>
	  <option name="-config">config/unmaintained/combinations-valueCegar60+apronCegar-cmc.properties</option>
	  <option name="-setprop">cpa.composite.aggregateBasicBlocks=false</option>
	  <option name="-setprop">restartAlgorithm.combineARGsAfterRestart=false</option>
	  <option name="-setprop">pcc.proofgen.doPCC=false</option>
<include>../programs/benchmarks/bitvector/soft_float_2.c.cil.yml</include>
<include>../programs/benchmarks/bitvector/soft_float_3.c.cil.yml</include>
<include>../programs/benchmarks/eca-rers2012/Problem16_label59.yml</include>
<include>../programs/benchmarks/floats-cbmc-regression/float-rounding1.yml</include>
<include>../programs/benchmarks/loop-lit/gr2006.yml</include>
<include>../programs/benchmarks/ntdrivers/floppy2.i.cil.yml</include>
<include>../programs/benchmarks/ntdrivers/floppy.i.cil-3.yml</include>
<include>../programs/benchmarks/ntdrivers/parport.i.cil-2.yml</include>
<include>../programs/benchmarks/systemc/toy.cil.yml</include>
      </tasks>

</rundefinition>

<rundefinition name="Proof Generation">

<!-- ARG -->		
    <tasks>
	<option name="-combinations-valueCegar60+pred-cmc"/>
	<option name="-setprop">restartAlgorithm.combineARGsAfterRestart=true</option>
	<option name="-setprop">pcc.proofgen.doPCC=true</option>
	<option name="-setprop">pcc.proofFile=ValuePredicateCMCItp_${taskdef_name}_arg.proof</option>
	<option name="-setprop">assumptions.automatonIgnoreAssumptions=true</option>
	<option name="-setprop">cpa.composite.aggregateBasicBlocks=false</option>
    <option name="-setprop">solver.solver=MATHSAT5</option>
    <option name="-setprop">pcc.strategy=arg.ARG_CPAStrategy</option>
<include>../programs/benchmarks/loop-new/nested-1.yml</include>
<include>../programs/benchmarks/loops/matrix-1.yml</include>
<include>../programs/benchmarks/seq-mthreaded/pals_floodmax.3.ufo.UNBOUNDED.pals.yml</include>
<include>../programs/benchmarks/seq-mthreaded/pals_lcr-var-start-time.3.ufo.UNBOUNDED.pals.yml</include>
<include>../programs/CMC+PCC/bonus.c</include>
</tasks>

<tasks>
	<option name="-combinations-valueCegar60+pred-cmc"/>
	<option name="-setprop">restartAlgorithm.combineARGsAfterRestart=true</option>
	<option name="-setprop">pcc.proofgen.doPCC=true</option>
	<option name="-setprop">pcc.proofFile=ValuePredicateCMCItp+_${taskdef_name}_arg.proof</option>
    <option name="-setprop">assumptions.automatonIgnoreAssumptions=true</option>
    <option name="-setprop">cpa.composite.aggregateBasicBlocks=false</option>
    <option name="-setprop">solver.solver=MATHSAT5</option>
    <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
    <option name="-setprop">pcc.strategy=arg.ARG_CPAStrategy</option>
<include>../programs/benchmarks/loops/matrix-1.yml</include>
<include>../programs/CMC+PCC/bonus.c</include>
</tasks>
	
<tasks>
	<option name="-combinations-value10+pred-cmc"/>
	<option name="-setprop">restartAlgorithm.combineARGsAfterRestart=true</option>
	<option name="-setprop">pcc.proofgen.doPCC=true</option>
	<option name="-setprop">pcc.proofFile=ValuePredicateCMC_${taskdef_name}_arg.proof</option>
    <option name="-setprop">assumptions.automatonIgnoreAssumptions=true</option>
    <option name="-setprop">solver.solver=MATHSAT5</option>
    <option name="-setprop">pcc.strategy=arg.ARG_CPAStrategy</option>
<include>../programs/benchmarks/float-benchs/filter2_iterated.yml</include>
<include>../programs/benchmarks/floats-esbmc-regression/fabs.yml</include>
<include>../programs/benchmarks/loop-new/nested-1.yml</include>
<include>../programs/benchmarks/seq-mthreaded/pals_STARTPALS_Triplicated.ufo.UNBOUNDED.pals.yml</include>
<include>../programs/benchmarks/seq-mthreaded/pals_lcr-var-start-time.3.ufo.BOUNDED-6.pals.yml</include>
<include>../programs/CMC+PCC/bonus.c</include>

</tasks>

 <tasks>
	<option name="-combinations-value10+pred-cmc"/>
	<option name="-setprop">restartAlgorithm.combineARGsAfterRestart=true</option>
	<option name="-setprop">pcc.proofgen.doPCC=true</option>
    <option name="-setprop">pcc.proofFile=ValuePredicateCMC+_${taskdef_name}_arg.proof</option>
    <option name="-setprop">assumptions.automatonIgnoreAssumptions=true</option>
    <option name="-setprop">solver.solver=MATHSAT5</option>
    <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
    <option name="-setprop">pcc.strategy=arg.ARG_CPAStrategy</option>
<include>../programs/benchmarks/float-benchs/filter2.yml</include>
<include>../programs/benchmarks/floats-esbmc-regression/fabs.yml</include>
<include>../programs/benchmarks/loops/matrix-1.yml</include>
<include>../programs/CMC+PCC/bonus.c</include>
</tasks>
    
<tasks>
	  <option name="-config">config/unmaintained/combinations-value10+apron-cmc.properties</option>
	  <option name="-setprop">cpa.composite.aggregateBasicBlocks=false</option>
	  <option name="-setprop">restartAlgorithm.combineARGsAfterRestart=true</option>
	  <option name="-setprop">pcc.proofgen.doPCC=true</option>
      <option name="-setprop">pcc.proofFile=ValueApronCMC_${taskdef_name}_arg.proof</option>
      <option name="-setprop">pcc.strategy=arg.ARG_CPAStrategy</option>
<include>../programs/benchmarks/bitvector/soft_float_2.c.cil.yml</include>
<include>../programs/benchmarks/bitvector/soft_float_3.c.cil.yml</include>
<include>../programs/benchmarks/bitvector/soft_float_5.c.cil.yml</include>
<include>../programs/benchmarks/floats-cbmc-regression/float-rounding1.yml</include>
<include>../programs/benchmarks/floats-cbmc-regression/float21.yml</include>
      </tasks>
   
      <tasks>
	  <option name="-config">config/unmaintained/combinations-valueCegar60+apronCegar-cmc.properties</option>
	  <option name="-setprop">cpa.composite.aggregateBasicBlocks=false</option>
	  <option name="-setprop">restartAlgorithm.combineARGsAfterRestart=true</option>
	  <option name="-setprop">pcc.proofgen.doPCC=true</option>
	  <option name="-setprop">pcc.strategy=arg.ARG_CPAStrategy</option>
      <option name="-setprop">pcc.proofFile=ValueApronCMCItp_${taskdef_name}_arg.proof</option>
<include>../programs/benchmarks/bitvector/soft_float_2.c.cil.yml</include>
<include>../programs/benchmarks/bitvector/soft_float_3.c.cil.yml</include>
<include>../programs/benchmarks/eca-rers2012/Problem16_label59.yml</include>
<include>../programs/benchmarks/floats-cbmc-regression/float-rounding1.yml</include>
<include>../programs/benchmarks/loop-lit/gr2006.yml</include>
<include>../programs/benchmarks/ntdrivers/floppy2.i.cil.yml</include>
<include>../programs/benchmarks/ntdrivers/floppy.i.cil-3.yml</include>
<include>../programs/benchmarks/ntdrivers/parport.i.cil-2.yml</include>
<include>../programs/benchmarks/systemc/toy.cil.yml</include>
      </tasks>


<!-- Reached set proof -->
    <tasks>
		<option name="-combinations-valueCegar60+pred-cmc"/>
	<option name="-setprop">restartAlgorithm.combineARGsAfterRestart=true</option>
	<option name="-setprop">pcc.proofgen.doPCC=true</option>
	<option name="-setprop">pcc.proofFile=ValuePredicateCMCItp_${taskdef_name}_reached.proof</option>
	<option name="-setprop">assumptions.automatonIgnoreAssumptions=true</option>
	<option name="-setprop">cpa.composite.aggregateBasicBlocks=false</option>
	<option name="-setprop">pcc.strategy=ReachedSetStrategy</option>
    <option name="-setprop">solver.solver=MATHSAT5</option>
<include>../programs/benchmarks/loop-new/nested-1.yml</include>
<include>../programs/benchmarks/loops/matrix-1.yml</include>
<include>../programs/benchmarks/seq-mthreaded/pals_floodmax.3.ufo.UNBOUNDED.pals.yml</include>
<include>../programs/benchmarks/seq-mthreaded/pals_lcr-var-start-time.3.ufo.UNBOUNDED.pals.yml</include>
<include>../programs/CMC+PCC/bonus.c</include>
</tasks>

    <tasks>
	<option name="-combinations-valueCegar60+pred-cmc"/>
	<option name="-setprop">restartAlgorithm.combineARGsAfterRestart=true</option>
	<option name="-setprop">pcc.proofgen.doPCC=true</option>
	<option name="-setprop">pcc.proofFile=ValuePredicateCMCItp+_${taskdef_name}_reached.proof</option>
    <option name="-setprop">assumptions.automatonIgnoreAssumptions=true</option>
    <option name="-setprop">cpa.composite.aggregateBasicBlocks=false</option>
	<option name="-setprop">pcc.strategy=ReachedSetStrategy</option>
    <option name="-setprop">solver.solver=MATHSAT5</option>
    <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
<include>../programs/benchmarks/loops/matrix-1.yml</include>
<include>../programs/CMC+PCC/bonus.c</include>
</tasks>

    <tasks>
		<option name="-combinations-value10+pred-cmc"/>
	<option name="-setprop">restartAlgorithm.combineARGsAfterRestart=true</option>
	<option name="-setprop">pcc.proofgen.doPCC=true</option>
	<option name="-setprop">pcc.proofFile=ValuePredicateCMC_${taskdef_name}_reached.proof</option>
    <option name="-setprop">assumptions.automatonIgnoreAssumptions=true</option>
	<option name="-setprop">pcc.strategy=ReachedSetStrategy</option>
    <option name="-setprop">solver.solver=MATHSAT5</option>
<include>../programs/benchmarks/float-benchs/filter2_iterated.yml</include>
<include>../programs/benchmarks/floats-esbmc-regression/fabs.yml</include>
<include>../programs/benchmarks/loop-new/nested-1.yml</include>
<include>../programs/benchmarks/seq-mthreaded/pals_STARTPALS_Triplicated.ufo.UNBOUNDED.pals.yml</include>
<include>../programs/benchmarks/seq-mthreaded/pals_lcr-var-start-time.3.ufo.BOUNDED-6.pals.yml</include>
<include>../programs/CMC+PCC/bonus.c</include>
</tasks>
	
    <tasks>
		<option name="-combinations-value10+pred-cmc"/>
	<option name="-setprop">restartAlgorithm.combineARGsAfterRestart=true</option>
	<option name="-setprop">pcc.proofgen.doPCC=true</option>
    <option name="-setprop">pcc.proofFile=ValuePredicateCMC+_${taskdef_name}_reached.proof</option>
    <option name="-setprop">assumptions.automatonIgnoreAssumptions=true</option>
	<option name="-setprop">pcc.strategy=ReachedSetStrategy</option>
    <option name="-setprop">solver.solver=MATHSAT5</option>
    <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
<include>../programs/benchmarks/float-benchs/filter2.yml</include>
<include>../programs/benchmarks/floats-esbmc-regression/fabs.yml</include>
<include>../programs/benchmarks/loops/matrix-1.yml</include>
<include>../programs/CMC+PCC/bonus.c</include>
</tasks>
    
      <tasks>
	  <option name="-setprop">pcc.strategy=ReachedSetStrategy</option>  
	  <option name="-config">config/unmaintained/combinations-value10+apron-cmc.properties</option>
	  <option name="-setprop">cpa.composite.aggregateBasicBlocks=false</option>
	  <option name="-setprop">restartAlgorithm.combineARGsAfterRestart=true</option>
	  <option name="-setprop">pcc.proofgen.doPCC=true</option>
      <option name="-setprop">pcc.proofFile=ValueApronCMC_${taskdef_name}_reached.proof</option>
<include>../programs/benchmarks/bitvector/soft_float_2.c.cil.yml</include>
<include>../programs/benchmarks/bitvector/soft_float_3.c.cil.yml</include>
<include>../programs/benchmarks/bitvector/soft_float_5.c.cil.yml</include>
<include>../programs/benchmarks/floats-cbmc-regression/float-rounding1.yml</include>
<include>../programs/benchmarks/floats-cbmc-regression/float21.yml</include>
      </tasks>
	  
      <tasks>
		  <option name="-config">config/unmaintained/combinations-valueCegar60+apronCegar-cmc.properties</option>
	  <option name="-setprop">cpa.composite.aggregateBasicBlocks=false</option>
	  <option name="-setprop">restartAlgorithm.combineARGsAfterRestart=true</option>
	  <option name="-setprop">pcc.proofgen.doPCC=true</option>
      <option name="-setprop">pcc.proofFile=ValueApronCMCItp_${taskdef_name}_reached.proof</option>
    <option name="-setprop">pcc.strategy=ReachedSetStrategy</option>
<include>../programs/benchmarks/bitvector/soft_float_2.c.cil.yml</include>
<include>../programs/benchmarks/bitvector/soft_float_3.c.cil.yml</include>
<include>../programs/benchmarks/eca-rers2012/Problem16_label59.yml</include>
<include>../programs/benchmarks/floats-cbmc-regression/float-rounding1.yml</include>
<include>../programs/benchmarks/loop-lit/gr2006.yml</include>
<include>../programs/benchmarks/ntdrivers/floppy2.i.cil.yml</include>
<include>../programs/benchmarks/ntdrivers/floppy.i.cil-3.yml</include>
<include>../programs/benchmarks/ntdrivers/parport.i.cil-2.yml</include>
<include>../programs/benchmarks/systemc/toy.cil.yml</include>
      </tasks>

<!-- partial reached set proof -->
 
     <tasks>
		<option name="-combinations-valueCegar60+pred-cmc"/>
	<option name="-setprop">restartAlgorithm.combineARGsAfterRestart=true</option>
	<option name="-setprop">pcc.proofgen.doPCC=true</option>
	<option name="-setprop">pcc.partial.certificateType=ARG</option>
	<option name="-setprop">pcc.proofFile=ValuePredicateCMCItp_${taskdef_name}_partial.proof</option>
	<option name="-setprop">assumptions.automatonIgnoreAssumptions=true</option>
	<option name="-setprop">cpa.composite.aggregateBasicBlocks=false</option>
	<option name="-setprop">pcc.strategy=PartialReachedSetStrategy</option>
    <option name="-setprop">solver.solver=MATHSAT5</option>
<include>../programs/benchmarks/loop-new/nested-1.yml</include>
<include>../programs/benchmarks/loops/matrix-1.yml</include>
<include>../programs/benchmarks/seq-mthreaded/pals_floodmax.3.ufo.UNBOUNDED.pals.yml</include>
<include>../programs/benchmarks/seq-mthreaded/pals_lcr-var-start-time.3.ufo.UNBOUNDED.pals.yml</include>
<include>../programs/CMC+PCC/bonus.c</include>
</tasks>
	
    <tasks>
		<option name="-combinations-valueCegar60+pred-cmc"/>
	<option name="-setprop">restartAlgorithm.combineARGsAfterRestart=true</option>
	<option name="-setprop">pcc.proofgen.doPCC=true</option>
	<option name="-setprop">pcc.proofFile=ValuePredicateCMCItp+_${taskdef_name}_partial.proof</option>
    <option name="-setprop">pcc.partial.certificateType=ARG</option>
    <option name="-setprop">assumptions.automatonIgnoreAssumptions=true</option>
    <option name="-setprop">cpa.composite.aggregateBasicBlocks=false</option>
	<option name="-setprop">pcc.strategy=PartialReachedSetStrategy</option>
    <option name="-setprop">solver.solver=MATHSAT5</option>
    <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
<include>../programs/benchmarks/loops/matrix-1.yml</include>
<include>../programs/CMC+PCC/bonus.c</include>
</tasks>

    <tasks>
		<option name="-combinations-value10+pred-cmc"/>
	<option name="-setprop">restartAlgorithm.combineARGsAfterRestart=true</option>
	<option name="-setprop">pcc.proofgen.doPCC=true</option>
	<option name="-setprop">pcc.proofFile=ValuePredicateCMC_${taskdef_name}_partial.proof</option>
    <option name="-setprop">pcc.partial.certificateType=ARG</option>
    <option name="-setprop">assumptions.automatonIgnoreAssumptions=true</option>
	<option name="-setprop">pcc.strategy=PartialReachedSetStrategy</option>
    <option name="-setprop">solver.solver=MATHSAT5</option>
<include>../programs/benchmarks/float-benchs/filter2_iterated.yml</include>
<include>../programs/benchmarks/floats-esbmc-regression/fabs.yml</include>
<include>../programs/benchmarks/loop-new/nested-1.yml</include>
<include>../programs/benchmarks/seq-mthreaded/pals_STARTPALS_Triplicated.ufo.UNBOUNDED.pals.yml</include>
<include>../programs/benchmarks/seq-mthreaded/pals_lcr-var-start-time.3.ufo.BOUNDED-6.pals.yml</include>
<include>../programs/CMC+PCC/bonus.c</include>
</tasks>

    <tasks>
		<option name="-combinations-value10+pred-cmc"/>
	<option name="-setprop">restartAlgorithm.combineARGsAfterRestart=true</option>
	<option name="-setprop">pcc.proofgen.doPCC=true</option>
	<option name="-setprop">pcc.partial.certificateType=ARG</option>
    <option name="-setprop">pcc.proofFile=ValuePredicateCMC+_${taskdef_name}_partial.proof</option>
    <option name="-setprop">assumptions.automatonIgnoreAssumptions=true</option>
	<option name="-setprop">pcc.strategy=PartialReachedSetStrategy</option>
    <option name="-setprop">solver.solver=MATHSAT5</option>
    <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
<include>../programs/benchmarks/float-benchs/filter2.yml</include>
<include>../programs/benchmarks/floats-esbmc-regression/fabs.yml</include>
<include>../programs/benchmarks/loops/matrix-1.yml</include>
<include>../programs/CMC+PCC/bonus.c</include>
</tasks>

    <tasks>
<option name="-config">config/unmaintained/combinations-value10+apron-cmc.properties</option>
	  <option name="-setprop">cpa.composite.aggregateBasicBlocks=false</option>
	  <option name="-setprop">restartAlgorithm.combineARGsAfterRestart=true</option>
	  <option name="-setprop">pcc.proofgen.doPCC=true</option>
	  <option name="-setprop">pcc.partial.certificateType=MONOTONESTOPARG</option>
      <option name="-setprop">pcc.proofFile=ValueApronCMC_${taskdef_name}_partial.proof</option>
    <option name="-setprop">pcc.strategy=PartialReachedSetStrategy</option>  
<include>../programs/benchmarks/bitvector/soft_float_2.c.cil.yml</include>
<include>../programs/benchmarks/bitvector/soft_float_3.c.cil.yml</include>
<include>../programs/benchmarks/bitvector/soft_float_5.c.cil.yml</include>
<include>../programs/benchmarks/floats-cbmc-regression/float-rounding1.yml</include>
<include>../programs/benchmarks/floats-cbmc-regression/float21.yml</include>
      </tasks>

      <tasks>
		  <option name="-config">config/unmaintained/combinations-valueCegar60+apronCegar-cmc.properties</option>
	  <option name="-setprop">cpa.composite.aggregateBasicBlocks=false</option>
	  <option name="-setprop">restartAlgorithm.combineARGsAfterRestart=true</option>
	  <option name="-setprop">pcc.proofgen.doPCC=true</option>
	  <option name="-setprop">pcc.partial.certificateType=MONOTONESTOPARG</option>
      <option name="-setprop">pcc.proofFile=ValueApronCMCItp_${taskdef_name}_partial.proof</option>
    <option name="-setprop">pcc.strategy=PartialReachedSetStrategy</option> 
<include>../programs/benchmarks/bitvector/soft_float_2.c.cil.yml</include>
<include>../programs/benchmarks/bitvector/soft_float_3.c.cil.yml</include>
<include>../programs/benchmarks/eca-rers2012/Problem16_label59.yml</include>
<include>../programs/benchmarks/floats-cbmc-regression/float-rounding1.yml</include>
<include>../programs/benchmarks/loop-lit/gr2006.yml</include>
<include>../programs/benchmarks/ntdrivers/floppy2.i.cil.yml</include>
<include>../programs/benchmarks/ntdrivers/floppy.i.cil-3.yml</include>
<include>../programs/benchmarks/ntdrivers/parport.i.cil-2.yml</include>
<include>../programs/benchmarks/systemc/toy.cil.yml</include>
      </tasks>

<!-- CMC args proof -->
	
    <tasks>
		<option name="-combinations-valueCegar60+pred-cmc"/>
	<option name="-setprop">pcc.proofgen.doPCC=true</option>
	<option name="-setprop">pcc.proofFile=ValuePredicateCMCItp_${taskdef_name}_cmcarg.proof</option>
	<option name="-setprop">analysis.memorizeReachedAfterRestart=true</option>
	<option name="-setprop">assumptions.automatonIgnoreAssumptions=true</option>
	<option name="-setprop">cpa.composite.aggregateBasicBlocks=false</option>
	<option name="-setprop">pcc.strategy=arg.ARG_CMCStrategy</option>
    <option name="-setprop">solver.solver=MATHSAT5</option>
    <option name="-setprop">counterexample.removeInfeasibleErrorState=false</option>
    <option name="-setprop">assumptions.removeNonExploredWithoutSuccessors=true</option>
<include>../programs/benchmarks/loop-new/nested-1.yml</include>
<include>../programs/benchmarks/loops/matrix-1.yml</include>
<include>../programs/benchmarks/seq-mthreaded/pals_floodmax.3.ufo.UNBOUNDED.pals.yml</include>
<include>../programs/benchmarks/seq-mthreaded/pals_lcr-var-start-time.3.ufo.UNBOUNDED.pals.yml</include>
<include>../programs/CMC+PCC/bonus.c</include>
</tasks>

    <tasks>
		<option name="-combinations-valueCegar60+pred-cmc"/>
	<option name="-setprop">pcc.proofgen.doPCC=true</option>
	<option name="-setprop">pcc.proofFile=ValuePredicateCMCItp+_${taskdef_name}_cmcarg.proof</option>
    <option name="-setprop">analysis.memorizeReachedAfterRestart=true</option>
    <option name="-setprop">assumptions.automatonIgnoreAssumptions=true</option>
    <option name="-setprop">cpa.composite.aggregateBasicBlocks=false</option>
	<option name="-setprop">pcc.strategy=arg.ARG_CMCStrategy</option>
    <option name="-setprop">solver.solver=MATHSAT5</option>
    <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
    <option name="-setprop">counterexample.removeInfeasibleErrorState=false</option>
    <option name="-setprop">assumptions.removeNonExploredWithoutSuccessors=true</option>
<include>../programs/benchmarks/loops/matrix-1.yml</include>
<include>../programs/CMC+PCC/bonus.c</include>
</tasks>

    <tasks>
		<option name="-combinations-value10+pred-cmc"/>
	<option name="-setprop">pcc.proofgen.doPCC=true</option>
	<option name="-setprop">pcc.proofFile=ValuePredicateCMC_${taskdef_name}_cmcarg.proof</option>
    <option name="-setprop">analysis.memorizeReachedAfterRestart=true</option>
    <option name="-setprop">assumptions.automatonIgnoreAssumptions=true</option>
	<option name="-setprop">pcc.strategy=arg.ARG_CMCStrategy</option>
    <option name="-setprop">solver.solver=MATHSAT5</option>
    <option name="-setprop">counterexample.removeInfeasibleErrorState=false</option>
    <option name="-setprop">assumptions.removeNonExploredWithoutSuccessors=true</option>
<include>../programs/benchmarks/float-benchs/filter2_iterated.yml</include>
<include>../programs/benchmarks/floats-esbmc-regression/fabs.yml</include>
<include>../programs/benchmarks/loop-new/nested-1.yml</include>
<include>../programs/benchmarks/seq-mthreaded/pals_STARTPALS_Triplicated.ufo.UNBOUNDED.pals.yml</include>
<include>../programs/benchmarks/seq-mthreaded/pals_lcr-var-start-time.3.ufo.BOUNDED-6.pals.yml</include>
<include>../programs/CMC+PCC/bonus.c</include>
</tasks>

    <tasks>
		<option name="-combinations-value10+pred-cmc"/>
	<option name="-setprop">pcc.proofgen.doPCC=true</option>
    <option name="-setprop">pcc.proofFile=ValuePredicateCMC+_${taskdef_name}_cmcarg.proof</option>
    <option name="-setprop">analysis.memorizeReachedAfterRestart=true</option>
    <option name="-setprop">assumptions.automatonIgnoreAssumptions=true</option>
	<option name="-setprop">pcc.strategy=arg.ARG_CMCStrategy</option>
    <option name="-setprop">solver.solver=MATHSAT5</option>
    <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
    <option name="-setprop">counterexample.removeInfeasibleErrorState=false</option>
    <option name="-setprop">assumptions.removeNonExploredWithoutSuccessors=true</option>
<include>../programs/benchmarks/float-benchs/filter2.yml</include>
<include>../programs/benchmarks/floats-esbmc-regression/fabs.yml</include>
<include>../programs/benchmarks/loops/matrix-1.yml</include>
<include>../programs/CMC+PCC/bonus.c</include>
</tasks>

    <tasks>
		<option name="-config">config/unmaintained/combinations-value10+apron-cmc.properties</option>
	  <option name="-setprop">cpa.composite.aggregateBasicBlocks=false</option>
	  <option name="-setprop">pcc.proofgen.doPCC=true</option>
      <option name="-setprop">pcc.proofFile=ValueApronCMC_${taskdef_name}_cmcarg.proof</option>
      <option name="-setprop">analysis.memorizeReachedAfterRestart=true</option>
    <option name="-setprop">pcc.strategy=arg.ARG_CMCStrategy</option>
    <option name="-setprop">counterexample.removeInfeasibleErrorState=false</option>
    <option name="-setprop">assumptions.removeNonExploredWithoutSuccessors=true</option>
<include>../programs/benchmarks/bitvector/soft_float_2.c.cil.yml</include>
<include>../programs/benchmarks/bitvector/soft_float_3.c.cil.yml</include>
<include>../programs/benchmarks/bitvector/soft_float_5.c.cil.yml</include>
<include>../programs/benchmarks/floats-cbmc-regression/float-rounding1.yml</include>
<include>../programs/benchmarks/floats-cbmc-regression/float21.yml</include>
      </tasks>
	  
      <tasks>
		  <option name="-config">config/unmaintained/combinations-valueCegar60+apronCegar-cmc.properties</option>
	  <option name="-setprop">cpa.composite.aggregateBasicBlocks=false</option>
	  <option name="-setprop">pcc.proofgen.doPCC=true</option>
      <option name="-setprop">pcc.proofFile=ValueApronCMCItp_${taskdef_name}_cmcarg.proof</option>
      <option name="-setprop">analysis.memorizeReachedAfterRestart=true</option>
    <option name="-setprop">pcc.strategy=arg.ARG_CMCStrategy</option> 
    <option name="-setprop">counterexample.removeInfeasibleErrorState=false</option>
    <option name="-setprop">assumptions.removeNonExploredWithoutSuccessors=true</option>
<include>../programs/benchmarks/bitvector/soft_float_2.c.cil.yml</include>
<include>../programs/benchmarks/bitvector/soft_float_3.c.cil.yml</include>
<include>../programs/benchmarks/eca-rers2012/Problem16_label59.yml</include>
<include>../programs/benchmarks/floats-cbmc-regression/float-rounding1.yml</include>
<include>../programs/benchmarks/loop-lit/gr2006.yml</include>
<include>../programs/benchmarks/ntdrivers/floppy2.i.cil.yml</include>
<include>../programs/benchmarks/ntdrivers/floppy.i.cil-3.yml</include>
<include>../programs/benchmarks/ntdrivers/parport.i.cil-2.yml</include>
<include>../programs/benchmarks/systemc/toy.cil.yml</include>
      </tasks>

</rundefinition>

<rundefinition name="Complete proof check">
<!-- ARG Proof -->
 
     <tasks>
	<option name="-config">config/unmaintained/valueAnalysis-predicateAnalysis-proofcheck.properties</option>
	<option name="-setprop">analysis.algorithm.proofCheck=true</option>
    <option name="-setprop">pcc.proof=output/ValuePredicateCMCItp_${taskdef_name}_arg.proof</option>
    <option name="-setprop">cpa.propertychecker.className=NoTargetStateChecker</option>
    <option name="-setprop">cpa=cpa.PropertyChecker.PropertyCheckerCPA</option>
    <option name="-setprop">PropertyCheckerCPA.cpa=cpa.arg.ARGCPA</option>
    <option name="-setprop">ARGCPA.cpa=cpa.composite.CompositeCPA</option>
    <option name="-setprop">cpa.composite.aggregateBasicBlocks=false</option>
    <option name="-setprop">solver.solver=MATHSAT5</option>
    <option name="-setprop">cpa.predicate.blk.alwaysAtLoops=true</option>
    <option name="-setprop">pcc.strategy=arg.ARG_CPAStrategy</option>
<include>../programs/benchmarks/loop-new/nested-1.yml</include>
<include>../programs/benchmarks/loops/matrix-1.yml</include>
<include>../programs/benchmarks/seq-mthreaded/pals_floodmax.3.ufo.UNBOUNDED.pals.yml</include>
<include>../programs/benchmarks/seq-mthreaded/pals_lcr-var-start-time.3.ufo.UNBOUNDED.pals.yml</include>
<include>../programs/CMC+PCC/bonus.c</include>
</tasks>

    <tasks>
    <option name="-config">config/unmaintained/valueAnalysis-predicateAnalysis-proofcheck.properties</option>
	<option name="-setprop">analysis.algorithm.proofCheck=true</option>
    <option name="-setprop">pcc.proof=output/ValuePredicateCMCItp+_${taskdef_name}_arg.proof</option>
    <option name="-setprop">cpa.propertychecker.className=NoTargetStateChecker</option>
    <option name="-setprop">cpa=cpa.PropertyChecker.PropertyCheckerCPA</option>
    <option name="-setprop">PropertyCheckerCPA.cpa=cpa.arg.ARGCPA</option>
    <option name="-setprop">ARGCPA.cpa=cpa.composite.CompositeCPA</option>
    <option name="-setprop">cpa.composite.aggregateBasicBlocks=false</option>
    <option name="-setprop">solver.solver=MATHSAT5</option>
    <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
    <option name="-setprop">cpa.predicate.blk.alwaysAtLoops=true</option>
    <option name="-setprop">pcc.strategy=arg.ARG_CPAStrategy</option>
<include>../programs/benchmarks/loops/matrix-1.yml</include>
<include>../programs/CMC+PCC/bonus.c</include>
</tasks>

    <tasks>
	<option name="-config">config/unmaintained/valueAnalysis-predicateAnalysis-proofcheck.properties</option>
	<option name="-setprop">analysis.algorithm.proofCheck=true</option>
    <option name="-setprop">pcc.proof=output/ValuePredicateCMC_${taskdef_name}_arg.proof</option>
    <option name="-setprop">cpa.propertychecker.className=NoTargetStateChecker</option>
    <option name="-setprop">cpa.composite.aggregateBasicBlocks=false</option>
    <option name="-setprop">cpa=cpa.PropertyChecker.PropertyCheckerCPA</option>
    <option name="-setprop">PropertyCheckerCPA.cpa=cpa.arg.ARGCPA</option>
    <option name="-setprop">ARGCPA.cpa=cpa.composite.CompositeCPA</option>
    <option name="-setprop">solver.solver=MATHSAT5</option>
    <option name="-setprop">cpa.predicate.blk.alwaysAtLoops=true</option>
    <option name="-setprop">pcc.strategy=arg.ARG_CPAStrategy</option>
 <include>../programs/benchmarks/float-benchs/filter2_iterated.yml</include>
<include>../programs/benchmarks/floats-esbmc-regression/fabs.yml</include>
<include>../programs/benchmarks/loop-new/nested-1.yml</include>
<include>../programs/benchmarks/seq-mthreaded/pals_STARTPALS_Triplicated.ufo.UNBOUNDED.pals.yml</include>
<include>../programs/benchmarks/seq-mthreaded/pals_lcr-var-start-time.3.ufo.BOUNDED-6.pals.yml</include>
<include>../programs/CMC+PCC/bonus.c</include>
</tasks>

    <tasks>
	<option name="-config">config/unmaintained/valueAnalysis-predicateAnalysis-proofcheck.properties</option>
	<option name="-setprop">analysis.algorithm.proofCheck=true</option>
    <option name="-setprop">pcc.proof=output/ValuePredicateCMC+_${taskdef_name}_arg.proof</option>
    <option name="-setprop">cpa.propertychecker.className=NoTargetStateChecker</option>
    <option name="-setprop">cpa.composite.aggregateBasicBlocks=false</option>
    <option name="-setprop">cpa=cpa.PropertyChecker.PropertyCheckerCPA</option>
    <option name="-setprop">PropertyCheckerCPA.cpa=cpa.arg.ARGCPA</option>
    <option name="-setprop">ARGCPA.cpa=cpa.composite.CompositeCPA</option>
    <option name="-setprop">solver.solver=MATHSAT5</option>
    <option name="-setprop">cpa.predicate.blk.alwaysAtLoops=true</option>
    <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
    <option name="-setprop">pcc.strategy=arg.ARG_CPAStrategy</option>
<include>../programs/benchmarks/float-benchs/filter2.yml</include>
<include>../programs/benchmarks/floats-esbmc-regression/fabs.yml</include>
<include>../programs/benchmarks/loops/matrix-1.yml</include>
<include>../programs/CMC+PCC/bonus.c</include>
</tasks>

      <tasks>
	<option name="-config">config/unmaintained/valueApronAnalysis-proofcheck.properties</option>
	<option name="-setprop">analysis.algorithm.proofCheck=true</option>
    <option name="-setprop">pcc.proof=output/ValueApronCMC_${taskdef_name}_arg.proof</option>
    <option name="-setprop">cpa.composite.aggregateBasicBlocks=false</option>
    <option name="-setprop">cpa=cpa.PropertyChecker.PropertyCheckerCPA</option>
    <option name="-setprop">PropertyCheckerCPA.cpa=cpa.arg.ARGCPA</option>
    <option name="-setprop">ARGCPA.cpa=cpa.composite.CompositeCPA</option>
    <option name="-setprop">cpa.propertychecker.className=NoTargetStateChecker</option>
    <option name="-setprop">pcc.strategy=arg.ARG_CPAStrategy</option>
<include>../programs/benchmarks/bitvector/soft_float_2.c.cil.yml</include>
<include>../programs/benchmarks/bitvector/soft_float_3.c.cil.yml</include>
<include>../programs/benchmarks/bitvector/soft_float_5.c.cil.yml</include>
<include>../programs/benchmarks/floats-cbmc-regression/float-rounding1.yml</include>
<include>../programs/benchmarks/floats-cbmc-regression/float21.yml</include>
      </tasks>

      <tasks>
    <option name="-config">config/unmaintained/valueApronAnalysis-proofcheck.properties</option>
	<option name="-setprop">analysis.algorithm.proofCheck=true</option>
    <option name="-setprop">pcc.proof=output/ValueApronCMCItp_${taskdef_name}_arg.proof</option>
    <option name="-setprop">cpa.composite.aggregateBasicBlocks=false</option>
    <option name="-setprop">cpa=cpa.PropertyChecker.PropertyCheckerCPA</option>
    <option name="-setprop">PropertyCheckerCPA.cpa=cpa.arg.ARGCPA</option>
    <option name="-setprop">ARGCPA.cpa=cpa.composite.CompositeCPA</option>
    <option name="-setprop">cpa.propertychecker.className=NoTargetStateChecker</option>
    <option name="-setprop">pcc.strategy=arg.ARG_CPAStrategy</option>
<include>../programs/benchmarks/bitvector/soft_float_2.c.cil.yml</include>
<include>../programs/benchmarks/bitvector/soft_float_3.c.cil.yml</include>
<include>../programs/benchmarks/eca-rers2012/Problem16_label59.yml</include>
<include>../programs/benchmarks/floats-cbmc-regression/float-rounding1.yml</include>
<include>../programs/benchmarks/loop-lit/gr2006.yml</include>
<include>../programs/benchmarks/ntdrivers/floppy2.i.cil.yml</include>
<include>../programs/benchmarks/ntdrivers/floppy.i.cil-3.yml</include>
<include>../programs/benchmarks/ntdrivers/parport.i.cil-2.yml</include>
<include>../programs/benchmarks/systemc/toy.cil.yml</include>
      </tasks>

<!-- Reached set proof -->

    <tasks>
	<option name="-config">config/unmaintained/valueAnalysis-predicateAnalysis-proofcheck.properties</option>
	<option name="-setprop">cpa.composite.aggregateBasicBlocks=false</option>
	<option name="-setprop">pcc.strategy=ReachedSetStrategy</option>
    <option name="-setprop">solver.solver=MATHSAT5</option>
    <option name="-setprop">cpa.predicate.blk.alwaysAtLoops=true</option>
	<option name="-setprop">analysis.algorithm.proofCheck=true</option>
    <option name="-setprop">pcc.proof=output/ValuePredicateCMCItp_${taskdef_name}_reached.proof</option>
    <option name="-setprop">cpa.propertychecker.className=NoTargetStateChecker</option>
    <option name="-setprop">cpa=cpa.PropertyChecker.PropertyCheckerCPA</option>
    <option name="-setprop">PropertyCheckerCPA.cpa=cpa.composite.CompositeCPA</option>
<include>../programs/benchmarks/loop-new/nested-1.yml</include>
<include>../programs/benchmarks/loops/matrix-1.yml</include>
<include>../programs/benchmarks/seq-mthreaded/pals_floodmax.3.ufo.UNBOUNDED.pals.yml</include>
<include>../programs/benchmarks/seq-mthreaded/pals_lcr-var-start-time.3.ufo.UNBOUNDED.pals.yml</include>
<include>../programs/CMC+PCC/bonus.c</include>
</tasks>

    <tasks>
	<option name="-setprop">assumptions.automatonIgnoreAssumptions=true</option>
    <option name="-setprop">cpa.composite.aggregateBasicBlocks=false</option>
	<option name="-setprop">pcc.strategy=ReachedSetStrategy</option>
    <option name="-setprop">solver.solver=MATHSAT5</option>
    <option name="-setprop">cpa.predicate.blk.alwaysAtLoops=true</option>
    <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
    <option name="-config">config/unmaintained/valueAnalysis-predicateAnalysis-proofcheck.properties</option>
	<option name="-setprop">analysis.algorithm.proofCheck=true</option>
    <option name="-setprop">pcc.proof=output/ValuePredicateCMCItp+_${taskdef_name}_reached.proof</option>
    <option name="-setprop">cpa.propertychecker.className=NoTargetStateChecker</option>
    <option name="-setprop">cpa=cpa.PropertyChecker.PropertyCheckerCPA</option>
    <option name="-setprop">PropertyCheckerCPA.cpa=cpa.composite.CompositeCPA</option>
<include>../programs/benchmarks/loops/matrix-1.yml</include>
<include>../programs/CMC+PCC/bonus.c</include>
</tasks>

    <tasks>
    <option name="-setprop">pcc.strategy=ReachedSetStrategy</option>
    <option name="-setprop">solver.solver=MATHSAT5</option>
    <option name="-setprop">cpa.predicate.blk.alwaysAtLoops=true</option>
	<option name="-config">config/unmaintained/valueAnalysis-predicateAnalysis-proofcheck.properties</option>
	<option name="-setprop">analysis.algorithm.proofCheck=true</option>
    <option name="-setprop">pcc.proof=output/ValuePredicateCMC_${taskdef_name}_reached.proof</option>
    <option name="-setprop">cpa.propertychecker.className=NoTargetStateChecker</option>
    <option name="-setprop">cpa.composite.aggregateBasicBlocks=false</option>
    <option name="-setprop">cpa=cpa.PropertyChecker.PropertyCheckerCPA</option>
    <option name="-setprop">PropertyCheckerCPA.cpa=cpa.composite.CompositeCPA</option>
 <include>../programs/benchmarks/float-benchs/filter2_iterated.yml</include>
<include>../programs/benchmarks/floats-esbmc-regression/fabs.yml</include>
<include>../programs/benchmarks/loop-new/nested-1.yml</include>
<include>../programs/benchmarks/seq-mthreaded/pals_STARTPALS_Triplicated.ufo.UNBOUNDED.pals.yml</include>
<include>../programs/benchmarks/seq-mthreaded/pals_lcr-var-start-time.3.ufo.BOUNDED-6.pals.yml</include>
<include>../programs/CMC+PCC/bonus.c</include>
</tasks>
	
    <tasks>
	<option name="-setprop">pcc.strategy=ReachedSetStrategy</option>
    <option name="-setprop">solver.solver=MATHSAT5</option>
    <option name="-setprop">cpa.predicate.blk.alwaysAtLoops=true</option>
    <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
    <option name="-config">config/unmaintained/valueAnalysis-predicateAnalysis-proofcheck.properties</option>
	<option name="-setprop">analysis.algorithm.proofCheck=true</option>
    <option name="-setprop">pcc.proof=output/ValuePredicateCMC+_${taskdef_name}_reached.proof</option>
    <option name="-setprop">cpa.propertychecker.className=NoTargetStateChecker</option>
    <option name="-setprop">cpa.composite.aggregateBasicBlocks=false</option>
     <option name="-setprop">cpa=cpa.PropertyChecker.PropertyCheckerCPA</option>
    <option name="-setprop">PropertyCheckerCPA.cpa=cpa.composite.CompositeCPA</option>
<include>../programs/benchmarks/float-benchs/filter2.yml</include>
<include>../programs/benchmarks/floats-esbmc-regression/fabs.yml</include>
<include>../programs/benchmarks/loops/matrix-1.yml</include>
<include>../programs/CMC+PCC/bonus.c</include>
</tasks>
   
      <tasks>
    <option name="-config">config/unmaintained/valueApronAnalysis-proofcheck.properties</option>
	<option name="-setprop">analysis.algorithm.proofCheck=true</option>
    <option name="-setprop">pcc.proof=output/ValueApronCMC_${taskdef_name}_reached.proof</option>
    <option name="-setprop">cpa.composite.aggregateBasicBlocks=false</option>
    <option name="-setprop">cpa=cpa.PropertyChecker.PropertyCheckerCPA</option>
    <option name="-setprop">PropertyCheckerCPA.cpa=cpa.composite.CompositeCPA</option>
    <option name="-setprop">pcc.strategy=ReachedSetStrategy</option>
    <option name="-setprop">cpa.propertychecker.className=NoTargetStateChecker</option>
<include>../programs/benchmarks/bitvector/soft_float_2.c.cil.yml</include>
<include>../programs/benchmarks/bitvector/soft_float_3.c.cil.yml</include>
<include>../programs/benchmarks/bitvector/soft_float_5.c.cil.yml</include>
<include>../programs/benchmarks/floats-cbmc-regression/float-rounding1.yml</include>
<include>../programs/benchmarks/floats-cbmc-regression/float21.yml</include>
      </tasks>

      <tasks>
	<option name="-config">config/unmaintained/valueApronAnalysis-proofcheck.properties</option>
	<option name="-setprop">analysis.algorithm.proofCheck=true</option>
    <option name="-setprop">pcc.proof=output/ValueApronCMCItp_${taskdef_name}_reached.proof</option>
    <option name="-setprop">cpa.composite.aggregateBasicBlocks=false</option>
    <option name="-setprop">cpa=cpa.PropertyChecker.PropertyCheckerCPA</option>
    <option name="-setprop">PropertyCheckerCPA.cpa=cpa.composite.CompositeCPA</option>
    <option name="-setprop">pcc.strategy=ReachedSetStrategy</option>
    <option name="-setprop">cpa.propertychecker.className=NoTargetStateChecker</option>
<include>../programs/benchmarks/bitvector/soft_float_2.c.cil.yml</include>
<include>../programs/benchmarks/bitvector/soft_float_3.c.cil.yml</include>
<include>../programs/benchmarks/eca-rers2012/Problem16_label59.yml</include>
<include>../programs/benchmarks/floats-cbmc-regression/float-rounding1.yml</include>
<include>../programs/benchmarks/loop-lit/gr2006.yml</include>
<include>../programs/benchmarks/ntdrivers/floppy2.i.cil.yml</include>
<include>../programs/benchmarks/ntdrivers/floppy.i.cil-3.yml</include>
<include>../programs/benchmarks/ntdrivers/parport.i.cil-2.yml</include>
<include>../programs/benchmarks/systemc/toy.cil.yml</include>
      </tasks>

<!-- partial reached set proof -->
 
    <tasks>
    <option name="-setprop">cpa.composite.aggregateBasicBlocks=false</option>
	<option name="-setprop">pcc.strategy=PartialReachedSetStrategy</option>
    <option name="-setprop">solver.solver=MATHSAT5</option>
    <option name="-setprop">cpa.predicate.blk.alwaysAtLoops=true</option>
    <option name="-config">config/unmaintained/valueAnalysis-predicateAnalysis-proofcheck.properties</option>
	<option name="-setprop">analysis.algorithm.proofCheck=true</option>
    <option name="-setprop">pcc.proof=output/ValuePredicateCMCItp_${taskdef_name}_partial.proof</option>
    <option name="-setprop">cpa.propertychecker.className=NoTargetStateChecker</option>
    <option name="-setprop">pcc.partial.stopAddingAtReachedSetSize=true</option>
    <option name="-setprop">cpa=cpa.PropertyChecker.PropertyCheckerCPA</option>
    <option name="-setprop">PropertyCheckerCPA.cpa=cpa.composite.CompositeCPA</option>
<include>../programs/benchmarks/loop-new/nested-1.yml</include>
<include>../programs/benchmarks/loops/matrix-1.yml</include>
<include>../programs/benchmarks/seq-mthreaded/pals_floodmax.3.ufo.UNBOUNDED.pals.yml</include>
<include>../programs/benchmarks/seq-mthreaded/pals_lcr-var-start-time.3.ufo.UNBOUNDED.pals.yml</include>
<include>../programs/CMC+PCC/bonus.c</include>
</tasks>

    <tasks>
	<option name="-setprop">cpa.composite.aggregateBasicBlocks=false</option>
	<option name="-setprop">pcc.strategy=PartialReachedSetStrategy</option>
    <option name="-setprop">solver.solver=MATHSAT5</option>
    <option name="-setprop">cpa.predicate.blk.alwaysAtLoops=true</option>
    <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
	<option name="-config">config/unmaintained/valueAnalysis-predicateAnalysis-proofcheck.properties</option>
	<option name="-setprop">analysis.algorithm.proofCheck=true</option>
    <option name="-setprop">pcc.proof=output/ValuePredicateCMCItp+_${taskdef_name}_partial.proof</option>
    <option name="-setprop">cpa.propertychecker.className=NoTargetStateChecker</option>
    <option name="-setprop">pcc.partial.stopAddingAtReachedSetSize=true</option>
    <option name="-setprop">cpa=cpa.PropertyChecker.PropertyCheckerCPA</option>
    <option name="-setprop">PropertyCheckerCPA.cpa=cpa.composite.CompositeCPA</option>
<include>../programs/benchmarks/loops/matrix-1.yml</include>
<include>../programs/CMC+PCC/bonus.c</include>
</tasks>

    <tasks>
	<option name="-config">config/unmaintained/valueAnalysis-predicateAnalysis-proofcheck.properties</option>
	<option name="-setprop">pcc.strategy=PartialReachedSetStrategy</option>
    <option name="-setprop">solver.solver=MATHSAT5</option>
    <option name="-setprop">cpa.predicate.blk.alwaysAtLoops=true</option>
	<option name="-setprop">analysis.algorithm.proofCheck=true</option>
    <option name="-setprop">pcc.proof=output/ValuePredicateCMC_${taskdef_name}_partial.proof</option>
    <option name="-setprop">cpa.propertychecker.className=NoTargetStateChecker</option>
    <option name="-setprop">pcc.partial.stopAddingAtReachedSetSize=true</option>
    <option name="-setprop">cpa.composite.aggregateBasicBlocks=false</option>
    <option name="-setprop">cpa=cpa.PropertyChecker.PropertyCheckerCPA</option>
    <option name="-setprop">PropertyCheckerCPA.cpa=cpa.composite.CompositeCPA</option>
 <include>../programs/benchmarks/float-benchs/filter2_iterated.yml</include>
<include>../programs/benchmarks/floats-esbmc-regression/fabs.yml</include>
<include>../programs/benchmarks/loop-new/nested-1.yml</include>
<include>../programs/benchmarks/seq-mthreaded/pals_STARTPALS_Triplicated.ufo.UNBOUNDED.pals.yml</include>
<include>../programs/benchmarks/seq-mthreaded/pals_lcr-var-start-time.3.ufo.BOUNDED-6.pals.yml</include>
<include>../programs/CMC+PCC/bonus.c</include>
</tasks>

    <tasks>
	<option name="-setprop">pcc.strategy=PartialReachedSetStrategy</option>
    <option name="-setprop">solver.solver=MATHSAT5</option>
    <option name="-setprop">cpa.predicate.blk.alwaysAtLoops=true</option>
    <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
    <option name="-config">config/unmaintained/valueAnalysis-predicateAnalysis-proofcheck.properties</option>
	<option name="-setprop">analysis.algorithm.proofCheck=true</option>
    <option name="-setprop">pcc.proof=output/ValuePredicateCMC+_${taskdef_name}_partial.proof</option>
    <option name="-setprop">cpa.propertychecker.className=NoTargetStateChecker</option>
    <option name="-setprop">pcc.partial.stopAddingAtReachedSetSize=true</option>
    <option name="-setprop">cpa.composite.aggregateBasicBlocks=false</option>
     <option name="-setprop">cpa=cpa.PropertyChecker.PropertyCheckerCPA</option>
    <option name="-setprop">PropertyCheckerCPA.cpa=cpa.composite.CompositeCPA</option>
<include>../programs/benchmarks/float-benchs/filter2.yml</include>
<include>../programs/benchmarks/floats-esbmc-regression/fabs.yml</include>
<include>../programs/benchmarks/loops/matrix-1.yml</include>
<include>../programs/CMC+PCC/bonus.c</include>
</tasks>

    <tasks>
	<option name="-config">config/unmaintained/valueApronAnalysis-proofcheck.properties</option>
	<option name="-setprop">analysis.algorithm.proofCheck=true</option>
    <option name="-setprop">pcc.proof=output/ValueApronCMC_${taskdef_name}_partial.proof</option>
    <option name="-setprop">cpa.composite.aggregateBasicBlocks=false</option>
    <option name="-setprop">cpa=cpa.PropertyChecker.PropertyCheckerCPA</option>
    <option name="-setprop">PropertyCheckerCPA.cpa=cpa.composite.CompositeCPA</option>
    <option name="-setprop">pcc.strategy=PartialReachedSetStrategy</option> 
    <option name="-setprop">cpa.propertychecker.className=NoTargetStateChecker</option> 
		  <!-- only possible in combination-->
<include>../programs/benchmarks/bitvector/soft_float_2.c.cil.yml</include>
<include>../programs/benchmarks/bitvector/soft_float_3.c.cil.yml</include>
<include>../programs/benchmarks/bitvector/soft_float_5.c.cil.yml</include>
<include>../programs/benchmarks/floats-cbmc-regression/float-rounding1.yml</include>
<include>../programs/benchmarks/floats-cbmc-regression/float21.yml</include>
      </tasks>

      <tasks>
    <option name="-config">config/unmaintained/valueApronAnalysis-proofcheck.properties</option>
	<option name="-setprop">analysis.algorithm.proofCheck=true</option>
    <option name="-setprop">pcc.proof=output/ValueApronCMCItp_${taskdef_name}_partial.proof</option>
    <option name="-setprop">cpa.composite.aggregateBasicBlocks=false</option>
    <option name="-setprop">cpa=cpa.PropertyChecker.PropertyCheckerCPA</option>
    <option name="-setprop">PropertyCheckerCPA.cpa=cpa.composite.CompositeCPA</option>
     <option name="-setprop">pcc.strategy=PartialReachedSetStrategy</option>
    <option name="-setprop">cpa.propertychecker.className=NoTargetStateChecker</option>
<include>../programs/benchmarks/bitvector/soft_float_2.c.cil.yml</include>
<include>../programs/benchmarks/bitvector/soft_float_3.c.cil.yml</include>
<include>../programs/benchmarks/eca-rers2012/Problem16_label59.yml</include>
<include>../programs/benchmarks/floats-cbmc-regression/float-rounding1.yml</include>
<include>../programs/benchmarks/loop-lit/gr2006.yml</include>
<include>../programs/benchmarks/ntdrivers/floppy2.i.cil.yml</include>
<include>../programs/benchmarks/ntdrivers/floppy.i.cil-3.yml</include>
<include>../programs/benchmarks/ntdrivers/parport.i.cil-2.yml</include>
<include>../programs/benchmarks/systemc/toy.cil.yml</include>
      </tasks>

<!-- CMC args proof -->

     <tasks>
	<option name="-config">config/unmaintained/combinations-value+pred-cmc-proofcheck.properties</option>
	<option name="-setprop">cpa.propertychecker.className=NoTargetStateChecker</option>
    <option name="-setprop">pcc.proof=output/ValuePredicateCMCItp_${taskdef_name}_cmcarg.proof</option>	
	<option name="-setprop">cpa.composite.aggregateBasicBlocks=false</option>
    <option name="-setprop">solver.solver=MATHSAT5</option>
    <option name="-setprop">cpa.predicate.blk.alwaysAtLoops=true</option>
    <option name="-setprop">pcc.arg.checkPropertyPerElement=true</option>
<include>../programs/benchmarks/loop-new/nested-1.yml</include>
<include>../programs/benchmarks/loops/matrix-1.yml</include>
<include>../programs/benchmarks/seq-mthreaded/pals_floodmax.3.ufo.UNBOUNDED.pals.yml</include>
<include>../programs/benchmarks/seq-mthreaded/pals_lcr-var-start-time.3.ufo.UNBOUNDED.pals.yml</include>
<include>../programs/CMC+PCC/bonus.c</include>
</tasks>

    <tasks>
	<option name="-setprop">pcc.proof=output/ValuePredicateCMCItp+_${taskdef_name}_cmcarg.proof</option>
    <option name="-setprop">cpa.propertychecker.className=NoTargetStateChecker</option>
    <option name="-setprop">solver.solver=MATHSAT5</option>
    <option name="-setprop">cpa.predicate.blk.alwaysAtLoops=true</option>
    <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
    <option name="-setprop">pcc.arg.checkPropertyPerElement=true</option>
	<option name="-config">config/unmaintained/combinations-value+pred-cmc-proofcheck.properties</option>
<include>../programs/benchmarks/loops/matrix-1.yml</include>
<include>../programs/CMC+PCC/bonus.c</include>
</tasks>

    <tasks>
	<option name="-config">config/unmaintained/combinations-value+pred-cmc-proofcheck.properties</option>
	<option name="-setprop">cpa.propertychecker.className=NoTargetStateChecker</option>
	<option name="-setprop">solver.solver=MATHSAT5</option>
	<option name="-setprop">cpa.predicate.blk.alwaysAtLoops=true</option>
	<option name="-setprop">pcc.proof=output/ValuePredicateCMC_${taskdef_name}_cmcarg.proof</option>
	<option name="-setprop">pcc.arg.checkPropertyPerElement=true</option>
 <include>../programs/benchmarks/float-benchs/filter2_iterated.yml</include>
<include>../programs/benchmarks/floats-esbmc-regression/fabs.yml</include>
<include>../programs/benchmarks/loop-new/nested-1.yml</include>
<include>../programs/benchmarks/seq-mthreaded/pals_STARTPALS_Triplicated.ufo.UNBOUNDED.pals.yml</include>
<include>../programs/benchmarks/seq-mthreaded/pals_lcr-var-start-time.3.ufo.BOUNDED-6.pals.yml</include>
<include>../programs/CMC+PCC/bonus.c</include>
</tasks>

    <tasks>
	<option name="-config">config/unmaintained/combinations-value+pred-cmc-proofcheck.properties</option>
	<option name="-setprop">cpa.propertychecker.className=NoTargetStateChecker</option>
	<option name="-setprop">solver.solver=MATHSAT5</option>
	<option name="-setprop">cpa.predicate.blk.alwaysAtLoops=true</option>
    <option name="-setprop">cpa.predicate.blk.alwaysAtJoin=true</option>
    <option name="-setprop">pcc.proof=output/ValuePredicateCMC+_${taskdef_name}_cmcarg.proof</option>
    <option name="-setprop">pcc.arg.checkPropertyPerElement=true</option>
<include>../programs/benchmarks/float-benchs/filter2.yml</include>
<include>../programs/benchmarks/floats-esbmc-regression/fabs.yml</include>
<include>../programs/benchmarks/loops/matrix-1.yml</include>
<include>../programs/CMC+PCC/bonus.c</include>
</tasks>

    <tasks>
	<option name="-config">config/unmaintained/combinations-value+apron-cmc-proofcheck.properties</option>
	<option name="-setprop">cpa.propertychecker.className=NoTargetStateChecker</option>
    <option name="-setprop">pcc.proof=output/ValueApronCMC_${taskdef_name}_cmcarg.proof</option>
    <option name="-setprop">pcc.arg.checkPropertyPerElement=true</option>
<include>../programs/benchmarks/bitvector/soft_float_2.c.cil.yml</include>
<include>../programs/benchmarks/bitvector/soft_float_3.c.cil.yml</include>
<include>../programs/benchmarks/bitvector/soft_float_5.c.cil.yml</include>
<include>../programs/benchmarks/floats-cbmc-regression/float-rounding1.yml</include>
<include>../programs/benchmarks/floats-cbmc-regression/float21.yml</include>
      </tasks>

      <tasks>
    <option name="-config">config/unmaintained/combinations-value+apron-cmc-proofcheck.properties</option>
    <option name="-skipRecursion"/>
	<option name="-setprop">cpa.propertychecker.className=NoTargetStateChecker</option>
	<option name="-setprop">pcc.arg.checkPropertyPerElement=true</option>
    <option name="-setprop">pcc.proof=output/ValueApronCMCItp_${taskdef_name}_cmcarg.proof</option>
<include>../programs/benchmarks/bitvector/soft_float_2.c.cil.yml</include>
<include>../programs/benchmarks/bitvector/soft_float_3.c.cil.yml</include>
<include>../programs/benchmarks/eca-rers2012/Problem16_label59.yml</include>
<include>../programs/benchmarks/floats-cbmc-regression/float-rounding1.yml</include>
<include>../programs/benchmarks/loop-lit/gr2006.yml</include>
<include>../programs/benchmarks/ntdrivers/floppy2.i.cil.yml</include>
<include>../programs/benchmarks/ntdrivers/floppy.i.cil-3.yml</include>
<include>../programs/benchmarks/ntdrivers/parport.i.cil-2.yml</include>
<include>../programs/benchmarks/systemc/toy.cil.yml</include>
      </tasks>

</rundefinition>

  <columns>
    <column title="total">Total time for CPAchecker</column>
    <column title="Analysis time">Time for Analysis</column>
    <column title="Verif time">Time for program analyis</column>
    <column title="Total val time">Total time for proof check algorithm</column>
    <column title="Proof read">Time for reading in proof (not complete time in interleaved modes)</column>
    <column title="Algorithms">Number of algorithms used</column>
    <column title="Combination time">Time to combine ARGs</column>
    <column title="Proof gen time">Time for proof writing</column>
    <column title="Proof size">Proof file size (bytes)</column>
    <column title="Proof states">Number of proof elements</column>
    <column title="Reached size">Size of reached set</column>
    <column title="Heap Mem">Used heap memory</column>
    <column title="Non-Heap Mem">Used non-heap memory</column>
  </columns>
</benchmark>
