# ----------------------------------------------------------------------
# This configuration file uses the Adjustable-Block Encoding CPA
# for predicate abstraction with CEGAR as described in
# "Predicate Abstraction with Adjustable-Block Encoding" (Beyer et.al.).
# It is configured for the Single-Block Encoding (SBE) case.
# ----------------------------------------------------------------------

# only paths to possible error locations are analyzed
cfa.removeIrrelevantForErrorLocations = true

analysis.useRefinement = true

cegar.refiner = cpa.predicate.PredicateRefiner

# ARTCPA is necessary for refinement and has to be the top-level CPA
cpa = cpa.art.ARTCPA

ARTCPA.cpa = cpa.composite.CompositeCPA

CompositeCPA.cpas = cpa.location.LocationCPA, cpa.callstack.CallstackCPA, cpa.relyguarantee.RelyGuaranteeCPA

# this automaton defines which locations are the error locations
specification = test/config/automata/ErrorLocationAutomaton.txt

cpa.relyguarantee.abstraction.cartesian = true
cpa.relyguarantee.blk.threshold = 1

# global variables 
cpa.relyguarantee.globalVariables = x, t1, t2
cpa.relyguarantee.abstraction.initialPredicates0 = test/config/various/pr-naivebackery-it9-thr0
cpa.relyguarantee.abstraction.initialPredicates1 = test/config/various/pr-naivebackery-it9-thr1

